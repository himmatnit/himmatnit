<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.09" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="" keyVect="UWUbkrV4RQ8m/yLT8L6YfQ==" exportKeySalt="f4dbcb80-d69a-4cb2-b479-6234f3a57579" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f28ea15b-55e3-493f-8061-23906dbe483f]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[1856]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[42]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[-571107983]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[LKM SAP BW to Oracle (SQLLDR)]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KL]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[377a84a4-c66d-45c0-86e0-58b5a3239b76]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1856]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Component: LKM SAP BW/BI
Author: Oracle

Description :
- Loading Knowledge Module to retrieve the data from SAP BW/BI systems
- The data file is loaded using Oracle SQLLDR

For first-time users please follow the Getting-Started-Guide for ODI SAP BW on the ODI OTN documentation page for pre-requisites, detailed installation instructions and examples.

Please also see ODI Application Adapter documentation for ODI AA for SAP BW.

The list of supported SAP versions and staging databases can be found in the ODI Certification matrix on OTN.

This KM requires ODI SAP Open Tool version 10.1.3.223(odi-sap.jar) or higher.
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2b5bbf45-6430-4394-8595-2afd0113a352]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1857]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[VALIDATE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Validate Option Values]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ce998dc8-c92a-4b28-bf3d-96394f224aa4]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1857]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether to validate all the Option values specified before executing the LKM]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[273dd09a-8097-4e70-96eb-a54a8eca879f]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1858]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_ABAP_CODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to indicate to upload]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2af00eea-80c3-4cb6-9cc6-4a6664b76b35]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1858]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether to upload the program for every interface execution.

For more details please see ODI Application AdapterGuide Section "Controlling ABAP Uploading / ABAP code in production".]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1d6a3add-fba3-44a5-b1ba-96d5ac912eac]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1859]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MANUAL_ABAP_CODE_UPLOAD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Manully Upload of ABAP Source Code.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[764e163d-78ff-4905-9411-c7e700931831]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1859]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Used to generate the SAP ABAP code file without uploading it to the SAP.

To generate the SAP ABAP code file for manual upload pass the value : Yes.

Default value : No

For more details please see ODI Application AdapterGuide Section "Controlling ABAP Uploading / ABAP code in production".]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f2938756-ac57-43e1-bcdb-5ebb89bf6c0d]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1860]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[EXECUTE_ABAP_CODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to indicate execution]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a08897ad-39fb-4831-831d-23955ecd6f77]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1860]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether to execute uploaded program.

For more details please see ODI Application AdapterGuide Section "Controlling ABAP Uploading / ABAP code in production".]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[df0d06c1-c0e0-4a20-9d90-5d7ea4999b94]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1861]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[673]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[ABAP_PROGRAM_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of the program]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1317a278-e8b4-48ee-ae66-44ece52da514]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1861]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Name of the ABAP program with which code is generated.

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[68b32fd6-a3cb-4847-a833-1ab0078fd392]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1862]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[131]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[BACKGROUND_PROCESSING]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag for Background processing]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f7a252b9-cf3b-4097-ac11-ca2c87bb73c3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1862]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[When set to No, ABAP extraction code will be executed as SAP dialogue process.

When set to Yes, ABAP extraction code will be executed as SAP background process.

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[87568b0b-af52-4f62-9b77-04ca0f380711]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1863]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[675]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[132]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[A]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[JOB_CLASS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Priority of background processing]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[aff00f50-f6bb-414f-9a04-82ecb10112f3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1863]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Priority of background processsing. 
Value Desc:
'A' is the higest priority, 
'B' is the normal priority,
'C' is the lowest priority.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[da27ffa2-f1c0-4307-963a-a5575fd93da3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1864]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[676]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<?=System.getProperty("java.io.tmpdir")+System.getProperty("file.separator")?>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[TEMP_DIR]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[FTP files are saved ]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d5e4cc24-a5d1-47a8-ab0a-14119927ab55]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1864]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Temporory directory where FTP files are downloaded.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[eccb2833-39bf-4645-938d-f595a5762bf6]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1865]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[677]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MAX_ALLOWED_ERRORS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Maximum allowed error -1]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5bf313c3-3df9-44b1-b281-85e16e5a06f9]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1865]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[When the number of discarded records is equal to MAX_ALLOWED_ERRORS the load process will stop.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8a147a69-8620-48c1-a401-f5e7529f1379]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1866]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[170]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DELETE_TEMPORARY_OBJECTS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to delete temp files]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[081a927c-7d74-4f14-89e5-72cbcc11f8ba]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1866]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to Indicate whether to delete temporay objects created.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5aae75ab-7494-42d0-8ed3-afd10d1f2183]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1867]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[679]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP_ODI_LKM_POOL_<%=odiRef.getInfo("SRC_CON_NAME")%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sap Connection Pool Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a97a4c2f-6cdd-49fd-85d7-d4391e022106]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1867]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Name of the SAP connection pool]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3c6edf22-9c21-4481-80a9-34e13a9582de]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1868]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[680]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[10]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[No of SAP connections in pool]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c2f8e810-4891-4af7-904c-0388d27cdd7d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1868]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Number of SAP connections to be maintained as a pool.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c50a7779-0dae-40a5-a591-021c208e74fc]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1869]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[681]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<%if(odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")){%>ZODI_FGR_PROD_<%=odiRef.getPop("I_POP")%><%}else{%>ZODI_FGR_PROD_<%=odiRef.getShortGuid(odiRef.getInfo("GUID_SRC_SET"),"BASE38",11)%><%}%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_FUNCTION_GROUP]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Funtional Group Name of SAP]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d4fdcca7-4561-4c52-8a15-38066e1c60df]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1869]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The name of the SAP function group where all generated ABAP programs will be uploaded.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e5920ee3-b4ea-4d7a-b27b-e7c457b1e73c]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1870]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[682]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_LKM_PCKG]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Package name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6767727f-5818-4b8b-9fbe-080b85d6826a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1870]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the SAP package name used for all ODI objects required during ODI SAP production use.

This SAP package name must exist prior to running the interface/mapping. It is created during RKM first-time installation, when RKM option SAP_PACKAGE_NAME_PROD is set to this SAP package name.

Only change if requested by SAP administrator and checked with ODI product support or for backwards compatibility:

For compatibility with ODI SAP ERP|BW Adapter installations prior to Build 32|23: ZODI_DEVCLASS | ZODIBW_PCKG

Default value: ZODI_LKM_PCKG]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e59a7004-327a-4bd4-bffc-d8b4c4124e16]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1871]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[683]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TRANSPORT_LAYER_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of SAP Transport layer]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cabf9e63-e8cf-4c8e-b2de-2ae1405a1a93]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1871]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Name of SAP Transport layer]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cd23ba9f-904d-41f2-b827-4cc8dbb4ba9f]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1872]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[684]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ODI:<%=odiRef.getStep("STEP_NAME")%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TRANSPORT_REQUEST_DESC]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Transport Request Desc]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[edfb4976-c685-4015-bb68-0953ac7fa942]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1872]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the description of the SAP transport request created by ODI for the function group defined by KM option SAP_FUNCTION_GROUP.

By default the ODI Step name (which is usually the interface/mapping name) will be used.

Any existing transport request description will be replaced.

Code generation expressions like ODI:<%=odiRef.getPackage("PACKAGE_NAME")%> may be useful when grouping several interfaces into one SAP function group/ SAP transport request.

Default: ODI:<%=odiRef.getStep("STEP_NAME")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2cd81aca-a0ba-472d-89e5-e948ed300fbb]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1873]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DATAFILE_PER_SESSION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Allow per session file name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[97363cdc-3c2b-4756-890d-9f24a22ecda6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1873]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines, whether the name of the data file, ctlfile, badfile, outfile sqlldr logfile, dscfile etc should have session ID for multiuser operation]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5559fa7a-570c-480e-8183-407ad4cbb9a4]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1874]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[686]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_REPORT_NAME_PREFIX]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Prefix of grouped ABAP Reports]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[db62a2a2-df9a-4d3b-8a1c-a3724932d041]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1874]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the prefix of all reports to be group into a common transport request and is used in conjunction with ABAP_PROGRAM_NAME.

Only applies if BACKGROUND=1.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6d7f49da-6a94-4c52-9be8-34c1adb8c3d7]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1875]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[290]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[TRUNCATE_OHD_AFTER_EXTRACTION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to indicate to truncate]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[46917d6d-ab2b-433d-89d9-8fd4744db053]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1875]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether truncate OpenHubDestination table after extraction or not, in case of delta load.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[010a3480-ee6a-4f0a-854e-1f212722cc5a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1876]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[CHECK_DATA_FOR_DELIMITERS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Checks delimiter char in data value]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[798f5744-ac47-4f9b-9beb-48a8b125e845]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1876]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[If set to true on delimited files, the ABAP program will validate any data field, whether it contains the delimiter character. Approriate action will be taken to handle the data values by raising exceptions.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1cac6683-3b3a-4022-bae4-c7561d48c79a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1877]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPDATE_LAST_REQID]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Max Request ID Fetch Flag]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[23e74775-6c5d-4672-b62c-9b3717af1ace]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1877]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[If set to "Yes" it will fetch latest Maximum Request ID from SAP BW system otherwise will use the previously extracted Maximum Request ID.

This KM option will be helpful during multiple interface execution in a package for incremental data loading. User can force LKM to send request to SAP system and read Maximum Request ID.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[65b3e2c2-5b8e-4658-a1a3-fc0973ab1f31]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1878]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[690]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FIRST_REQ_ID]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Start point of Delta Extraction]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[94ffa99e-4a34-4797-9c56-e0ef30fb1e9c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1878]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For Full Loading keep the default value i.e. "0"

For Delta Loading, define an ODI Variable (please follow steps defined in LKM User Manual) in your project and take value from that variable.
e.g. if you define a variable "MIN_REQUEST_ID", then set the value to "#MIN_REQUEST_ID"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1d9c2089-b517-46fe-b879-7174e2eaa966]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1879]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[691]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[330]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[LAST_REQ_ID]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[End point of Delta Extraction]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b434d789-a06b-4fd3-8006-8c00d027dc1d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1879]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For Full Loading keep the default value i.e. "0"

For Delta Loading get the latest Maximum Request ID from the SAP BW system. To get Maximum Request ID set the value as to- <@=odiSAPBWDeltaRef.getLastOrMaxReqId()@>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ba1db546-095b-4a64-ae8e-1bc1554793f6]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1880]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[692]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[340]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[PROCESS_CHAIN]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Open Hub Process Chain Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[05d1fbb5-6c2a-4dd6-ae4c-bf1d4316abcd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1880]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Process Chain is a set of steps defined in the SAP system during data extraction. For this LKM you need to enter the name of the Process Chain which will invoke Incremental data extraction from Open Hub Destination Tables. - Only applies to OHD extraction. Not used for extraction from other BW data targets.
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0e0a004a-89a7-4350-b1d3-cb3ff7341452]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1881]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[693]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[350]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[DELIMITED]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FILE_FORMAT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Delimited Value]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[77de271a-bfd4-4327-8c8c-96f37a32053d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1881]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Value either DELIMITED or FIXED]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9d95d725-da56-434d-82b6-9841a7fe22a9]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1882]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[694]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[360]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<@=""+(char)8@>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FIELD_SEPARATOR]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Column Seperator ]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[487cb89f-f4c6-4895-bd65-44af8044bbf8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1882]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Column Seperator character to be used to write data to the Flat File, default '0x06'. max 3 characters allowed]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a3d02363-1919-4eff-a7bc-149e30ce2b9d]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1883]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[695]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[370]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[FTP]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FTP_TRANSFER_METHOD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Data Transfer Method]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[44526d61-918c-4be6-8442-f00dc6b81e7a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1883]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specifies how the extracted data is transfered to the ODI agent machine. Permitted values are:

FTP:
SAP AS pushes data file to FTP server and ODI agent downloads data file from FTP server via FTP.

SFTP:
SAP AS pushes data file to FTP server and ODI agent downloads data file from FTP server via SFTP.

SCP:
SAP AS pushes data file to FTP server and ODI agent downloads data file from FTP server via SCP.

NONE:
SAP AS pushes data file to the FTP server installed on ODI agent machine.

FSMOUNT:
SAP AS writes data into file on shared directory of File Server. ODI agent copies the file from shared directory.

FSMOUNT_DIRECT:
SAP AS writes data into file on shared directory of ODI agent machine.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e6f4467c-f61c-446a-be47-807272ec0a77]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1884]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[380]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SQL_BASED_EXTRACTION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Type of extraction for Hierarchy]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fe114aa6-0cd6-4f50-93ad-0bcb6d438481]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1884]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Hierarchy data extraction type whether SQL based or Function Module based extraction. 

Use SQL based extraction, if each Hierarchy object has huge volume of data otherwise Function Module based extraction.

Default is Function Module based extraction.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0c9125b4-0ab7-43d8-b57a-6beb0b782089]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1885]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[390]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FTP_PASSIVE_MODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[FTP Mode]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ee0a1f70-3d52-4ba6-8386-f528e79d3f33]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1885]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify mode of FTP transfer.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[038dcc53-9b67-43e8-8a84-c55ccfa77bd4]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1887]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[1886]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[698]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[400]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[100000]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FILE_TRANSFER_TIMEOUT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[FTP Time out time]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1c1f13ee-c9c5-4715-a281-df1b94b37daf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1886]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[100000]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Text value]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_VALUE]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c6938538-6f3b-4622-8a50-7c22415c1b1d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1887]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify FTP transfer time out time.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c53550e2-20b7-4581-87fd-41e9c5d3329a]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1888]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[410]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SSH_COMPRESSION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Secure FTP compression parameter]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f4cbf37f-3f4b-4488-84ee-b9b8e2a305c5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1888]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify Yes to compress mode of transfer else no.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b66fd249-8a11-48c0-81bf-13650559d706]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1889]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[700]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[420]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SSH_IDENTITY_FILE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of the file for secure FTP]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9d8189da-6bf2-4a5c-b4cc-36a4bd095ba0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1889]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify the file name for secure FTP protocol.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[25762e21-fac5-46fb-819a-afc6bcf08352]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1890]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[701]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[430]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MAX_ROW_COUNT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Maximum rows to upload]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4bd7caa0-f831-4ca0-917d-de7fd9088e54]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1890]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[To extract maximum number of rows from SAP.
By default <Blank> that means will load all records.
User can pass numeric value e.g. 100, will load only 100 records.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[980b3e28-70a7-4499-b63a-0fb197383091]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1891]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[702]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[440]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[100000]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FETCH_BATCH_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Number of rows per ABAP fetch]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f1a0fe80-07a8-439a-a609-cc58392ee0f6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1891]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Number of rows to be fetched per loop cycle. 

By default 100000 lines are retrieved into SAP internal tables. This may lead to significant memory consumption when dealing with large volumes. Setting to values like 10000 or 100000 will reduce the required memory.

Please note that in FTP, SFTP, SCP mode all resulting data stored in internal table.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e21d6e3f-70c1-4bf6-b7e3-b4a45451dc11]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1892]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[703]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[450]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_APPOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sap Application Object Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fdbe7d6a-3095-4491-b17c-6b4548855a03]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1892]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application object name.

Default : ZODI_APPOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[63403b50-681f-4002-af90-98d2a1a066a0]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[1893]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[704]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[460]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_SUBOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_SUB_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sap application sub object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a15eca53-cb75-4bd1-af6a-cf24def1b721]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1893]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application sub object name.

Default : ZODI_SUBOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1894]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ebedec8f-58cd-40a5-98b1-f6e64a7868f9]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[90]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[13147bdf-ee5a-4b2f-9b75-526099f516e0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1894]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%
boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");
//KM Details
String skm = "LKM SAP BW to Oracle(SQLLDR)";
String skmVersion= "39";
String sMinOTVersion = "21";
String sMinODISAPcompVersion = "38";

//Generate ABAP program name
abapProgramName = "";
if (odiRef.getOption("ABAP_PROGRAM_NAME").length()>0) {
  abapProgramName = odiRef.getOption("ABAP_PROGRAM_NAME");
} else {
  abapProgramName = "ZODI_"+((isOdi10gOr11g)
  ?odiRef.getPop("I_POP")+"_"+odiRef.getInfo("I_SRC_SET") 
  :(odiRef.getShortGuid(odiRef.getInfo("GUID_SRC_SET"),"BASE38",16).replaceAll("#","")));
}

//To concatenate the PREFIX with the BG_REPORT_NAME
if (odiRef.getOption("BACKGROUND_PROCESSING").equals("1")){
   if(odiRef.getOption("SAP_REPORT_NAME_PREFIX").length() > 0)
   {
        abapProgramName = odiRef.getOption("SAP_REPORT_NAME_PREFIX")+abapProgramName;
    }
}
// Define path and file names
dataPathOnAgent = (odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE") || odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT_DIRECT")) ? odiRef.getInfo("SRC_WORK_SCHEMA") : odiRef.getOption("TEMP_DIR");
tempPathOnAgent = odiRef.getOption("TEMP_DIR");
if (!odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION") && odiRef.getPop("IS_CONCURRENT").equals("1")) {
	//when parallel target table load is enabled in ODI 12c, make file names unique:
	fileName = "<?=odiRef.getFormattedName(\u0022" + abapProgramName + "_%UNIQUE_STEP_TAG\u0022, \u0022FILE\u0022)?>";
} 
else if(odiRef.getOption("DATAFILE_PER_SESSION").equals("1")) {
	// when DATAFILE_PER_SESSION is active, make file names unique by appending
	fileName = abapProgramName+ "_" + odiRef.getSession("SESS_NO");
} else {
	// Otherwise just append context
	fileName = abapProgramName + "_" +odiRef.getContext("CTX_CODE");
}
dataBaseFileName = dataPathOnAgent + fileName;
tempBaseFileName = tempPathOnAgent + fileName;

dataFileOnAgent = dataBaseFileName + ".txt";
dataFileName = fileName + ".txt";
ctlFileName = tempBaseFileName + ".ctl";
badFileName = tempBaseFileName + ".bad";
dscFileName = tempBaseFileName + ".dsc";
outFileName = tempBaseFileName + ".out";
sqlldrLogFile = tempBaseFileName + ".log";
otLogFileName = (!isOdi10gOr11g)?"":odiRef.getOption("LOG_FILE_NAME");

// RFC Name
//ABAP_PROG_NAME = odiRef.getOption("ABAP_PROGRAM_NAME");
EXECUTE_ABAP_CODE = odiRef.getOption("EXECUTE_ABAP_CODE");
HOST = odiRef.getInfo("SRC_DSERV_NAME");
USER = odiRef.getInfo("SRC_USER_NAME");
PASSWORD = odiRef.getInfo("SRC_PASS");
SAP_FUNCTION_GROUP =odiRef.getOption("SAP_FUNCTION_GROUP");
SAP_CONNECTION_POOL = odiRef.getOption("SAP_CONNECTION_POOL");
SAP_CONNECTION_POOL_SIZE = odiRef.getOption("SAP_CONNECTION_POOL_SIZE");
FILE_DELIMITER = odiRef.getOption("FIELD_SEPARATOR");
FTP_PASSIVE_MODE = odiRef.getOption("FTP_PASSIVE_MODE");
FILE_TRANSFER_TIMEOUT = odiRef.getOption("FILE_TRANSFER_TIMEOUT");

// BW_LKM_DIR 
 BW_LKM_DIR = odiRef.getOption("TEMP_DIR");

/****************************************************************************************
**********************************(ODI BW LKM Class Initialization)**********************
*****************************************************************************************/
//ODI BW LKM Logger
logFile = "";
if (isOdi10gOr11g){//if ODI 10g/11g
	logFile = System.getProperty("java.io.tmpdir")+ System.getProperty("file.separator")+"ZODI_"+odiRef.getPop("I_POP")+"_"+odiRef.getInfo("I_SRC_SET")+".genlog";
}
commonResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();
commonResourceBundle.initializeResource("sap_lkm_bw");
resourceBundle = commonResourceBundle.getResourceBundle();
odiSapBwLogger =  OdiSapBwLogger.getLogger(logFile, resourceBundle);
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"In initialize step...."});
//odiSapBwLogger = new OdiSapBwLogger(logFile, resourceBundle);
odiSapBwLang = OdiSAPBWLang.getInstance(commonResourceBundle);

//odiSapBwLogger = new OdiSapBwLogger(logFile);
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### Inside Initialize 1  ####"} );

// ODI Mapping
map = new OdiSAPBWMapping(odiSapBwLogger);
String replacePattern = odiRef.getSrcTablesList("(", ""+(char)92+(char)92+"Q[POP_TAB_ALIAS]"+(char)92+(char)92+"E", "|", ")") + odiRef.getSrcColList(""+(char)92+(char)92+"."+(char)34+"(", ""+(char)92+(char)92+"Q[COL_NAME]"+(char)92+(char)92+"E", ""+(char)92+(char)92+"Q[COL_NAME]"+(char)92+(char)92+"E", "|", ")"+(char)34);
//map.setReplacePattern(replacePattern);

String colList = odiRef.getColList("", "|[EXPRESSION]|", ", ", "");
//map.setColList(colList);
// ExtractMapping
em = new OdiSAPBWExtractMapping(map,odiSapBwLogger,odiSapBwLang);
em.firstReqId = odiRef.getOption("FIRST_REQ_ID");
em.lastReqId = odiRef.getOption("LAST_REQ_ID");
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### Inside Initialize 4  ####"} );
if (odiRef.getSrcColList("", "|[COL_NAME]|", "|[COL_NAME]|", "", "").indexOf("|OHREQUID|") > -1) {
	em.isOHREQUIDAvailable = true;
}
// ODI BW Ref
 bwRef = new OdiSAPBWRef(em,odiSapBwLogger,odiSapBwLang);
%>

<@
logFile = "";
<% if (odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION"))  { /*if ODI 10g or 11g*/ %>
String sSapCharacterset = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CHARACTER_SET")?>";

String sapLanguage = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_LANGUAGE")?>";
String sapSystemNumber = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_NUMBER")?>";
String sapClient = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CLIENT" )?>";
//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSHOST")?>";
String msService = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSSERV" )?>";
String msR3Name = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_ID" )?>";
String msGroupName = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_GROUP" )?>";
String sncPartner = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_PARTNERNAME" )?>";
String sncClient = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_MYNAME" )?>";
String sncQOP = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_QOP" )?>";
//Fetching SAP Temp Dir
String sap_TempDir = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_DIR" )?>";
logFile = "<%=odiRef.getOption("TEMP_DIR")%>"+"DELTA_ZODI_"+"<%=odiRef.getPop("I_POP")%>"+"_"+"<%=odiRef.getInfo("I_SRC_SET")%>"+".log";
<%} else { /*if ODI 12C*/%>
String sSapCharacterset = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CHARACTER_SET" )?>";
String extractTimeout = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_EXTRACT_TIMEOUT" )?>";
String sapLanguage = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_LANGUAGE" )?>";
String sapSystemNumber = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_NUMBER" )?>";
String upload = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ALLOW_ABAP_UPLOAD" )?>";
String sapClient = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CLIENT" )?>";
//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSHOST" )?>";
String msService = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSSERV" )?>";
String msR3Name = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_ID" )?>";
String msGroupName = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_GROUP" )?>";
String sncPartner = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_PARTNERNAME" )?>";
String sncClient = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_MYNAME" )?>";
String sncQOP = "<?=odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_QOP" )?>";
<%}%>
/***********************************************************************************************
***********************************(ODI BW Delta LKM Class Initialization)**********************
************************************************************************************************/
// ODI BW LKM Logger
int sapcontype = oracle.odi.sap.km.OdiSapConnection.getSAPConnectionType("<%=odiRef.getInfo("SRC_DSERV_NAME")%>",sncPartner,msHost);
commonResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();
commonResourceBundle.initializeResource("sap_lkm_bw");
resourceBundle = commonResourceBundle.getResourceBundle();
odiSapBwLogger =  OdiSapBwLogger.getLogger(logFile, resourceBundle);
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"In initialize step.: BW Delta..."});
//odiSapBwLogger = new OdiSapBwLogger(logFile, resourceBundle);
odiSapBwLang = OdiSAPBWLang.getInstance(commonResourceBundle);

//Setting Parameters for type of SAP Connection
            oracle.odi.sap.km.OdiSapConnection sapConnection = new oracle.odi.sap.km.OdiSapConnection();
            sapConnection.setSAP_CONNECTION_TYPE(sapcontype);
            sapConnection.setSAP_CLIENT_NO(sapClient);
            odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"SAP Client No: " + sapConnection.getSAP_CLIENT_NO()});
            sapConnection.setSAP_USER_NAME("<%=odiRef.getInfo("SRC_USER_NAME")%>");
            odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP User Name: "+sapConnection.getSAP_USER_NAME()});
            sapConnection.setSAP_LANGUAGE(sapLanguage);
            odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Language: "+sapConnection.getSAP_LANGUAGE()});                                
            switch (sapcontype) {
                case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION: {
                    sapConnection.setSAP_HOST_NAME("<%=odiRef.getInfo("SRC_DSERV_NAME")%>");
                     odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Host Name: "+sapConnection.getSAP_HOST_NAME()});                   
                    sapConnection.setSAP_PWD(snpRef.getInfo("SRC_PASS"));
                    sapConnection.setSAP_SYSTEM_NO(sapSystemNumber);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP System No: "+sapConnection.getSAP_SYSTEM_NO()});
                }
                ;
                break;
                case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION: {                    
                    sapConnection.setSAP_HOST_NAME("<%=odiRef.getInfo("SRC_DSERV_NAME")%>");
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Host Name: "+sapConnection.getSAP_HOST_NAME()});
                    sapConnection.setSAP_SYSTEM_NO(sapSystemNumber);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP System No: "+sapConnection.getSAP_SYSTEM_NO()});
                    sapConnection.setSAP_SNC_CLIENT(sncClient);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP SNC Client Name: "+sapConnection.getSAP_SNC_CLIENT()});
                    sapConnection.setSAP_SNC_PARTNER(sncPartner);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP SNC Partner Name: "+sapConnection.getSAP_SNC_PARTNER()});
                    sapConnection.setSAP_SNC_LEVEL(sncQOP);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP SNC Level: "+sapConnection.getSAP_SNC_LEVEL()});    
                }
                ;
                break;
                case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: {
                    sapConnection.setSAP_USER_NAME("<%=odiRef.getInfo("SRC_USER_NAME")%>");
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP User Name: "+sapConnection.getSAP_USER_NAME()});
                    sapConnection.setSAP_PWD(snpRef.getInfo("SRC_PASS"));
                    sapConnection.setSAP_MSG_HOST(msHost);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Message Host Name: "+sapConnection.getSAP_MSG_HOST()});
                    sapConnection.setSAP_SERV_NAME(msService);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Service Name: "+sapConnection.getSAP_SERV_NAME()});
                    sapConnection.setSAP_LOGON_GROUP(msGroupName);//must be CASE-Sensitive
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Group Name: "+sapConnection.getSAP_LOGON_GROUP()});
                    sapConnection.setSAP_R3NAME(msR3Name);
                    odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP R3 Name: "+sapConnection.getSAP_R3NAME()});                    
                }
                ;
                break;
            }
            sapConnection.setSAP_CONNECTION_POOL_NAME("<%= odiRef.getOption("SAP_CONNECTION_POOL")%>");
            odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Connection Pool Name: "+sapConnection.getSAP_CONNECTION_POOL_NAME()});
            sapConnection.setSAP_CONNECTION_POOL_SIZE("<%= odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>");
            odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] {"SAP Connection Pool size: "+sapConnection.getSAP_CONNECTION_POOL_SIZE()});
// end of new connection changes

//odiSapBwLogger = new OdiSapBwLogger(logFile);
odiSAPBWDeltaRef = OdiSAPBWDeltaRef.getInstance(odiSapBwLang,odiSapBwLogger,sapConnection);

// UPDATE_LAST_REQID
String flag = "<%=odiRef.getOption("UPDATE_LAST_REQID")%>";
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### flag ## "+flag} );
//odiSAPBWLogger.log("### flag ## "+flag);
 if(flag.equalsIgnoreCase("1")){
	odiSAPBWDeltaRef.resetLastReqId(true); 
	odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### UPDATE_LAST_REQID FLAG######  TRUE  ####"} );
} else{
	odiSAPBWDeltaRef.resetLastReqId(false); 
	odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### UPDATE_LAST_REQID   FLAG ##### FALSE  ####"} );
}                        
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Source Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[COL_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1895]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4bd3313c-9a0a-4a3c-86b9-c76a931ed3d2]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[879]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[330]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Delete Temporary Files]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7abe54c5-ea0f-42f7-970d-4a5b5eedf46f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1895]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
# tempDir variable is depricated from build 20 after fixing per session file bug (Bug 13575872)
tempDir = r"""<% if (odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE") || odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT_DIRECT")) {%><%=odiRef.getInfo("SRC_SCHEMA")%><%} else {%><%=odiRef.getOption("TEMP_DIR")%><%};%> """.rstrip()

# Delete local control file
try:
  os.remove(r"""<%=ctlFileName%>""" )
finally:
  pass

# Delete local data file
try:
  os.remove(r"""<%=dataFileOnAgent%>""" )
finally:
  pass

<%if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT")) { %>
		
# Delete data file on file server
try:
  os.remove(r"""<%=odiRef.getInfo("SRC_SCHEMA")%><%=dataFileName%>""" )
finally:
  pass
	
<%}/*end of if(FTP_Transfer_Method equals FSMOUNT)*/%>

tempDir = None

<? } ?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1896]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ca2cd9be-b84b-41ac-ae32-e865d953d87d]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[880]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize (KM specific)]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e91d5ac9-799f-4b4b-8caf-ebe4c05943b3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1896]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Intentionally left blank
<% leadingSigns = false; //All numbers must have trailing signs for the ODI sqlldr driver%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1897]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[65075759-caad-4638-8a93-1126a96b7f86]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[881]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Validate]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[97437f03-d8ef-4f66-944e-0e100108937a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1897]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[  <%   
       String ftpTransferMethod=odiRef.getOption("FTP_TRANSFER_METHOD"); 

	if(!(ftpTransferMethod.equalsIgnoreCase("SCP") || ftpTransferMethod.equalsIgnoreCase("FTP") || ftpTransferMethod.equalsIgnoreCase("NONE") || ftpTransferMethod.equalsIgnoreCase("SFTP") || ftpTransferMethod.equalsIgnoreCase("FSMOUNT_DIRECT") || ftpTransferMethod.equalsIgnoreCase("FSMOUNT"))) {
%>

	if(<?=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")?>){ 
        
		throw new Exception("Invalid FTP_TRANSFER_METHOD Option value, Supported values are NONE, FTP, SFTP, SCP, FSMOUNT_DIRECT and FSMOUNT : " + ftpTransferMethod);
	}else{
		throw new OdiKMException("Invalid FTP_TRANSFER_METHOD Option value, Supported values are NONE, FTP, SFTP, SCP, FSMOUNT_DIRECT and FSMOUNT : " + ftpTransferMethod);
                
      	}
    <%    
    }
%>

//Checking the FTP and FSMOUNT path for trailing [Back]slash
String ftp_fsmount_Path =  <?=odiRef.getQuotedString(odiRef.getInfo("DEST_SCHEMA"))?>;
if(ftp_fsmount_Path.isEmpty()){
	throw new Exception("FTP/FSMOUNT path must not be blank");
}else if(!(ftp_fsmount_Path.endsWith(""+(char)92) || ftp_fsmount_Path.endsWith(""+(char)47))){
  	throw new Exception("FTP/FSMOUNT path("+ftp_fsmount_Path+"), must ends with trailing [back] slash");
}

<%
//Checking the SAP Temp Work Directory Path for trailing [Back]slash
String sap_TempDir ;
String sap_TempLogicalName;
if(odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")){
%>

 sap_TempDir = <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_DIR" ))?>;
 sap_TempLogicalName= <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_LOGICAL_NAME" ))?>;
<%
}
else{
%>
sap_TempDir = <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_DIR" ))?>;
 sap_TempLogicalName= <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_LOGICAL_NAME" ))?>;
<%
}
%>
if(!sap_TempDir.isEmpty() && !sap_TempLogicalName.isEmpty())
{
	throw new Exception("Please enter either SAP Temporary Directory path or SAP Temporary Directory Logical Name.");
}
if((!sap_TempDir.isEmpty() && (sap_TempDir.contains("\\") || sap_TempDir.contains("/")) && !(sap_TempDir.endsWith("\\") || sap_TempDir.endsWith("/")))){
	throw new Exception("SAP TEMP Directory Path ("+sap_TempDir+"), must end with trailing [back] slash");
}]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1898]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[13834746-fbc8-4a43-928e-72b20cf8e9c0]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[882]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Drop Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2c492d37-bf19-4e74-a358-f02e108b6740]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1898]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[drop table <%=snpRef.getTable("L", "COLL_NAME", "W")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1899]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[640fb823-7e9c-487a-948c-4b00148299b8]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[883]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Alter Session]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[eff0d265-f0fb-44b4-b666-abebf97989c1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1899]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if ( odiRef.getInfo("DEST_TECHNO_NAME").equalsIgnoreCase("ORACLE") ) {%>
alter session set nls_length_semantics = 'CHAR'
<% } else { %>
-- Skipped, as staging technology is not Oracle
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fbef3ad8-b9b3-42d8-984a-066444ae2096]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[884]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Report number of Rows(Details)]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6f468b25-b131-4f07-bb7f-1173b34d8873]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1900]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
#Report number of rows in details
# Output summary to log
raise "\nThis message is not an error. It lists the number of rows processed by SQLLoader Utility\nNb Rows Report", strprt
<?}?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1901]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[39810a11-32e9-4aec-9546-dc9333bbbbfa]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[885]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[350]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Drop Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[df900800-89a2-4a3f-bd4c-8ed4b955a134]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1901]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[drop table <%=snpRef.getTable("L", "COLL_NAME", "W")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1902]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ba5fb10e-b2f5-4a82-abec-cdb04b493b9f]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[886]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[360]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Truncate OHD Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ecfa0c9e-f7ee-49ef-89cb-6021f4130ca8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1902]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%if( type.equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION) ) {%>
_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_TRUNC_OHD_<%=odiRef.getPop("I_POP")%>" "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>"  "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=OH_DBTABLE,RSBTABNAME;IV_REQUID_L,/BI0/SREQUID-SID;IV_REQUID_H,/BI0/SREQUID-SID" "-FIRST_REQ_ID=<%=odiRef.getOption("FIRST_REQ_ID")%>" "-LAST_REQ_ID=<%=odiRef.getOption("LAST_REQ_ID")%>" "-OPENHUB_TABLE=<%=tableName%>" "-LOG_FILE_NAME=<%=odiRef.getOption("LOG_FILE_NAME")%>_TruncateOHD.opentool.log" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
*******************************
**OpenHubDestination truncation
*******************************

<%if(odiRef.getSrcColList("", "|[COL_NAME]|", "|[COL_NAME]|", "", "").indexOf("|OHREQUID|") > -1) {%>
if IV_REQUID_L is initial and
IV_REQUID_H is initial.
DELETE FROM (OH_DBTABLE).
else.
DELETE FROM (OH_DBTABLE) WHERE 
OHREQUID GT IV_REQUID_L AND 
OHREQUID LE IV_REQUID_H.
endif."
<%}else {%>
DELETE FROM (OH_DBTABLE)."
<%}//end of else condition%>
<%}//end of if( type.equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION)) condition%>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1903]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[175c1f23-57fd-4ce0-a345-c1642df7601e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[887]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[340]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Release Resources]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ede61a79-2587-4ece-922c-602fd121e1ba]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1903]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%

//de-allocate collection object & other global variables

//Get FTP Details step objects
sFtpServerName = null;
sFtpPath = null;
sFtpLocalPath = null;
sFtpUsername = null;
sFtpPasswordEnc = null; 
sFtpPassword = null; 

// repo connection objects
jdbcCon = null;
sqlStmt = null;
rs = null;
count = null;

//Extract ODI Mapping step objects
em = null;
fromTables = null;
cols = null;
colFF = null;
filter = null;
joinList = null; 
targtCols = null;
from = null;
hierarchyNameFilterValue = null;
hierarchyDateToFilterValue = null;

//flex field tables
rTabs = null;

//Initialize step objects
ABAP_PROG_NAME = null;
EXECUTE_ABAP_CODE = null;
HOST = null;
USER = null;
PASSWORD = null;
SAP_FUNCTION_GROUP_NAME = null;
SAP_CONNECTION_POOL = null;
SAP_CONNECTION_POOL_SIZE = null;
FILE_DELIMITER = null;
FTP_PASSIVE_MODE = null;
FILE_TRANSFER_TIMEOUT = null;
DATA_FILE = null;
BW_LKM_DIR = null;

//logger class except delta logger
odiSAPBWLogger = null;

logFile = null;
sapLogger = null;

//Interface Metadata Helper
iHelper = null;
// ODI Mapping
 map = null;
//SAP api class 
odiSAPRef = null;
//delta class object
odiSAPBWDeltaRef = null;
%>

//Closing of delta logger class
<@
odiSAPBWLogger = null;
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1904]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ff2540b1-9a61-4141-91b7-7e6a5bdb0e1c]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c54ffbec-f889-4c08-bee6-5e4cf797477d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1904]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%
/*
* ****************************************************************
* ****************************************************************
* ODI-SAP BW Full Data Extraction Source code
* ****************************************************************
* ****************************************************************
*/
//Start of OdiSapBwLogger.java

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
//import java.io.IOException;
import java.io.PrintStream;
import java.util.Locale;
import java.util.ResourceBundle;
//import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
//import java.util.logging.SimpleFormatter;


public class OdiSapBwLogger {
	private Logger mLogger = null;
	private PrintStream mLogPs = null;
	//private Logger mLogPsNew = null;
	//static private FileHandler fileTxt;
	//static private SimpleFormatter formatterTxt;
	private String resourceMessage = "";
	public String baseResourceName = null;
	private ResourceBundle messages = null;
	private LogRecord record = null;
	private String logFile = "";
	private ResourceBundle resourceBundle;
	static OdiSapBwLogger loggerInstance;

	/** For backwards compatibility:
	The OT should use file based logging as long as the "LOG_FILE" parameter is provided. Even in 12c!
	The KM will suppress this parameter, as soon as gen'ed in 12c. 
	* @throws OpenToolExecutionException 
	*/
	
	
	
	public static OdiSapBwLogger getLogger(String logFileName, ResourceBundle resourceBundle) throws Exception {
		//Check the instance of the singleton class
		if (loggerInstance == null) {
			loggerInstance = new OdiSapBwLogger(logFileName, resourceBundle);		
		} 
		return loggerInstance;
	}
	
	public static OdiSapBwLogger getLogger()throws Exception {
		return loggerInstance;
	}
	
	public OdiSapBwLogger(String logFileName, ResourceBundle rBundle){
		this.resourceBundle = rBundle;
		this.logFile = logFileName;
		initLogger();
	}
	
	
	/**
	* Initialize logger
	*/
	private void initLogger() {
		try {
			// Do we have a logger?
			if (mLogger == null && mLogPs == null) {
				// Has the LOG_FILE_NAME parameter been passed to this OT?
				// If so we assume that the OT is used in a 10g or 11g version of ODI 
				// and we use file based logging
				if (logFile != null) {
					// Empty file name provided? => use standard file name 
					if (logFile.equals("")) {
						String logFileName = new File(System.getProperty("java.io.tmpdir"),"OdiSapBwLkm.genlog").toString();
						//mLogPsNew = Logger.getLogger("");
						//fileTxt = new FileHandler(logFileName);
						mLogPs = new PrintStream(new FileOutputStream(logFileName));
					} else {
						// Otherwise use given log file name
						//mLogPsNew = Logger.getLogger("");
						//fileTxt = new FileHandler(logFile);
						// Create txt Formatter
						//formatterTxt = new SimpleFormatter();
						//fileTxt.setFormatter(formatterTxt);
						//mLogPsNew.addHandler(fileTxt);
						mLogPs = new PrintStream(new FileOutputStream(logFile));
					}
				} else {            
					// This OT executes in ODI 12c or later and we can use ODI's logger
					mLogger = Logger.getLogger("oracle.odi.km");
				}
			}
		} catch(FileNotFoundException ex) {
			throw new RuntimeException("Exception during Logger initialization: "+ ex.getMessage());
		} 
		
	}//end of initLogger() method
	
	
	private void log(Level level, String messageId, String message, Object[] args) {
		//record.setResourceBundle(new OdiSapOTLoggerResourceBundle(messageId, message));
		//	baseResourceName = "sap_lkm_bw";
		//	messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.getClass().getClassLoader());
		//	messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.caller.getClass().getClassLoader());//class loader changed due to 12c issue
		record = new LogRecord(level, messageId);
		record.setResourceBundle(resourceBundle);
		record.setParameters(args);
		// Are we using a logger?
		if (mLogger != null) {
			mLogger.log(record);
		};
		// Are we using a log file?
		if (mLogPs != null) {
			String result = record.getLevel() + ": "+ record.getResourceBundle().getString(messageId)+ ": ";
			
			Object[] objParams = record.getParameters();
			if (objParams == null)
			result += "<null>\n";
			else
			for (int i = 0; i < objParams.length; i++)
			result += objParams[i].toString() + ": ";
			mLogPs.println(result);
			//mLogPs.println(record.toString());
		}
	}//end of log() method
	
	/**
	* Return resource string
	* @param messageId
	* @return
	*/
	private String getResourceString(String messageId) {
		// existing code to retrieve string from property file
		if (resourceMessage.equalsIgnoreCase("!!! BUNDLE " + baseResourceName + " !!!")) {
			return resourceMessage;
		} else {
			try {
				return resourceBundle.getString(messageId);
			} catch (Exception e) {
				//sapLogger.log(sapLogger.INFO, "Exception in getResourceString() -----: "+e);
				return "### KEY " + baseResourceName + " / " + messageId + "###"; //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$
			}
		}
	}//end of method
	
	public void setMessages(String resourceMsg) {
		this.resourceMessage = resourceMsg;
	}
	
	public void severe(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log( Level.SEVERE, messageId, getResourceString(messageId), args );
	}//end of method
	
	public void warn(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log( Level.WARNING, messageId, getResourceString(messageId), args );
	}//end of method
	
	public void fine(String messageId, String message, Object[] args) {
		// message text for trace messages is not externalized 
		log( Level.FINE, messageId, message, args );
	}//end of method
	
	
}//end of inner class _OdiLog

// Start of OdiSAPBWLang.java
import java.text.MessageFormat;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;


/**
* OdiSAPBWLang.java
* This class is used for getting the values from corresponding language property file.
*/
public class OdiSAPBWLang {
	
	
	ResourceBundle rb = null;
	
	//Constant Variable Declaration	
	public static final String UNSUPPORTED_INTERFACE = "ODIKM-SAPBW-LKM-10017";
	public static final String UNSUPPORTED_DATA_TARGET = "ODIKM-SAPBW-LKM-10001";
	public static final String FUNCTION_TIMED_OUT = "function_timed_out";
	public static final String INVALID_LEFT_OUTER_JOIN = "ODIKM-SAPBW-LKM-10002";
	public static final String UNSUPPORTED_JOIN = "invalid_join";
	public static final String UNSUPPORTED_OHD_DELTA = "ODIKM-SAPBW-LKM-10003";
	
	
	//Extract Mapping
	public static final String N0_VALID_TEMLPATE_MAPPING = "ODIKM-SAPBW-LKM-10006";
	public static final String N0_TEMLPATE_IO_TXT_EXTRACTION = "ODIKM-SAPBW-LKM-10007";
	public static final String INCORRECT_SOURCE_ORDERING = "ODIKM-SAPBW-LKM-10008";
	public static final String SINGLE_COLUMN_EXCEPTION  = "ODIKM-SAPBW-LKM-10014";
	public static final String IC_IO_COLUMN_EXCEPTION = "ODIKM-SAPBW-LKM-10009";
	public static final String NO_COLUMN_MAPPED_EXCEPTION = "ODIKM-SAPBW-LKM-10010";
	public static final String SAME_COLUMN_EXCEPTION = "ODIKM-SAPBW-LKM-10011";
	public static final String OHD_CLMN_DFFERENT_LOCATION = "ODIKM-SAPBW-LKM-10012";
	public static final String GET_TABLE_EXCEPTION = "ODIKM-SAPBW-LKM-10013";
	public static final String NO_IO_COLUMN_MAPPED_EXCEPTION = "ODIKM-SAPBW-LKM-10015";
	public static final String CONNECTION_EXCEPTION_RAISED = "JCO_Exception_is_raised_during_the_execution";
	public static final String INVALID_HIERARCHY_FILTER = "ODIKM-SAPBW-LKM-10016";
	
	//JCo Connection
	public static final String EXCEPTION_JCO_CONNECTION = "ODIKM-SAPBW-LKM-10004";
	
	public static final String ERROR_IN_MAXID = "ODIKM-SAPBW-LKM-10005";
	
	
	//property files	
	public static final String PROPERTY_FILE = "sap_lkm_bw";
	
	public static final String EMPTY_STRING = "EMPTY STRING";
	public static final String NO_TRANSLATION = "NO TRANSLATION";
	public static final boolean NO_PROPERTY_FILE = true;	
	private boolean resourceMessage = false;
	private oracle.odi.sap.km.CommonResourceBundle commonResourceBundle;
	
	
	/*
	*Logger 
	*/	
	OdiSapBwLogger logger;
	private static OdiSAPBWLang lang;
	
	public static OdiSAPBWLang getInstance(oracle.odi.sap.km.CommonResourceBundle commonResourceBundle){
		this.commonResourceBundle = commonResourceBundle;
		if(lang == null)
		{
			lang = new OdiSAPBWLang(commonResourceBundle);
		}
		return lang;
	}
	
	// Constructor for ODI
	public OdiSAPBWLang(oracle.odi.sap.km.CommonResourceBundle commonResourceBundle) {	
		
		try {				
			// logger = odiSAPBWLogger;
			logger =  OdiSapBwLogger.getLogger();
			//	rb = ResourceBundle.getBundle("oracle/odi/sap/km/"+PROPERTY_FILE, Locale.getDefault(), this.getClass().getClassLoader());
			//	rb = ResourceBundle.getBundle("oracle/odi/sap/km/"+PROPERTY_FILE, Locale.getDefault(), this.caller.getClass().getClassLoader());//class loader changed due to 12c issue
		} catch (Exception e) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"initializeResource() - e: "+e.getMessage()} );
			setMessages(NO_PROPERTY_FILE); 
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"LKM  ODISAPBWResourceBundle || initializeResource()"} );
	}

	
	public String getValue(String pKeyName) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"LKM resourceMessage: "+resourceMessage} );
		if (resourceMessage) {
			return NO_TRANSLATION;
		} else {
			try {
				return commonResourceBundle.getString(pKeyName);
			} catch (Exception e) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Exception in getResourceString() LKM -----: "+e.getMessage()} );
				return EMPTY_STRING; 
			}
		}
	}

	public String getValue (String pKeyName, Object[] pParams) {
		return MessageFormat.format( getValue( pKeyName ), pParams );
	}
	
	private void setMessages(boolean resourceMsg) {
		this.resourceMessage = resourceMsg;
	}
	
}
// End of OdiSAPBWLang.java


// Start of UnSupportedDataTargetException.java
public class UnSupportedDataTargetException extends Exception {

	public UnSupportedDataTargetException(String msg){
		super(msg);
	}
}
// End of UnSupportedDataTargetException.java

// Start of UnSupportedJoinException.java

/**
* This exception will be thrown to report invalid join condition
* on ODI Mapping
* 
*/
public class UnSupportedJoinException extends Exception {
	public UnSupportedJoinException(String msg){
		super(msg);
	}
}
// End of UnSupportedJoinException.java

// Start of UnSupportedJoinTypeException.java

/**
* This classes throws Exception if it is not a LEFT OUTER JOIN 
*/
public class UnSupportedJoinTypeException extends Exception{

	public UnSupportedJoinTypeException(String msg) {
		super(msg);		
	}	
	
}
// End of UnSupportedJoinTypeException.java

// Start of UnavailableABAPTemplateException.java
/**
* This classes throws Exception if the Interface Mapping Type is not ODS-DSO, InfoObject,
*  InfoCube, OpenHub Destination and Cube_IOBJ Join
*/
public class UnavailableABAPTemplateException extends Exception {

	public UnavailableABAPTemplateException(String msg) {
		super(msg);		
	}	
}
// End of UnavailableABAPTemplateException.java


// Start of UnSupportedColumnException.java

public class UnSupportedColumnException extends Exception{

	public UnSupportedColumnException(String msg) {
		super(msg);		
	}	
	
}
// End of UnSupportedColumnException.java

//Start of MissingMetadataException.java class
/**
* 
* @author Oracle
*
*/
public class MissingMetadataException extends Exception {
	
	public MissingMetadataException(String msg) {
		super(msg);
	}

}//end of MissingMetadataException class
//End of MissingMetadataException.java class

// Start of OdiSAPBWMapping.java
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.LinkedHashMap;



/**
* Data Transfer Class to hold all ODI Interface mapping details
*/
public class OdiSAPBWMapping {
	
	final String DOT = ""+(char)46;
	final String UNDERSCORE= ""+ (char)95;
	final String EC = "" + (char) 92;

	String className = getClass().getName();
	/**
	* Data Store Type: 
	* ["InfoCubes", "InfoObjects", "ODS/DSO", "OHD"] 
	*/
	String dataStoreType = "";
	
	/**
	* List of selected source tables on the interface
	* Input Parameter [RES_NAME] AS [POP_TAB_ALIAS]
	*/
	String srcTables = "";
	
	/**
	* List of selected Source Table columns mapped to Target columns
	* 
	* ODI return value: 0CDS_DS04.DOC_NUMBER, 0CDS_DS04.RECORDMODE
	* Extracte only column names:
	* DOC_NUMBER, RECORDMODE
	*/
	// added to handle unique column name
	String uniqueselectedSrcCols = "";
	/**
	Gets List of all selected unique column name of src columns
	*/
	
	String selectedSrcCols = "";
	
	/**
	* List of all source table columns and their flexfield values seperated by ~
	* e.g. SRC_COL_NAME~FLEXFIELD1~FLEXFIELD2
	* 
	* Get FlexField values for selected fields of Src Table (SAP Data Target)
	* 1. Get List of all selected columns from mapping expression using 
	* 	  odiRef.getColList("", "[EXPRESSION]", "", "");
	* 2. Get List of all Source Table columns and their FlexField values using
*    odiRef.getSrcColList("", "[COL_NAME~[FLEXFIELD1]~[FLEXFIELD2]~[FLEXFIELD3]", "", "")
	*    
	* FixMe: we need to follow specific order of Src FlexField data
	*/
	String colFlexFields = "";
	
	/**
	* List of Target Columns
	*/
	String targetCols = "";
	
	/**
	* List of Filter rules
	*/
	String filters = "";
	
	/**
	* List of Joins
	*/
	String joins = "";
	
	/**
	* odiRef.getFrom() to check join type 
	*/
	String from = "";
	
	OdiSapBwLogger logger;
	
	//Build search expression for all source columns
	String replacePattern = odiRef.getSrcTablesList("(", ""+(char)92+(char)92+"Q[POP_TAB_ALIAS]"+(char)92+(char)92+"E", "|", ")") + odiRef.getSrcColList(""+(char)92+(char)92+"."+(char)34+"(", ""+(char)92+(char)92+"Q[COL_NAME]"+(char)92+(char)92+"E", ""+(char)92+(char)92+"Q[COL_NAME]"+(char)92+(char)92+"E", "|", ")"+(char)34);


	
	public OdiSAPBWMapping(OdiSapBwLogger sapBWlogger) throws Exception {
		this.logger = sapBWlogger;
	}
	
	//Remove double quotes from any source column names
	public String removeDqsFromSourceColumnReferences(String input) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Pattern--: "+ replacePattern} );
		String cleaned = input.replaceAll(replacePattern, "$1.$2");
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Processed input--: "+ cleaned} );
		return cleaned;
	}
	
	//Checks the existence of the provided input in the mapped columns
	public boolean isColMapped(String input){
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"isColMapped(String input)"} );
		return removeDqsFromSourceColumnReferences(odiRef.getColList("", "|[EXPRESSION]|", ", ", "")).matches(odiRef.getSrcTablesList(".*?(",
		""+(char)92+(char)92+"Q|[POP_TAB_ALIAS]"+"."+input+"|"+(char)92+(char)92+"E", "|", ").*"));
	}
	
	/**
	* @return the colFlexFields
	*/
	public String getColFlexFields() {
		return colFlexFields;
	}
	/**
	* @param colFlexFields the colFlexFields to set
	*/
	public void setColFlexFields(String colFlexFields) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ColFlexFields: "+ colFlexFields} );
		this.colFlexFields = colFlexFields;
	}
	/**
	* @return the dataStoreType
	*/
	public String getDataStoreType() {
		return dataStoreType;
	}
	/**
	* @param dataStoreType the dataStoreType to set
	*/
	public void setDataStoreType(String dataStoreType) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"DataStoreType: "+ dataStoreType} );
		this.dataStoreType = dataStoreType;
	}
	/**
	* @return the filters
	*/
	public String getFilters() {
		return filters;
	}
	/**
	* @param filters the filters to set
	*/
	public void setFilters(String filters) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Filters: "+ filters} );
		//clean the filters variable 
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"setFilters(String filters)"} );
		filters = removeDqsFromSourceColumnReferences(filters);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Cleaned Filters :" + filters} );
		this.filters = filters;
	}
	
	
	public String createUniqueJoinCols(String uniqueJoinCols) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "",new Object[] { "uniqueJoinCols: Before " + uniqueJoinCols });
		// OdiSAPBWLogger.DEBUG);
		StringBuffer uniqueCols = new StringBuffer();
		// Code for multi-column join support
		if (uniqueJoinCols.contains("AND")) {
			String[] moreThanOnejoinCol = uniqueJoinCols.split("AND");
			logger.fine("ODIKM-SAPBW-LKM-10000","",new Object[] { "Join condition has join on more than 1 column"
				+ moreThanOnejoinCol[0]+ "::::"+ moreThanOnejoinCol[1] });
			
			for (int i = 1; i < moreThanOnejoinCol.length + 1; i++) {
				uniqueCols.append(",");
				uniqueCols.append(moreThanOnejoinCol[i - 1].replace(".", ".D" + i + "_"));
			}			
		}// end of code for Multi-column join

		else{
			String[] colName = uniqueJoinCols.split(",");
			for (int i = 1; i < colName.length + 1; i++) {

				uniqueCols.append(",");
				uniqueCols.append(colName[i - 1].replace(".", ".D" + i + "_"));
			}
		}
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "",new Object[] { "uniqueCols: After " + uniqueCols });
		uniqueJoinCols = uniqueCols.toString().substring(1,uniqueCols.toString().length());
		logger.fine("ODIKM-SAPBW-LKM-10000", "",new Object[] { "uniqueJoinCols: After " + uniqueJoinCols });
		
		return uniqueJoinCols;
	}
	
	/**
	* @return the joins
	*/
	public String getJoins() {
		return joins;
	}
	/**
	* @param joins the joins to set
	*/
	public void setJoins(String joins) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Joins: "+ joins} );
		//clean the joins variable 
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"setJoins(String joins)"} );
		joins = removeDqsFromSourceColumnReferences(joins);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Cleaned Joins :" + joins} );
		joins = createUniqueJoinCols(joins);
		this.joins = joins;
	}
	
	
	// added to support unique column name
	/**
	* @return the selectedSrcCols
	*/
	public String getUniqueSelectedSrcCols() {
		return uniqueselectedSrcCols;
	}
	/**
	* @param selectedSrcCols the selectedSrcCols to set
	*/
	public String setUniqueSelectedSrcCols(String uniqueselectedSrcCols) {
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"uniqueselectedSrcCols: Before "+ uniqueselectedSrcCols} );
		StringBuffer uniqueCols = new StringBuffer();
		String [] colName = uniqueselectedSrcCols.split(",");
		LinkedHashSet uniqueCol = new LinkedHashSet ();
		int x = -1;
		//Code Fix for joins in tables having underscore in their name
		String joinList = getJoins();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"joinList :: "+joinList} );
		
		String[] joinitr = joinList.split(",");
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"joinitr.length: "+ joinitr.length} );
		
		//This map contains joinColumns as values and modified join columns (appended with D1) as keys
		Map joinColumnMap = new LinkedHashMap();
		
		for(int j=joinitr.length-1;j>-1;j--)
		{
			String [] joinCol = joinitr[j].split("=");
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"joinCol: "+ joinCol[0]} );
			
			String iocolName = joinCol[0].replaceFirst(EC+DOT+"[A-Z]"+"[0-9]"+UNDERSCORE, DOT).trim();
			joinColumnMap.put(iocolName,joinCol[0]);
			
			//logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iocolName: "+ iocolName+":colName[i-1]="+colName[i-1]} );
		}
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"MAP values ++ "+joinColumnMap.size()});
		/**********End of Code Fix********/
		

		for(int i=1;i<colName.length+1;i++)
		{
			//if(iocolName.equals(colName[i-1].trim())||colName[i-1] )
			if(joinColumnMap.containsKey(colName[i-1].trim()))
			{
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Join Col Found: "} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Adding Col joinCol as: "+joinColumnMap.get(colName[i-1].trim())} );
				//uniqueCol.add(joinCol[0]);
				uniqueCol.add(joinColumnMap.get(colName[i-1].trim()));
				x=i;
			}
			else{
				
				
				if(!(i==x))
				{
					if(colName[i-1].substring(colName[i-1].indexOf(DOT)+1).equals("RSHIENM") || colName[i-1].substring(colName[i-1].indexOf(DOT)+1).equals("VERSION") || colName[i-1].substring(colName[i-1].indexOf(DOT)+1).equals("LEAFTO") || colName[i-1].substring(colName[i-1].indexOf(DOT)+1).equals("LEAFFROM"))
					{
						uniqueCol.add(colName[i-1]); 
					}
					else
					{
						uniqueCol.add(colName[i-1].replace(".", ".C"+i+"_"));
					}
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"uniqueCols:"+"i="+i+"j="+uniqueCols} );
				}
			}
		}
		
		Iterator colItr = uniqueCol.iterator();
		while(colItr.hasNext())
		{
			String tempColName = (String)colItr.next();
			uniqueCols.append(tempColName+",");
		}
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"uniqueCols: After "+ uniqueCols} );
		uniqueselectedSrcCols = uniqueCols.toString().substring(0, uniqueCols.toString().length()-1);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"uniqueselectedSrcCols: After "+ uniqueselectedSrcCols} );
		this.uniqueselectedSrcCols = uniqueselectedSrcCols;
		return uniqueselectedSrcCols;
	}
	
	// end of code added to support unique column name
	
	/**
	* @return the selectedSrcCols
	*/
	public String getSelectedSrcCols() {
		return selectedSrcCols;
	}
	/**
	* @param selectedSrcCols the selectedSrcCols to set
	*/
	public void setSelectedSrcCols(String selectedSrcCols) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SelectedSrcCols: "+ selectedSrcCols} );
		//clean the filters variable 
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"setSelectedSrcCols(String selectedSrcCols)"} );
		selectedSrcCols = removeDqsFromSourceColumnReferences(selectedSrcCols);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Cleaned SelectedSrcCols :" + selectedSrcCols} );
		selectedSrcCols = setUniqueSelectedSrcCols(selectedSrcCols);
		this.selectedSrcCols = selectedSrcCols;
	}
	/**
	* @return the targetCols
	*/
	public String getTargetCols() {
		return targetCols;
	}
	/**
	* @param targetCols the targetCols to set
	*/
	public void setTargetCols(String targetCols) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"TargetCols: "+ targetCols} );
		this.targetCols = targetCols;
	}
	/**
	* @return the srcTables
	*/
	public String getSrcTables() {
		return srcTables;
	}
	/**
	* @param srcTables the srcTables to set
	*/
	public void setSrcTables(String srcTables) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SrcTables: "+ srcTables} );
		this.srcTables = srcTables;
	}

	/**
	* @return the from
	*/
	public String getFrom() {
		return from;
	}

	/**
	* @param from the from to set
	*/
	public void setFrom(String from) {
		this.from = from;
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getFrom() : "+ from} );
	}
}
// End of OdiSAPBWMapping.java
//Start of OdiSAPBWTable.java
import java.util.ArrayList;

/**
* This class holds information for ODI Table
*
* @author Prasanta.Paul
*
*/
public class OdiSAPBWTable {
	
	int iTableID = 0;
	/**
	* Table name in ODI
	*/
	String odiName = "";
	/**
	* Actual Table name in SAP BW
	* Applicable for BW data targets having one to one mapping with SAP BW table-
	* 
	* ODS/DSO
	* OHD Tables
	* InfoObject Text Table
	*/
	String sapName = "";
	/**
	* Fact Table name
	* Applicable only for Infocube
	*/
	String factTable = "";
	/**
	* Table Alias
	*/
	String alias = "";
	/**
	* Table Type: InfoObjects, InfoCubes, ODS/DSO and OHD
	*/
	String type = "";
	/**
	* List of columns
	*/
	ArrayList cols = new ArrayList();
	/**
	* List of filter conditions applied 
	*/
	ArrayList filters = new ArrayList();
	/**
	* List of join conditions having this table as Master table
	*/
	ArrayList joins = new ArrayList();
	/**
	* Filter rule of this table
	* e.g. ZODS_VEN.PRICE_MAT < 1000.00
	*/
	String filterRule = "";

	/**
	* Source column metadata
	*/
	private String metadata = "";
	
	/**
	* 
	* @return String as source column metadata
	*/
	public String getMetadata() {
		return metadata;
	}
	
	/**
	* 
	* @param metadata
	*/
	public void setMetadata(String metadata) {
		this.metadata = metadata;
	}
	
	/**
	* @return the cols
	*/
	public ArrayList getCols() {
		return cols;
	}
	/**
	* @param cols the cols to set
	*/
	public void setCols(ArrayList cols) {
		this.cols = cols;
	}
	/**
	* @return the odiName
	*/
	public String getOdiName() {
		return odiName;
	}
	/**
	* @param odiName the odiName to set
	*/
	public void setOdiName(String odiName) {
		this.odiName = odiName;
	}
	/**
	* @return the sapName
	*/
	public String getSapName() {
		return sapName;
	}
	/**
	* @param sapName the sapName to set
	*/
	public void setSapName(String sapName) {
		this.sapName = sapName;
	}
	/**
	* @return the alias
	*/
	public String getAlias() {
		return alias;
	}
	/**
	* @param alias the alias to set
	*/
	public void setAlias(String alias) {
		this.alias = alias;
	}
	/**
	* @return the filterRule
	*/
	public String getFilterRule() {
		return filterRule;
	}
	/**
	* @param filterRule the filterRule to set
	*/
	public void setFilterRule(String filterRule) {
		if(!this.filterRule.equals(""))
		// break the line to fit into 50 char per line
		// restriction of ABAP code upload
		this.filterRule += ""+(char)10+ " and "+ filterRule;
		else
		this.filterRule = filterRule;
	}
	/**
	* @return the iTableID
	*/
	public int getITableID() {
		return iTableID;
	}
	/**
	* @param tableID the iTableID to set
	*/
	public void setITableID(int tableID) {
		iTableID = tableID;
	}
	/**
	* @return the type
	*/
	public String getType() {
		return type;
	}
	/**
	* @param type the type to set
	*/
	public void setType(String type) {
		this.type = type;
	}
	/**
	* @return the factTable
	*/
	public String getFactTable() {
		return factTable;
	}
	/**
	* @param factTable the factTable to set
	*/
	public void setFactTable(String factTable) {
		this.factTable = factTable;
	}
	/**
	* @return the filters
	*/
	public ArrayList getFilters() {
		return filters;
	}
	/**
	* @param filters the filters to set
	*/
	public void setFilter(OdiSAPBWFilter filter) {
		filters.add(filter);
	}
	/**
	* @return the joins
	*/
	public ArrayList getJoins() {
		return joins;
	}
	/**
	* @param joins the joins to set
	*/
	public void setJoin(OdiSAPBWJoin join) {
		this.joins.add(join);
	}
}
// End of OdiSAPBWTable.java

//Start of OdiSAPBWColumn.java

/**
* This class will represent ODI DataStore's column information. 
* An ODI BW Data Store may comprise of columns of multiple SAP BW tables e.g. a reversed InfoObject DataStore
* in ODI will have columns from different BW tables like T_Table, S_Table, P_Table etc.
* 
*/
public class OdiSAPBWColumn {

	int iColumnID = 0;
	/**
	* Column name
	*/
	String name = "";
	/**
	* KF name without prefix
	*/
	String modifiedName = "";
	/**
	* InfoObject associated with the IOPK column
	*/
	String infoObjectName = "";
	/**
	* Associated BW Table name for this column
	* Applicable for-
	* InfoCube- SID Table 
	* InfoObject (P Table and Q Table)
	*/
	String bwSidTable = "";
	String bwPTable = "";
	String bwQTable = "";
	/**
	* Column type- "KF" or "IOPK"
	* this field will be populated only for InfoCube
	*/
	String bwColumnType = "";
	/**
	* SAP BW Navigation Attribute
	*/
	int bwNavAttr = 0; // 0- Display Attribute 1- Navigational Attribute
	/**
	* SAP BW Time Dependent 
	*/
	int bwTimeDepAttr = 0; // 1- Time Dep Attribute 0- not Time Dep Attribute
	
	/**
	* added to get the ODI column name in LKM BW build#21
	*/
	private String odiName = "";
	
	private String sourceDataType; 
	private String order;
	private String colLength;
	private String colScale;
	
	private int mappingOrder;
	
	/**
	* Get ODI Column name
	* @return
	*/
	public String getOdiName() {
		return odiName;
	}
	
	/**
	* Set ODI Column name
	* @param odiName
	*/
	public void setOdiName(String odiName) {
		this.odiName = odiName;
	}



	/* (non-Javadoc)
	* @see java.lang.Object#equals(java.lang.Object)
	*/
	public boolean equals(Object obj){
		if(!(obj instanceof OdiSAPBWColumn))
		return false;
		OdiSAPBWColumn col = (OdiSAPBWColumn) obj;
		if(this.getName().equals(col.getName()))
		return true;
		return false;
	}
	
	/* (non-Javadoc)
	* @see java.lang.Object#hashCode()
	*/
	public int hashCode(){
		return getName().hashCode();
	}
	/**
	* @return the name
	*/
	public String getName() {
		return name;
	}
	/**
	* @param name the name to set
	*/
	public void setName(String name) {
		this.name = name;
	}
	/**
	* @return the iColumnID
	*/
	public int getIColumnID() {
		return iColumnID;
	}
	/**
	* @param columnID the iColumnID to set
	*/
	public void setIColumnID(int columnID) {
		iColumnID = columnID;
	}
	/**
	* @return the bwPTable
	*/
	public String getBwPTable() {
		return bwPTable;
	}
	/**
	* @param bwPTable the bwPTable to set
	*/
	public void setBwPTable(String bwPTable) {
		this.bwPTable = bwPTable;
	}
	/**
	* @return the bwQTable
	*/
	public String getBwQTable() {
		return bwQTable;
	}
	/**
	* @param bwQTable the bwQTable to set
	*/
	public void setBwQTable(String bwQTable) {
		this.bwQTable = bwQTable;
	}
	/**
	* @return the bwSidTable
	*/
	public String getBwSidTable() {
		return bwSidTable;
	}
	/**
	* @param bwSidTable the bwSidTable to set
	*/
	public void setBwSidTable(String bwSidTable) {
		this.bwSidTable = bwSidTable;
	}
	/**
	* @return the bwColumnType
	*/
	public String getBwColumnType() {
		return bwColumnType;
	}
	/**
	* @param bwColumnType the bwColumnType to set
	*/
	public void setBwColumnType(String bwColumnType) {
		this.bwColumnType = bwColumnType;
	}
	/**
	* @return the bwNavAttr
	*/
	public int getBwNavAttr() {
		return bwNavAttr;
	}
	/**
	* @param bwNavAttr the bwNavAttr to set
	*/
	public void setBwNavAttr(int bwNavAttr) {
		this.bwNavAttr = bwNavAttr;
	}
	/**
	* @return the bwTimeDepAttr
	*/
	public int getBwTimeDepAttr() {
		return bwTimeDepAttr;
	}
	/**
	* @param bwTimeDepAttr the bwTimeDepAttr to set
	*/
	public void setBwTimeDepAttr(int bwTimeDepAttr) {
		this.bwTimeDepAttr = bwTimeDepAttr;
	}
	/**
	* @return the infoObjectName
	*/
	public String getInfoObjectName() {
		return infoObjectName;
	}
	/**
	* @param infoObjectName the infoObjectName to set
	*/
	public void setInfoObjectName(String infoObjectName) {
		this.infoObjectName = infoObjectName;
	}
	/**
	* @return the modifiedName
	*/
	public String getModifiedName() {
		return modifiedName;
	}
	/**
	* @param modifiedName the modifiedName to set
	*/
	public void setModifiedName(String modifiedName) {
		this.modifiedName = modifiedName;
	}

	/**
	* @return the sourceDataType
	*/
	public String getSourceDataType() {
		return sourceDataType;
	}

	/**
	* @param sourceDataType the sourceDataType to set
	*/
	public void setSourceDataType(String sourceDataType) {
		this.sourceDataType = sourceDataType;
	}

	/**
	* @return the order
	*/
	public String getOrder() {
		return order;
	}

	/**
	* @param order the order to set
	*/
	public void setOrder(String order) {
		this.order = order;
	}

	/**
	* @return the colLength
	*/
	public String getColLength() {
		return colLength;
	}

	/**
	* @param colLength the colLength to set
	*/
	public void setColLength(String colLength) {
		this.colLength = colLength;
	}

	/**
	* @return the colScale
	*/
	public String getColScale() {
		return colScale;
	}

	/**
	* @param colScale the colScale to set
	*/
	public void setColScale(String colScale) {
		this.colScale = colScale;
	}
	
	public int getMappingOrder() {
		return mappingOrder;
	}

	public void setMappingOrder(int mappingOrder) {
		this.mappingOrder = mappingOrder;
	}
	
}
// End of OdiSAPBWColumn.java

// Start of OdiSAPBWFilter.java

/**
* This class holds information of ODI Filter Condition
* 
* @author Prasanta.Paul
*
*/
public class OdiSAPBWFilter {

	/**
	* Table to which this filter condition belongs
	*/
	OdiSAPBWTable table;
	
	/**
	* "KF"/"IOPK"
	*/
	String fieldType = ""; 
	/**
	* Name of the field to which filter condition is applied
	*/
	String field = "";
	/**
	* Filter condition e.g. GE, LE, LT etc.
	*/
	String filterCon = "";
	/**
	* filter value e.g. abc < 1000
	*/
	String filterValue = "";
	/**
	* complete statement
	* abc LE 100
	*/
	String statement = "";
	/**
	* @return the field
	*/
	public String getField() {
		return field;
	}
	/**
	* @param field the field to set
	*/
	public void setField(String field) {
		this.field = field;
	}
	/**
	* @return the filterCon
	*/
	public String getFilterCon() {
		return filterCon;
	}
	/**
	* @param filterCon the filterCon to set
	*/
	public void setFilterCon(String filterCon) {
		this.filterCon = filterCon;
	}
	/**
	* @return the filterValue
	*/
	public String getFilterValue() {
		return filterValue;
	}
	/**
	* @param filterValue the filterValue to set
	*/
	public void setFilterValue(String filterValue) {
		this.filterValue = filterValue;
	}
	/**
	* @return the statement
	*/
	public String getStatement() {
		return statement;
	}
	/**
	* @param statement the statement to set
	*/
	public void setStatement(String statement) {
		this.statement = statement;
	}
	/**
	* @return the table
	*/
	public OdiSAPBWTable getTable() {
		return table;
	}
	/**
	* @param table the table to set
	*/
	public void setTable(OdiSAPBWTable table) {
		this.table = table;
	}
	/**
	* @return the fieldType
	*/
	public String getFieldType() {
		return fieldType;
	}
	/**
	* @param fieldType the fieldType to set
	*/
	public void setFieldType(String fieldType) {
		this.fieldType = fieldType;
	}
}
// End of OdiSAPBWFilter.java

// Start of OdiSAPBWJoin.java
import java.util.ArrayList;

/**
* This class holds information of ODI Join.
* 
* @author Prasanta.Paul
*
*/
public class OdiSAPBWJoin {

	String masterTable = "";
	OdiSAPBWTable subTable;
	ArrayList masterCols = new ArrayList();
	ArrayList subCols = new ArrayList();
	boolean isInnerJoin = false;
	/**
	* @return the isInnerJoin
	*/
	public boolean isInnerJoin() {
		return isInnerJoin;
	}
	/**
	* @param isInnerJoin the isInnerJoin to set
	*/
	public void setInnerJoin(boolean isInnerJoin) {
		this.isInnerJoin = isInnerJoin;
	}
	/**
	* @return the masterCols
	*/
	public ArrayList getMasterCols() {
		return masterCols;
	}
	/**
	* @param masterCols the masterCols to set
	*/
	public void setMasterCol(OdiSAPBWColumn masterCol) {
		this.masterCols.add(masterCol);
	}
	/**
	* @return the masterTable
	*/
	public String getMasterTable() {
		return masterTable;
	}
	/**
	* @param masterTable the masterTable to set
	*/
	public void setMasterTable(String masterTable) {
		this.masterTable = masterTable;
	}
	/**
	* @return the subCols
	*/
	public ArrayList getSubCols() {
		return subCols;
	}
	/**
	* @param subCols the subCols to set
	*/
	public void setSubCol(OdiSAPBWColumn subCol) {
		this.subCols.add(subCol);
	}
	/**
	* @return the subTable
	*/
	public OdiSAPBWTable getSubTable() {
		return subTable;
	}
	/**
	* @param subTable the subTable to set
	*/
	public void setSubTable(OdiSAPBWTable subTable) {
		this.subTable = subTable;
	}
}
// End of OdiSAPBWJoin.java


// Start of UnSupportedHierarchyFilterException
/**
* This exception will be thrown to report invalid filter condition for Hierarchy
* on ODI Mapping
* 
* @author Anupam.Srivastava
*/
public class UnSupportedHierarchyFilterException extends Exception  {

	public UnSupportedHierarchyFilterException(String msg) {
		super(msg);
	}
}
// End of UnSupportedHierarchyFilterException class

//Start of UnSupportedOhdDeltaLoadException.java
/**
* This class throws an Exception if OHD Table doesn't have 
* OHREQUID column for delta loading 
*/
public class UnSupportedOhdDeltaLoadException extends Exception {

	public UnSupportedOhdDeltaLoadException(String msg) {
		super(msg);		
	}	
}
//End of UnSupportedOhdDeltaLoadException.java

// Start of OdiSAPBWExtractMapping.java
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Set;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import com.sun.rmi.rmid.ExecPermission;

/**
* 
* 1. Read Src Tables 2. Read Src. Joins 3. Read Targt Table 4. Read ODI Mapping
* Details: ~~~~~~~~~~~~~~~~~~~~~~~~ Src. Cols:
* 0CDS_DS04.DOC_NUMBER~0CDS_DS04.RECORDMODE Src. Tables: 0CDS_DS04 AS 0CDS_DS04
* SAP Table Name:
* 
* Generated SQL for ABAP:- ~~~~~~~~~~~~~~~~~~ select DOC_NUMBER,
* 0CDS_DS04~RECORDMODE into table <ABAP_Internal_Table_Name> from
* /BI0/ACDS_DS0400 AS 0CDS_DS04.
* 
* 
*/
public class OdiSAPBWExtractMapping {
	//below hashset prevents duplication of variable names and values
	Set setOfVariables = new HashSet();
	String className = getClass().getName();

	// ASCI Codes
	final String DOUBLE_QUOTE = "" + (char) 34; // "

	final String START_BRACKET = "" + (char) 92 + (char) 40; // \(

	final String END_BRACKET = "" + (char) 92 + (char) 41; // \)

	final String WORD_BLOCK = "" + (char) 92 + (char) 98; // \(92) b (98) - \b
	// backspace
	final String WS = ""+(char)92+(char)115+(char)42; // \s*
	
	final String UNDERSCORE = "" + (char) 92+(char)95;

	/*
	* Table types possible in meta data extracted from SAP BW
	*/
	public static final String ODSO = "ODS-DSO";
	public static final String WODSO = "WO-DSO";

	public static final String INFOOBJECT = "InfoObject";

	public static final String INFOOBJECT_TXT = "InfoObject_TXT";
	
	public static final String INFOOBJECT_HIER_TXT = "InfoObject_HIERTXT";
	
	
	/**
	* @author Anupam.Srivastava
	* Added for the Hierarchy 
	* Dated: 22,June,2010 
	* 
	*/
	public static final String INFOOBJECT_HIER = "InfoObject_HIER";
	
	public static final String INFOCUBE = "InfoCube";

	public static final String OPEN_HUB_DESTINATION = "OHDT";

	public static final String CUBE_IOBJ_JOIN = "CUBE_IOBJ_JOIN";

	public static final String KEY_FIGURE = "KF";

	public static final String IOPK_COLUMN = "IOPK";

	public static final String KEY_FIELD = "KEY_FIELD";

	/*
	* Refer RKM Design document to get more details about FlexFields and their
	* usage.
	*/
	// DataStore- FlexFields
	public static String SAPBW_OBJECT_TYPE = "SAPBW_OBJECT_TYPE"; // "SAPBW_OBJECT_TYPE";

	public static String SAPBW_TABLE_NAME = "SAPBW_TABLE_NAME"; // "SAP_BW_TABLE_NAME";

	public static String SAPBW_FACT_TABLE_NAME = "SAPBW_FACT_TABLE_NAME"; // "SAP_BW_FACT_TABLE_NAME";

	// Column- FlexFields
	public static String SAPBW_SID_TABLE_NAME = "SAPBW_SID_TABNAME";// "SAP_BW_SID_TABLE_NAME";

	public static String SAPBW_COLUMN_TYPE = "SAPBW_COLTYPE";// "SAP_BW_COLUMN_TYPE";

	/**
	* Applicable for IOPK and KF columns of InfoCube
	*/
	public static String SAPBW_COLUMN_NAME = "SAPBW_COLNAME";// "SAP_BW_COLUMN_NAME";

	public static String SAPBW_PTABLE_NAME = "SAPBW_PTABLE_NAME"; // "SAP_BW_PTABLE_NAME";

	public static String SAPBW_QTABLE_NAME = "SAPBW_QTABLE_NAME"; // "SAP_BW_QTABLE_NAME";

	public static String SAPBW_NAVIGATION_ATTRIBUTE = "SAPBW_NAVIGATION_ATTRIBUTE"; // "SAP_BW_NAVIGATION_ATTRIBUTE";

	public static String SAPBW_TIME_DEPENDENT_ATTRIBUTE = "SAPBW_TIME_DEPENDENT_ATTRIBUTE"; // "SAP_BW_TIME_DEPENDENT_ATTRIBUTE";

	/**
	* List of Source Tables
	*/
	ArrayList tables = new ArrayList();

	/**
	* List of Src columns and their FlexField values. This will be used in
	* extractSrcCols() and extractFilters()
	*/
	HashMap colFlexMap;

	/**
	* Keeps a map between Table name (Alias or Odi Name) and its instance. It
	* will be used in extracting Join conditions.
	*/
	HashMap tableInstanceMap = new HashMap();

	/**
	* Extraction Type: "InfoObject", "InfoObject_TXT", "ODS-DSO", "InfoCube",
	* "CUBE_IOBJ_JOIN"
	*/
	public String extractionType = "";

	/**
	* ODI Interface mapping details
	*/
	OdiSAPBWMapping map;

	OdiSapBwLogger logger;

	OdiSAPBWLang odiLang = null;
	/*
	*  Flag for All Custom Exceptions,
	*  This Piece of code is written for Avoiding the wrong type in LKM (Generate ABAP Code)
	*/
	boolean flag_INVALID_LEFT_OUTER_JOIN = false; //Flag for LeftOuterJoin
	boolean flag_INCORRECT_SOURCE_ORDERING = false;//Flag for INCORRECT SOURCE ORDERING
	boolean flag_UNSUPPORTED_DATA_TARGET = false;//Flag for UNSUPPORTED_DATA_TARGET
	boolean flag_SINGLE_COLUMN_EXCEPTION = false;//Flag for SINGLE_COLUMN_EXCEPTION
	/**
	* @author Anupam.Srivastava
	* Date 9,July,2010(For 11 Build of ODI-BW)
	* Issue No :- 9746913,Desc :- OHD EXTRACTION: TARGET COLUMN ORDER NEEDS TO MATCH SOURCE COL ORDER
	* The Check for Open Hub Column with Source and Traget i.e.  boolean flag_OHD_CLMN_DFFERENT_LOCATION = false; is removed,
	* Now for the New Template,we do'nt required the same column i.e. The Source Table Column and Target Column,
	* By immplementing the New Template we can Rearrange,we can reduce or add the OHD cloumn in the interface 
	*/
	//boolean flag_OHD_CLMN_DFFERENT_LOCATION = false;//Flag for OHD_CLMN_DFFERENT_LOCATION
	boolean flag_UNSUPPORTED_INTERFACE = false;//Flag for flag_UNSUPPORTED_INTERFACE
	boolean flag_IC_IO_COLUMN_EXCEPTION = false;//Flag for IC_IO_COLUMN_EXCEPTION
	boolean flag_NO_IO_COLUMN_MAPPED_EXCEPTION = false;//Flag for NO_IO_COLUMN_MAPPED_EXCEPTION
	boolean flag_SAME_COLUMN_EXCEPTION = false;//Flag for SAME_COLUMN_EXCEPTION
	boolean flag_INVALID_HIERARCHY = false;//Flag for INVALID HIERARCHY(If more than one filter is applied)
	boolean flag_INVALID_OHD_DELTA_LOADING = false;//by Anzar

	/**
	* Date 4 October 2010
	* Following three variable added to fix the issue
	* LKM BW DOES NOT SUPPORT EXTRACTION FROM OHD TABLES WITH SEMANTIC KEY
	*/
	public String firstReqId;
	public String lastReqId;
	public boolean isOHREQUIDAvailable;
	
	//Source Column Metadata list
	public HashMap srcColsMetadata = null;

	public OdiSAPBWExtractMapping(OdiSAPBWMapping map,OdiSapBwLogger sapBWlogger,OdiSAPBWLang odiLang ) throws Exception {
		this.map = map;
		this.logger = sapBWlogger;
		this.odiLang = odiLang;
		//odiLang = OdiSAPBWLang.getInstance(odiLang);
	}

	/**
	* process ODI mapping details
	* 
	* @throws Exception
	*/
	public void processMapping() throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Process ODI Interface Mapping details..."} );
		// Extract Source table
		extractSrcTables();
		
		//parse metadata (data type, length, scale order)
		srcColsMetadata = parseSourceMetadata();
		
		// Extract Source columns and associate them with corresponding Source
		// table
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Before calling extractSrcCols():"} );
		extractSrcCols();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Before calling extractSrcCols():"} );
		// Extract filter conditions and associate them with corresponding
		// Source Table
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Before calling extractFilters():"} );
		extractFilters();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"After calling extractFilters():"} );
		// Extract join conditions and associate them with corresponding Source
		// Table
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Before calling extractJoins():"} );
		extractJoins();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"After calling extractJoins():"} );
	}

	
	/**
	* This method throws Exception if the Interface Mapping Type is not
	* ODS-DSO, InfoObject, InfoCube, OpenHub Destination and Cube_IOBJ Join
	* And this method will also throw all the Custom Exceptions at the Statring of the ODI
	*/
	//public void validAbapTemplateType(String type)throws UnavailableABAPTemplateException {
	public void validAbapTemplateType(String type)throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### TEMPLATE TYPE IS ### "+type} );
		
		//Exception For the Left Outer Join
		if(flag_INVALID_LEFT_OUTER_JOIN){ 
			logger.severe("ODIKM-SAPBW-LKM-10000", new Object[] {"Throwing Exception for the INVALID_LEFT_OUTER_JOIN"} );
			throw new UnSupportedJoinTypeException(odiLang.getValue(OdiSAPBWLang.INVALID_LEFT_OUTER_JOIN));
			
		}
		//Exception For the INCORRECT_SOURCE_ORDERING
		if(flag_INCORRECT_SOURCE_ORDERING){//Check the Left Outer Join
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Throwing Exception  for the INCORRECT_SOURCE_ORDERING"} );
			logger.severe("ODIKM-SAPBW-LKM-10008", new Object[] {odiLang.getValue(OdiSAPBWLang.INCORRECT_SOURCE_ORDERING)} );
			
			OdiSapUtil.throwODIException(odiLang.getValue(OdiSAPBWLang.INCORRECT_SOURCE_ORDERING));
			//throw new Exception(odiLang.getValue(OdiSAPBWLang.INCORRECT_SOURCE_ORDERING));
			
		}
		//Exception For the UNSUPPORTED_DATA_TARGET
		if(flag_UNSUPPORTED_DATA_TARGET){//Check the Left Outer Join
			logger.severe("ODIKM-SAPBW-LKM-10001", new Object[] {"Throwing Exception  for the UNSUPPORTED_DATA_TARGET"} );
			throw new UnSupportedDataTargetException(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_DATA_TARGET));
		}
		//Exception For the SINGLE_COLUMN_EXCEPTION
		if(flag_SINGLE_COLUMN_EXCEPTION){//Check the Left Outer Join
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Throwing Exception  for SINGLE_COLUMN_EXCEPTION "} );
			logger.severe("ODIKM-SAPBW-LKM-10014", new Object[] {odiLang.getValue(OdiSAPBWLang.SINGLE_COLUMN_EXCEPTION)} );
			throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.SINGLE_COLUMN_EXCEPTION));
		}
		///-----
		/**
		* @author Anupam.Srivastava
		* Date 9,July,2010
		* Removed for new OHD Template,Please find the Comment for the flag_OHD_CLMN_DFFERENT_LOCATION above
		*/
		/*if(flag_OHD_CLMN_DFFERENT_LOCATION){//Check the OHD_CLMN_DFFERENT_LOCATION
			logger.log(".............Throwing Exception  for OHD_CLMN_DFFERENT_LOCATION ........ ");
			throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.OHD_CLMN_DFFERENT_LOCATION));
		}*/
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"flag_UNSUPPORTED_INTERFACE===>"+flag_UNSUPPORTED_INTERFACE} );
		if(flag_UNSUPPORTED_INTERFACE){//Check the UNSUPPORTED_INTERFACE
			logger.severe("ODIKM-SAPBW-LKM-10017", new Object[] {"Throwing Exception Here for UNSUPPORTED_INTERFACE"} );
			throw new UnSupportedJoinException(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_INTERFACE));
		}
		
		if(flag_IC_IO_COLUMN_EXCEPTION){//Check the IC_IO_COLUMN_EXCEPTION
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Throwing Exception for IC_IO_COLUMN_EXCEPTION"} );
			logger.severe("ODIKM-SAPBW-LKM-10009", new Object[] {odiLang.getValue(OdiSAPBWLang.IC_IO_COLUMN_EXCEPTION)} );
			throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.IC_IO_COLUMN_EXCEPTION));
		}
		
		if(flag_NO_IO_COLUMN_MAPPED_EXCEPTION){//Check the NO_IO_COLUMN_MAPPED_EXCEPTION
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Throwing Exception for flag_NO_IO_COLUMN_MAPPED_EXCEPTION"} );
			logger.severe("ODIKM-SAPBW-LKM-10015", new Object[] {odiLang.getValue(OdiSAPBWLang.NO_IO_COLUMN_MAPPED_EXCEPTION)} );
			throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.NO_IO_COLUMN_MAPPED_EXCEPTION));
		}
		
		if(flag_SAME_COLUMN_EXCEPTION){//Check the SAME_COLUMN_EXCEPTION
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Throwing Exception for SAME_COLUMN_EXCEPTION"} );
			logger.severe("ODIKM-SAPBW-LKM-10011", new Object[] {odiLang.getValue(OdiSAPBWLang.SAME_COLUMN_EXCEPTION)} );
			throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.SAME_COLUMN_EXCEPTION));
		}
		
		if(flag_INVALID_HIERARCHY){//Check the Hierarchy Filter Condition
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Throwing Exception for invalid_hierarchy_filter"} );
			logger.severe("ODIKM-SAPBW-LKM-10016", new Object[] {odiLang.getValue(OdiSAPBWLang.INVALID_HIERARCHY_FILTER)} );
			throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.INVALID_HIERARCHY_FILTER));
		}
		if(flag_INVALID_OHD_DELTA_LOADING){
			logger.severe("ODIKM-SAPBW-LKM-10003", new Object[] {"Throwing Exception for invalid_delta_loading due to abscence of OHREQUID Col in OHD "} );
			throw new UnSupportedOhdDeltaLoadException(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_OHD_DELTA));
		}
		//-------
		if (!type.equals(ODSO)
				&& !type.equals(WODSO)
				&& !type.equals(INFOCUBE)
				&& !type.equals(INFOOBJECT)
				&& !type.equals(OPEN_HUB_DESTINATION)
				&& !type.equals(CUBE_IOBJ_JOIN) 
				&& !type.equals(INFOOBJECT_TXT)
				&& !type.equals(INFOOBJECT_HIER)/*Added for the Hierarchy Table*/
				&& !type.equals(INFOOBJECT_HIER_TXT)/*Added for the Hierarchy Text Table*/
				&& !type.equals("")
				&& !type.equals("null")
				&& !type.equals(null)) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### TEMPLATE TYPE  INSIDE IS ### "+type.toString()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {className 	+ " Don't have valid ABAP Template for this Interface Mapping. "
				+ "Supported Templates  are ODS-DSO , InfoObject,InfoObject Text InfoCube, "
				+ "Open Hub and Cube_IOBJ Join"} );
			logger.severe("ODIKM-SAPBW-LKM-10006", new Object[] {odiLang.getValue(OdiSAPBWLang.N0_VALID_TEMLPATE_MAPPING)});
			throw new UnavailableABAPTemplateException(odiLang.getValue(OdiSAPBWLang.N0_VALID_TEMLPATE_MAPPING));
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##################### Type ######################" + type} );
		//******Commented by Anzar -- Introduced New Template only for Text Table
		/*if (type.equals(INFOOBJECT_TXT)) { 
			logger.log("No template available for pure IO-TXT extraction. Please join TXT data store with respective IO data store on source");

		throw new UnavailableABAPTemplateException(odiLang.getValue(OdiSAPBWLang.N0_TEMLPATE_IO_TXT_EXTRACTION));
		}*/
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##################### End of the method validAbapTemplateType() for the Type is :- ######################" + type} );
	}
	/**
	* This method will throw All Customized exception
	* @param Exception e
	* @param String errorLoc
	* @return void
	*/
	
	/*public void throwCodeGenException(String resKey) throws Exception{
		
		//String msg = odiSapERPResourceBundle.getResourceString( resKey );
		logger.log("### resKey is ####----> "+resKey);
		//out.print("<"+"? throw new Exception("+(char)34+ resKey +(char)34+"); ?"+">");// (char)34 stand for Quotation Mark
	// throw new Exception( msg );
		logger.log("11111111111111==>"+odiLang.getValue(OdiSAPBWLang.SINGLE_COLUMN_EXCEPTION));
		throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.SINGLE_COLUMN_EXCEPTION));
		

}*/
	
	/**
*     Get the Table Name form the format: < ?=snpRef.getObjectShortName("L", "ZRB16CU2 Sales View", "SAP_BCONE_BI_7.0_SER", "D") ? >
*/
	public String getOrignalTableName(String strFieldAtZero) {
		String BS    = "" + (char) 92;
		String SPACE = "" + (char) 92 + "s*";
		String DQ    = "" + (char)34;
		//return strFieldAtZero.replaceFirst("<"+BS+"?=...Ref.getObjectShortName"+SPACE+BS+"("+SPACE+DQ+"L"+DQ+SPACE+","+SPACE+BS+DQ+"(.+?)"+BS+DQ+".*", "$1");
		//return strFieldAtZero.replaceFirst("<"+BS+"?=...Ref.getObjectShortName"+SPACE+BS+"("+SPACE+DQ+"L"+DQ+SPACE+","+SPACE+BS+DQ+"(.+?)"+BS+"b.*", "$1");
		//return strFieldAtZero.replaceFirst("<"+BS+"?=...Ref.getObjectShortName"+SPACE+BS+"("+SPACE+DQ+"L"+DQ+SPACE+","+SPACE+BS+DQ+"(.+?)("+BS+"s|"+BS+DQ+").*", "$1");
		return strFieldAtZero.replaceFirst("<"+BS+"?"+SPACE+BS+"="+SPACE+"...Ref.getObjectShortName"+SPACE+BS+"("+SPACE+DQ+"L"+DQ+SPACE+","+SPACE+BS+DQ+"(.+?)("+BS+"s|"+BS+DQ+").*", "$1");
	}
	/**
	* Extarct Table details from ODI Mapping information to process it further
	*/
	private void extractSrcTables() throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Extract Source Tables..."} );
		/*
		* public java.lang.String getSrcTablesList(String pStart,String pPattern,String pSeparator,String pEnd)
		*/
		String srcTables = map.getSrcTables();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"srcTables Is :-"+srcTables} );
		
		/*
		* data extracted using odiRef.getSrcTablesList()
		*
		*Extracted Data Format: <Table_NAME>~<Table_ALIAS>~<SAPBW_OBJECT_TYPE>~<SAP_BW_TABLE_NAME>~<SAP_BW_FACT_TABLE_NAME>,
		* <Table_ALIAS2>~<SAPBW_OBJECT_TYPE>~<SAP_BW_TABLE_NAME>~<SAP_BW_FACT_TABLE_NAME>
		*
		* Previously Data Format was : <Table_ALIAS>~<SAPBW_OBJECT_TYPE>~<SAP_BW_TABLE_NAME>~<SAP_BW_FACT_TABLE_NAME>,
		* <Table_ALIAS2>~<SAPBW_OBJECT_TYPE>~<SAP_BW_TABLE_NAME>~<SAP_BW_FACT_TABLE_NAME>
		* 
		* FIXME: use regular expression to extract FlexField values
		*/
		
		//StringTokenizer st = new StringTokenizer(srcTables, ",");//Previously Seprator
		
		StringTokenizer st = new StringTokenizer(srcTables, "^^^^");
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Outside the StringTokenizer of srcTables"} );
		while (st.hasMoreTokens()) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside the StringTokenizer of srcTables"} );
			String token = st.nextToken();
			/*Current format is :
			* [0]- TABLE_NAME [1]- TABLE_ALIAS [2]- SAPBW_OBJECT_TYPE [3]- SAP_BW_TABLE_NAME
			* [4]- SAP_BW_FACT_TABLE_NAME
			* 
			* Previous it was :
			* [0]- TABLE_ALIAS [1]- SAPBW_OBJECT_TYPE [2]- SAP_BW_TABLE_NAME
			* [3]- SAP_BW_FACT_TABLE_NAME
			*/
			String[] fields = token.split("~~");
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Print the Number of Fields: " + fields.length} );
			// FIXME: difference in table name and its alias name
			//String tableAlias = fields[0];
			String strFieldAtZero = fields[0];
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### fields[0] ####-----------------TableName is --------------------->>"+fields[0]} );
			String tableName = null;
			
			if(strFieldAtZero.contains("getObjectShortName")){
				
				tableName = getOrignalTableName(strFieldAtZero);
				
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"@@@ TABLE NAME IS @@@@-->"+tableName} );
			//String tableAlias = fields[0];
			String tableAlias = fields[1]; 
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### fields[1] ####----------------TableAlias is ---------------------->>"+fields[1]} );
			OdiSAPBWTable table = new OdiSAPBWTable();
			//	table.setOdiName(tableAlias);
			
			table.setOdiName(tableName);// i.e. fields[0]
			table.setAlias(tableAlias); // i.e. fields[1]
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### fields[1] is  ### "+fields[1]} );
			// FlexField Value: Data Store type
			//	String dataStoreType = fields[1];
			String dataStoreType = fields[2];
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### fields[2] ####----------------dataStoreType is ---------------------->>"+fields[2]} );
			// Find out extraction type
			if (extractionType.equals(""))
			extractionType = dataStoreType;
			else if (extractionType.equals(INFOCUBE)) {
				if (dataStoreType.equals(INFOOBJECT))
				extractionType = CUBE_IOBJ_JOIN;
			}
			else if (extractionType.equals(INFOOBJECT)) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"extractionType: " + extractionType} );
				if (dataStoreType.equals(INFOCUBE)) {
					/*
					* Date: 12-Nov-09 Invalid Source Table Order. InfoCube
					* should be selected first in a IC-IO Join interface.
					* -Prasanta Paul
					*/
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"dataStoreType: " + dataStoreType} );
					flag_INCORRECT_SOURCE_ORDERING = true;
					
					OdiSapUtil.throwODIException(odiLang.getValue(OdiSAPBWLang.INCORRECT_SOURCE_ORDERING));
					//throw new Exception(odiLang.getValue(OdiSAPBWLang.INCORRECT_SOURCE_ORDERING));
				}
			}
			if (checkValidDataStore(dataStoreType))
			table.setType(dataStoreType);

			// FlexField Value: SAP Table names
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### fields[3] ####---------- SAP Table names is ---------------------------->>"+fields[3]} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### fields[3]111< SAP Table names > ####"+fields[3]} );
			if (fields.length > 3){
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### fields[3] i.e. < SAP Table names > ####"+fields[3]} );
				table.setSapName(fields[3]);
			}
			// FlexField Value: Fact Table name
			if (fields.length > 4){
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### fields[4] i.e. Fact Table name ####"+fields[4]} );
				
				table.setFactTable(fields[4]);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"@@@@@@ field[0] ####---TABLE NAME-------->"+fields[0]} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"@@@@@@ field[1] ####---TABLE ALIAS------->"+fields[1]} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"@@@@@@ field[2] ####---DATA STORE NAME------->"+fields[2]} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"@@@@@@ field[3] ####---SAP Table NAME--->"+fields[3]} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"@@@@@@ field[5] ####---Source Col Metadata--->"+fields[5]} );
			
			//set source column metadata
			table.setMetadata(fields[5]);

			tables.add(table);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Check the Tables :->"+tables + "&& The Table is :->"+table} );
			
			String strAlias = table.getAlias().toUpperCase().trim(); // .trim() change for space issue
			//tableInstanceMap.put(table.getAlias(), table);
			tableInstanceMap.put(strAlias, table);	
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"strAlias is = "+strAlias} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"tableInstanceMap : "+tableInstanceMap} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"tableInstanceMap Key Set is : "+tableInstanceMap.keySet()} );
		}//END of for loop
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Source Tables: " + tables.size()} );
	}//end of extractSrcTables() method

	private boolean checkValidDataStore(String dataStoreType)
	throws UnSupportedDataTargetException {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Check for valid datastore type..."} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Check for Invalid 2 datastore type..."} );
		if (!dataStoreType.equals(ODSO) && !dataStoreType.equals(WODSO) && !dataStoreType.equals(INFOOBJECT)
				&& !dataStoreType.equals(INFOOBJECT_TXT)
				&& !dataStoreType.equals(INFOCUBE)
				&& !dataStoreType.equals(OPEN_HUB_DESTINATION) 
				&& !dataStoreType.equals(INFOOBJECT_HIER)
				&& !dataStoreType.equals(INFOOBJECT_HIER_TXT)) {/*Added for the Hierarchy Table*/
			logger.fine("ODIKM-SAPBW-LKM-10001", "", new Object[] {odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_DATA_TARGET)});
			logger.fine("ODIKM-SAPBW-LKM-10001", "", new Object[] {odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_DATA_TARGET)+ dataStoreType} );
			logger.fine("ODIKM-SAPBW-LKM-10001", "", new Object[] {"Can't process further...checkValidDataStore."} );
			
			flag_UNSUPPORTED_DATA_TARGET = true;
			
			throw new UnSupportedDataTargetException(odiLang
			.getValue(OdiSAPBWLang.UNSUPPORTED_DATA_TARGET)
			+ dataStoreType);
		}

		return true;
	}

	/**
	* Check the table details. Only for Testing purpose
	* 
	* @throws Exception
	*/
	private void displayTableDetails() throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {""} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ODI Interface Mapping Data Summary"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Tables: " + tables.size()} );
		for (int i = 0; i < tables.size(); i++) {
			OdiSAPBWTable table = (OdiSAPBWTable) tables.get(i);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table ODI Name: " + table.getOdiName()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table SAP Name: " + table.getSapName()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table Alias Name: " + table.getAlias()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table Type: " + table.getType()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Fact Table Name: " + table.getFactTable()} );
			ArrayList cols = table.getCols();
			/*
			* IF only one column is added to the Target, then throw the Exception:
			* 
			*/
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Check the Column Size :: "+cols.size()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of total Tables :: "+cols.size()} );
			
			if(cols.size()==1 && tables.size() ==1){
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### Only a Single Column is selected to the Target,Exception of Single Column Mapped To The Target.... ###"} );
				flag_SINGLE_COLUMN_EXCEPTION = true;
				logger.severe("ODIKM-SAPBW-LKM-10014", new Object[] {odiLang.getValue(OdiSAPBWLang.SINGLE_COLUMN_EXCEPTION)} );
				throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.SINGLE_COLUMN_EXCEPTION));
				
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Selected Cols: " + cols.size()} );

			for (int j = 0; j < cols.size(); j++) {
				OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(j);
				// column details-
				displayColumnDetails(col);
			}
			if (i < tables.size() - 1)
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"_________________________________________"} );
		}
	}

	private void displayColumnDetails(OdiSAPBWColumn col) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Column Name: " + col.getName()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Odi Column Name: " + col.getOdiName()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Modified Name: " + col.getModifiedName()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Col Type: " + col.getBwColumnType()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SID Table: " + col.getBwSidTable()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"P Table: " + col.getBwPTable()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Q Table: " + col.getBwQTable()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Nav Attr: " + col.getBwNavAttr()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Time Dep Attr: " + col.getBwTimeDepAttr()} );
	}

	/**
	* FIXME: unable to extract Q Table, X Table from FlexField (Unknown
	* FlexField Error)
	* 
	* ODI return value: 0CDS_DS04.DOC_NUMBER, 0CDS_DS04.RECORDMODE Extracte
	* only column names: DOC_NUMBER, RECORDMODE
	* 
	* @throws Exception
	*/
	private void extractSrcCols() throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Extract Columns..."} );
		// srcCols: 0CDS_DS04.DOC_NUMBER, 0CDS_DS04.RECORDMODE
		String srcCols = map.getSelectedSrcCols();
		// added to handle unique column name
		String uinqueColName = map.getUniqueSelectedSrcCols();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"###SrcCols###" + srcCols} );
		/*if (srcCols.indexOf("HIER") != -1 && srcCols.indexOf("VERSION") != -1) {
			srcCols = srcCols.substring(0, srcCols.lastIndexOf(","));
			logger.log("###SrcCols After removing VERSION### " + srcCols);
		}*/
		// colFlex: DOC_NUMBER~<FLEXFIELD1>~<FLEXFIELD2>
		String colFlex = map.getColFlexFields();
		// Get Column and FlexField mapping
		colFlexMap = extractFlexFields(colFlex);

		// Steps to extract only column name without table prefix
		StringTokenizer st = new StringTokenizer(srcCols, ","); // Separator ,
		//added to handle unique col name
		StringTokenizer uColname = new StringTokenizer(uinqueColName, ","); // Separator ,
		String token = "";
		String tableAlias = "";
		String cxColName = "";
		ArrayList cols = new ArrayList();
		String newAlias = "";
		OdiSAPBWTable table = null;

		/**
		* Maintians the mapped column order index
		*/
		int maporder = -1;
		
		while (st.hasMoreTokens() && uColname.hasMoreTokens()) {
			token = st.nextToken().trim();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"token: " + token} );
			newAlias = token.substring(0, token.indexOf('.'));
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"New Alias: " + newAlias} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table Alias: " + tableAlias} );
			
			if (!newAlias.equals(tableAlias)) {
				
				tableAlias = newAlias;
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"THE TABLE IS Alias "+ tableAlias +"&& THE  cols.size() IS "+cols.size()} );
				if (cols.size() > 0) {
					if (table != null) {
						// code added to handle col merging from diff tables
						if(table.getCols().size()>0)
						{
							ArrayList addCol = table.getCols();
							addCol.addAll(cols);
						} else {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Set the Col List into Table: "+ table.getAlias()} );
							table.setCols(cols);
						}
						// code added to handle col merging from diff tables
					}
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"tableAlias.trim()== "+tableAlias.trim()} );
				cols = new ArrayList();
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"tableInstanceMap is:- "+tableInstanceMap +"Key is :"+tableInstanceMap.keySet()} );
				
				table = (OdiSAPBWTable) tableInstanceMap.get(tableAlias.trim());// getMatchingTable(tableAlias);
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"table is = "+table} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### table type is #####=> "+table.getType()} );
			}
			String uniqueSrcColName = uColname.nextToken().trim();
			cxColName = token.substring(token.indexOf('.') + 1, token.length());
			String odiColName = token.substring(token.indexOf('.') + 1, token.length());
			// new condition added to handle c1 column name
			if(cxColName.equals(uniqueSrcColName.contains(cxColName)))
			{
				cxColName = uniqueSrcColName;
				odiColName = uniqueSrcColName;
			}
			//
			
			//	String colNamewithPrefix = colName.substring(3);
			String colNamewithoutPrefix = cxColName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Matching Table to update with Column details: "+ table.getOdiName()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Before -- odiColName: "+ odiColName} );
			OdiSAPBWColumn col = new OdiSAPBWColumn();
			col.setOdiName(odiColName);//added to get the ODI column name in LKM BW build#21
			if (table.getType().equals(INFOCUBE)) {

				/**
				* InfoCube Column: Remove unwanted prefix from InfoCube column
				* name InfoCube Column Name Format: IOPK_<DIM Name>_<InfoObject_Name>_PK_<InfoObject_PK_Name>
				* Unwanted prefix: IOPK_<DIM Name>_<InfoObject_Name>_PK_
				* 
				*/
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Remove unwanted prefixes from Col Name: (IOPK and KF)"+ cxColName} );
				if (colNamewithoutPrefix.startsWith("KF_")) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside if block Col Name:"+ cxColName} );
					cxColName = cxColName.replaceFirst("KF"+UNDERSCORE, "");
					//colName = colName.substring(3); // KF Columns
					/*
					* if(colName.startsWith("0"))
					* col.setModifiedName(colName.substring(1,
					* colName.length())); else col.setModifiedName(colName);
					*/
					col.setModifiedName(cxColName);
				}
				/*
				* else if(colName.startsWith("IOPK_")) colName =
				* colName.substring(colName.lastIndexOf("_PK_")+4,
				* colName.length());
				*/// IOPK
				// Columns
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"After -- odiColName: "+ col.getOdiName()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"table.getType()is :- "+table.getType()} );
			/**
			* @author Anupam.Srivastava
			* Date 9,July,2010
			* Code is Disabled because of the implementation of the New Open Hub Template
			* Resolved Issue Number :- (9746913),Desc:- OHD EXTRACTION: TARGET COLUMN ORDER NEEDS TO MATCH SOURCE COL ORDER
			*/
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Read properties of Column: " + cxColName} );
			//if (!(table.getType().equals(INFOOBJECT_HIER) && colName.equalsIgnoreCase("VERSION")))
			col.setName(cxColName);
			//logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"colNamewithPrefix: " + colNamewithPrefix} );
			String[] ffValues = (String[]) colFlexMap.get(colNamewithoutPrefix);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ffValues: " + ffValues.length} );
			if (ffValues != null) {
				int index = 0;
				// InfoObject Name- associated with IOPK column
				if (index < ffValues.length)
				col.setInfoObjectName(ffValues[index]);
				index++;
				// SID Table Name
				if (index < ffValues.length)
				col.setBwSidTable(ffValues[index]);
				index++;
				// Column Type
				if (index < ffValues.length) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ffValues[index].toUpperCase(): " + ffValues[index].toUpperCase()} );
					if (ffValues[index].toUpperCase().startsWith("KF"))
					col.setBwColumnType(KEY_FIGURE);
					else if (ffValues[index].toUpperCase().startsWith("IOPK"))
					col.setBwColumnType(IOPK_COLUMN);
					else if (ffValues[index].toUpperCase().startsWith(
								"KEY_FIELD"))
					col.setBwColumnType(KEY_FIELD);
					else
					col.setBwColumnType(ffValues[index]);
				}
				index++;
				// Column name for KF and IOPK columns of InfoCube
				/*
				* Column Name- For InfoCube (KF and IOPK) For other data
				* targets (ODS/DSO, OHD, InfoObject) column names containing
				* special characters e.g. /BIC/ZREV
				*/
				if (index < ffValues.length) {
					if (table.getType().equals(INFOCUBE))
					col.setName(ffValues[index]);
					else {
						// Store actual column name containing special char e.g.
						// /BIC/ZREV
						if (!ffValues[index].equals(""))
						col.setName(ffValues[index]);
					}
				}
				index++;
				// P Table Name
				if (index < ffValues.length)
				col.setBwPTable(ffValues[index]);
				index++;
				// FIXME: There is problem in reading [SAP_BW_QTABLE_NAME]flex
				// field
				// Q Table Name
				if (index < ffValues.length)
				col.setBwQTable(ffValues[index]);
				index++;
				// NAV Attribute
				if (index < ffValues.length)
				col.setBwNavAttr(Integer.parseInt(ffValues[index]));
				index++;
				// Time dependent Attribute
				if (index < ffValues.length)
				col.setBwTimeDepAttr(Integer.parseInt(ffValues[index]));
			}
			//****Added from 23 build*************
			/*****Get the source metadata list and set the Column Data Type (SOURCE_DT) */
			Iterator srcColIter = srcColsMetadata.keySet().iterator();
			
			String colName = cxColName.substring(cxColName.indexOf("_")+1, cxColName.length()).trim(); 
			while(srcColIter.hasNext()) {
				//sapLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"EEEEEEEEEEEEEEEEEE"} );
				String curSrcColName = srcColIter.next().toString();
				String srcAliasName = curSrcColName.substring(0, curSrcColName.indexOf(".")).trim();
				String srcColName = curSrcColName.substring(curSrcColName.indexOf(".")+1).trim();
				if(srcColName.startsWith("KF_")) {
					srcColName = srcColName.substring(srcColName.indexOf("_")+1, srcColName.length());
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {" srcColName: "+srcColName+", cxColName: "+cxColName} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {" srcColName: "+srcColName+", colName: "+colName} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><UUUUUUUUUUUU><<><curSrcColName: "+curSrcColName} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><UUUUUUUUUUUU><<><srcAliasName: "+srcAliasName} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><UUUUUUUUUUUU><<><tableAlias: "+tableAlias} );
				if((srcAliasName.equalsIgnoreCase(tableAlias)) && (srcColName.equalsIgnoreCase(colName))  ) {
					HashMap curSrcCol = (HashMap)srcColsMetadata.get( curSrcColName );
					//String colSrcColType = curSrcCol.get("TYPE_NAME").toString();
					//String colOrder = curSrcCol.get("ORDER").toString();
					//String colPrecision = curSrcCol.get("PRECISION").toString();
					//String colScale = curSrcCol.get("SCALE").toString();
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><TYPE_NAME><<><: "+curSrcCol.get("TYPE_NAME")} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><ORDER><<><: "+curSrcCol.get("ORDER")} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><PRECISION><<><: "+curSrcCol.get("PRECISION")} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"<><><SCALE><<><: "+curSrcCol.get("SCALE")} );
					//smField.setSourceDataType(curSrcCol.get("TYPE_NAME").toString().trim());
					//smField.setOrder(curSrcCol.get("ORDER").toString().trim());
					//smField.setColLength(curSrcCol.get("PRECISION").toString().trim());
					//smField.setColScale(curSrcCol.get("SCALE").toString().trim());
					if(curSrcCol.get("TYPE_NAME") != null)
					col.setSourceDataType(curSrcCol.get("TYPE_NAME").toString().trim());
					if(curSrcCol.get("ORDER") != null)
					col.setOrder(curSrcCol.get("ORDER").toString().trim());
					if(curSrcCol.get("PRECISION") != null)
					col.setColLength(curSrcCol.get("PRECISION").toString().trim());
					if(curSrcCol.get("SCALE") != null)
					col.setColScale(curSrcCol.get("SCALE").toString().trim());
					
					/**
					* adding the mapped column order index in the map
					*/
					col.setMappingOrder((++maporder));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{col.getName() + " ORDER : " + col.getMappingOrder()});
					
					break;
				}
			}//end of while loop
			srcColIter = null;
			//sapLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"FFFFFFFFFFFFFFFFFFFFFFFFFF"} );
			/*****END of - getting source metadata list and set the Column Data Type (SOURCE_DT)*/
			
			cols.add(col);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"cols size="+cols.size()+"cols data="+cols} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"col"+col} );
		}
		/**
		* @author Anzarul.Haque
		* Date 4 October 2010
		* Code added to fix below Enhancement
		* LKM BW DOES NOT SUPPORT EXTRACTION FROM OHD TABLES WITH SEMANTIC KEY
		*/
		//if (FIRST_REQ_ID or LAST_REQ_ID is different from KM default value) AND (OHD table does not have any OHREQID column), 
		if(table != null) {
			if (table.getType().equals(OPEN_HUB_DESTINATION)) {
				if((!(firstReqId.equals("0"))) || (!(lastReqId.equals("0")))) {
					if(!isOHREQUIDAvailable) {
						flag_INVALID_OHD_DELTA_LOADING = true;
						throw new UnSupportedOhdDeltaLoadException(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_OHD_DELTA));
					}
				}
			}
		}//end of if(table != null)

		// For the last col list
		if (cols.size() > 0) {
			if (table != null) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Add the last Col List into Table: "+ table.getAlias()} );
				// code addded to resolve randomly inserted records
				if(table.getCols().size()>0)
				{
					ArrayList addCol = table.getCols();
					addCol.addAll(cols);
				} else {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Set the Col List into Table: "+ table.getAlias()} );
					table.setCols(cols);
				}
			}
		}
		displayTableDetails();
	}//end of extractSrcCols()

	
	/**
	* Parse Source Meta data. List contains Source Alias Name,
	* column Name, Source Data type, Column Precision (length) 
	* and Scale
	* @return HashMap
	*/
	private HashMap parseSourceMetadata() {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"++++++++ OdiSapRef.parseSourceMetadata() +++++++"} );
		HashMap srcCols = new HashMap();
		//Iterate over all tables
		//SapTable sapTable = null;
		OdiSAPBWTable table = new OdiSAPBWTable();
		for(int i = 0; i < tables.size(); i++ ) {
			table = (OdiSAPBWTable) tables.get(i);
			//sapTable = (SapTable) sSrcTables.get(i);
			//String aliasName = sapTable.getAlias();
			String aliasName = table.getAlias();
			String tableMetadata = table.getMetadata();
			
			String tableName = tableMetadata.replaceFirst(".*?SNP.CRTABLE_NAME=(.*?)SNP.CR.*","$1");
			HashMap curTableHM = new HashMap();
			//srcTables.put( aliasName, curTableHM );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"TableName: " + tableName} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"AliasName: " + aliasName} );
			String []colList = tableMetadata.split("SNP.CRDWG_COLSNP.CR");
			
			//Iterate over all columns
			for (int c = 1; c < colList.length; c++) {
				String colMD = colList[c];
				String colName = colMD.replaceFirst("COL_NAME=(.*?)SNP.CR.*","$1");
				HashMap curColHM = new HashMap();
				curTableHM.put( colName, curColHM );
				srcCols.put( aliasName + "." + colName, curColHM );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ColName: " + colName} );
				//String []propList = colMD.split("\\QSNP$CR\\E");test it later
				String []propList = colMD.split("SNP.CR");
				// Iterate over all parameters
				for (int p = 1; p < propList.length; p++) {
					String propMD = propList[p];
					// property name/ value pair left?
					if (propMD.matches(".*?=.*")) {
						String []str = propMD.split("=");
						String propName = str[0];
						//	String propValue = str[1];
						String propValue = (str.length>1)?str[1]:null;
						curColHM.put(propName, propValue);
					}//end of if condition
				}//end of inner for loop
			}//end of sub-inner for loop
		}//end of outer for loop

		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"OdiSapRef.parseSourceMetadata() Number of Column in Soruce: "+srcCols.size()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"-------------- OdiSapRef.parseSourceMetadata() ---------------"} );
		return srcCols;
	}//END of parseMetadata() method
	
	
	
	/**
	* Extract Column name and its corresponding FlexFields
	* 
	* @param colFlex:
	*            <Col_Name1>~<FlexField1>~<FlexField2>,<Col_Name2>~<FlexField1>~<FlexField2>
	* @return HashMap - [COL_NAME]-[One or More FlexField Values]
	*/
	private HashMap extractFlexFields(String colFlex) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Extract column meta data from FlexFields..."} );
		HashMap map = new HashMap();
		// FIXME: Use some smart delimeter to tokenize
		// Special char (, - # etc.) might come in field description
		StringTokenizer st = new StringTokenizer(colFlex, "+");
		while (st.hasMoreTokens()) {
			String token = st.nextToken();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"FlexField Token: " + token} );
			String colName = token.substring(0, token.indexOf('~'));
			// Skip first entry
			token = token.substring(token.indexOf('~') + 1, token.length());
			// Get FlexField values
			/*
			* Order of FF Values- 0- [COL_HEADING] for IOPK column it will
			* return InfoObject name 1- [SAP_BW_SID_TABLE_NAME] 2-
			* [SAP_BW_COLUMN_TYPE] 3- [SAP_BW_COLUMN_NAME] 4-
			* [SAP_BW_PTABLE_NAME] 5- [SAP_BW_PTABLE_NAME] this should be
			* [SAP_BW_QTABLE_NAME] FIXME problem with [SAP_BW_QTABLE_NAME] 6-
			* [SAP_BW_NAVIGATION_ATTRIBUTE] 7-
			* [SAP_BW_TIME_DEPENDENT_ATTRIBUTE]
			*/
			String[] ffValues = token.split("~");
			// add in map
			
			map.put(colName, ffValues);

		}
		return map;
	}

	/*
	* This method will return all the Column of the Source Table
	* 
	*/
	public Vector sourceTabColumnName(String colFlex) {
		Vector vectSourceCol = new Vector();
		StringTokenizer st = new StringTokenizer(colFlex, "+");
		while (st.hasMoreTokens()) {
			String token = st.nextToken();
			String colSourceName = token.substring(0, token.indexOf('~'));
			vectSourceCol.add(colSourceName);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"###Column Names are ###" + colSourceName} );

		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########vectSourceCol############" + vectSourceCol} );
		return vectSourceCol;
	}

	/**
	* IMPORTANT: this method should be called after setSrcTable Filter sample:
	* "And (ZODS_VEN.PRICE_MAT < 1000.00) And (ZODS_VEN.CURRENCY == 'INR')"
	* 
	* @throws Exception
	*/
	private void extractFilters() throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Extract Filter Details..."} );
		String filters = map.getFilters();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#####FILTER####@@@###"+filters} );
		
		// if there is no filter conditions
		if (filters == null)
		return;
		if (filters.trim().equals(""))
		return;

		// remove the first AND
		filters = filters.replaceFirst(WORD_BLOCK + "(And|AND|and)"+WORD_BLOCK, "").trim();   
		//Remove all other AND's by ~
		filters = filters.replaceAll(WORD_BLOCK + "(And|AND|and)" + WORD_BLOCK, "~").trim();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Remved first AND: " + filters} );

		String[] tokens = filters.split("~");
		String token = "";
		String tableAlias = "";
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Filters: " + tokens.length} );

		for (int j = 0; j < tokens.length; j++) {

			token = tokens[j].trim();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Token: " + token} );
			// remove (
			token = token.replaceAll(START_BRACKET, "");
			// remove )
			token = token.replaceAll(END_BRACKET, "");
			// remove start & end space
			// e.g. ZODS_VEN.PRICE_MAT < 1000.00
			token = token.trim();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Token without Bracket: " + token} );

			// Get Table name e.g. ZODS_VEN
			tableAlias = token.substring(0, token.indexOf(".")).trim();
			// Filter string without table name e.g. PRICE_MAT < 1000.00
			token = token.substring(token.indexOf(".") + 1, token.length()).trim();

			//token = token.replace(tableAlias+".", "");//added by Anzar
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"token after replacing Table Alias: " + token} );

			// Filter statement: PRICE_MAT LE 1000.00
			String filterStatement = replaceFilterConSymboles(token);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table Alias: " + tableAlias} );

			// Find out the matching table instance
			OdiSAPBWTable table = (OdiSAPBWTable) tableInstanceMap
			.get(tableAlias.trim());
			// getMatchingTable(tableAlias.trim());

			/*
			* Create Filter Instance
			*/
			OdiSAPBWFilter filter = new OdiSAPBWFilter();
			filter.setTable(table);
			// Field name
			String field = token.substring(0, token.indexOf(" "));
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Field: " + field} );
			/*
			* Find out actual field name. This step is required for IOPK, KF
			* and columns having special character "/"
			*/
			if (field.toUpperCase().startsWith("IOPK_")) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"IOPK Field"} );
				String[] ffs = (String[]) colFlexMap.get(field);
				field = ffs[0]; // InfoObject name
				filter.setFieldType(IOPK_COLUMN);
				/*
				* ArrayList cols = table.getCols(); for(int i=0; i<cols.size();
				* i++){ OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);
				* if(field.equals(col.getInfoObjectName())){
				* filter.setCol(col); break; } }
				*/
			} else if (field.toUpperCase().startsWith("KF_")) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"KF Field"} );
				field = field.substring(3);
				filter.setFieldType(KEY_FIGURE);
			} else {
				/*
				* For other data targets (ODS/DSO, InfoObject and OHD), if the
				* column name contains special char e.g. "/BIC/ZREV" field name
				* will come from SAPBW_COLUMN_NAME flexfield
				*/
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Non KF and IOPK Cols..."} );
				String[] ffs = (String[]) colFlexMap.get(field);
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"FlexFields associated with this Field: " + ffs} );
				if (ffs != null) {
					if (ffs.length >= 4) {
						if (!ffs[3].equals("")) {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Field contains special character"} );
							// replace field name with its actual value
							filterStatement = filterStatement.replaceAll(field,
							ffs[3]);
							field = ffs[3]; // SAPbW_COLUMN_NAME
						}
					}
				}
			}

			// == A101 - condition and value
			token = token.substring(token.indexOf(" ") + 1, token.length())
			.trim();

			// condition
			String cond = token.substring(0, token.indexOf(" "));
			// Replace all filter condition symboles e.g. < >
			cond = replaceFilterConSymboles(cond);
			// value
			token = token.substring(token.indexOf(" ") + 1, token.length())
			.trim();
			// filter condition value e.g. 1000.00
			String fieldValue = addQuote(token); // token
			if(fieldValue.contains("#")) {//Added by Anzar
				fieldValue = fieldValue.replace(""+(char)39,"").trim();//replace single quote
				fieldValue = fieldValue.replaceAll("#","IV_");//Added by Anzar
				fieldValue = fieldValue.replace(""+(char)46, ""+(char)95);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Filter Field: " + field} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Filter Cond: " + cond} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Filter Field Value: " + fieldValue} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Filter Statement: " + filterStatement} );
			filter.setField(field);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Field Set Successfully" } );
			filter.setFilterCon(cond);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Cond Set Successfully" } );
			filter.setFilterValue(fieldValue);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"fieldValue Set Successfully" } );
			// <field> <cond> <field_value>
			filterStatement = field + " " + cond + " " + fieldValue;
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"filterStatement"+filterStatement } );
			filter.setStatement(filterStatement);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"filterStatement Set Successfully : filter="+filter +"table"+table } );
			// Skip the table alias i.e. PRICE_MAT < 1000.00
			/*
			* token = token.substring(token.indexOf(".")+1, token.length());
			* table.setFilterRule(token);
			*/
			table.setFilter(filter);
			
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End of extractFilters Method " + filterStatement} );
		}
	}
	
	/**
	* Method for ODI Variables Check  
	*/
	public ArrayList identify_ODIVariables() {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"############ INSIDE THE identify_ODIVariables() #########################"} );
		ArrayList arrODIVar = new  ArrayList();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### MAP IS ####="+map} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"map.getFilters() IS ==="+map.getFilters()} );
		String filtersODI = map.getFilters();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#####FILTER IN THE identify_ODIVariables() METHOD IS #######"+filtersODI} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"############ Return Value is :#########################"+arrODIVar} );

		// if there is no filter conditions
		if (filtersODI == null){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"filtersODI is :"+filtersODI} );
			return null;
		}
		
		if (filtersODI.trim().equals("")){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"filtersODI IS Again..."+filtersODI} );

			return null ;
		}
		if(filtersODI.indexOf("HIER") != -1) {
			filtersODI = filtersODI.replace(""+(char)39,"").trim();//replace single quote
		}
		filtersODI = filtersODI.replaceAll("And","~");
		filtersODI = filtersODI.replaceAll("and","~");
		
		StringTokenizer st1 = new StringTokenizer(filtersODI,"~");
		
		while(st1.hasMoreTokens()){
			String Odi = st1.nextToken();
			if(!Odi.equals("")){
				arrODIVar.add(Odi);
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"arrODIVar==>"+arrODIVar} );
			}
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"############ Return Value form the  method is :#########################"+arrODIVar} );
		return arrODIVar;
		
	}


	//Get Operator for the expression
	public String getOperator(String Exp){
		
		String opr = "";
		//System.out.println(Exp.indexOf('>'));
		if(Exp.indexOf((char)60+""+(char)62)!= -1){
			opr = ""+(char)60+""+(char)62;
			return opr;
		}else if(Exp.indexOf((char)62+""+(char)61)!= -1){
			opr = ""+(char)62+""+(char)61;
			return opr;
		}else if(Exp.indexOf((char)60+""+(char)61)!= -1){
			opr = ""+(char)60+""+(char)61;
			return opr;
		}else if(Exp.indexOf((char)62)!= -1){
			opr = ""+(char)62;
			return opr;
		}else if(Exp.indexOf((char)60)!= -1){
			opr = ""+(char)60;
			return opr;
		}else if(Exp.indexOf((char)33+""+(char)61)!= -1){
			opr = ""+(char)33+""+(char)61;
			return opr;
		}/*else{
				opr = "=";
				System.out.println("Contains =");
			}*/
		opr = ""+(char)61;
		return opr;
		
	} //end of getOperator() method

	/**
* Getting Odi Variable Name from filter condition
* @return StringBuffer : Odi Variable Name
*/

	public String getOdiName(){
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Calling the Method :: getOdiName()"} );
		StringBuffer filtrExpSubStr = new StringBuffer();
		String emptyStrBuffer = "" ;//For Return null value 
		String optr = null;
		ArrayList sFiltersExpr = identify_ODIVariables();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"### CHECK THE VALUE OF sFiltersExpr ###"+sFiltersExpr} );
		if(sFiltersExpr==null ||sFiltersExpr.equals("null") || sFiltersExpr.equals("") ){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### BLANK  IN THE METHOD getOdiName() #####"+emptyStrBuffer} );
			return emptyStrBuffer;
		}
		
		for(int i=1;i<sFiltersExpr.size();i++){
			String val = sFiltersExpr.get(i).toString();
			val = val.replace(""+(char)39,"").trim();//replace single quote
			if(val.indexOf(" AND ") != -1){
				String []fSplit = val.split(" AND ");
				for(int j = 0; j < fSplit.length; j++) {
					if(fSplit[j].indexOf(" OR ")!= -1){
						String []ORSplit = fSplit[j].split(" OR ");
						for(int m = 0; m < ORSplit.length; m++) {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() Final String AND OR:"+ORSplit[m]} );
							optr = getOperator(ORSplit[m].trim());
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() OPERATOR IS :"+optr} );
							getOdiVariables(ORSplit[m].trim());
						}
					} else {
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() Final String AND Only: "+fSplit[j]} );
						optr = getOperator(fSplit[j].trim());
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() OPERATOR IS :"+optr} );
						getOdiVariables(fSplit[j].trim());
					}
				}
			}else if(val.indexOf(" OR ")!= -1){
				String []ORSplit = val.split(" OR ");
				for(int m = 0; m < ORSplit.length; m++) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() Final String OR if: "+ORSplit[m]} );
					if(ORSplit[m].indexOf(" AND ")!= -1){
						String []ANDSplit = ORSplit[m].split(" AND ");
						for(int n = 0; m < ANDSplit.length; m++) {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() Final String OR AND: "+ANDSplit[n]} );
							optr = getOperator(ANDSplit[n].trim());
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() OPERATOR IS : "+optr} );
							getOdiVariables(ANDSplit[n].trim());
						}
					}else{
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() Final String OR only: "+ORSplit[m]} );
						optr = getOperator(ORSplit[m].trim());
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() OPERATOR IS :"+optr} );
						getOdiVariables(ORSplit[m].trim());
					}//End of  if(ORSplit[m].indexOf(" AND ")!= -1)
				}//End of  for(int m = 0; m < ORSplit.length; m++)
			}else{
				optr = getOperator(val.trim());
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() OPERATOR IS : "+optr} );
				getOdiVariables(val.trim());
			}//End of else part of if(val.indexOf(" AND ") != -1)
		}//End of For Loop

		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiName() ODI NAME Final String: "+filtrExpSubStr.toString().replace(""+(char)46, ""+(char)95)});
		//below int variable prevents addition of an extra pipe separator in the end
		int removeLastPipe = 0;
		for (Object val : setOfVariables) {
			String value = (String)val;
			filtrExpSubStr.append(value.replace(""+(char)46, ""+(char)95).replaceAll("#", "IV_"));
			removeLastPipe++;
			if(setOfVariables.size() > removeLastPipe)
			filtrExpSubStr.append("|");
		}
		return filtrExpSubStr.toString();
	}//End of getOdiName()


	/**
* Getting Odi Variable Value from filter condition
* @return StringBuffer : Odi Variable Value
*/

	public StringBuffer getOdiValue(){
		StringBuffer filtrExpSubStr = new StringBuffer();
		String optr = null;
		StringBuffer emptyStrBuffVal = null ;//For Returning null value
		StringBuffer strExp = new StringBuffer();
		ArrayList sFiltersExpr = identify_ODIVariables();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### BLANK  IN THE METHOD of the getOdiValue() #####"+emptyStrBuffVal} );
		if(sFiltersExpr==null ||sFiltersExpr.equals("null") || sFiltersExpr.equals("") ){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### BLANK  IN THE METHOD of the getOdiValue() #####"+emptyStrBuffVal} );
			return emptyStrBuffVal;
		}
		for(int i=0;i<sFiltersExpr.size();i++){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() "+sFiltersExpr.get(i)} );
			String val = sFiltersExpr.get(i).toString();
			val = val.replace(""+(char)39,"").trim();//replace single quote
			if(val.indexOf(" AND ") != -1){
				String []fSplit = val.split(" AND ");
				for(int j = 0; j < fSplit.length; j++) {
					if(fSplit[j].indexOf(" OR ")!= -1){
						String []ORSplit = fSplit[j].split(" OR ");
						for(int m = 0; m < ORSplit.length; m++) {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() Final String AND OR: "+ORSplit[m]} );
							optr = getOperator(ORSplit[m].trim());
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() OPERATOR IS : "+optr} );
							getOdiVariables(ORSplit[m].trim());
						}
					} else {
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() Final String AND Only: "+fSplit[j]} );
						optr = getOperator(fSplit[j].trim());
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() OPERATOR IS : "+optr} );
						getOdiVariables(fSplit[j].trim());
					}
				}
			}else if(val.indexOf(" OR ")!= -1){
				String []ORSplit = val.split(" OR ");
				for(int m = 0; m < ORSplit.length; m++) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() Final String OR if: "+ORSplit[m]} );
					if(ORSplit[m].indexOf(" AND ")!= -1){
						String []ANDSplit = ORSplit[m].split(" AND ");
						for(int n = 0; m < ANDSplit.length; m++) {
							optr = getOperator(ANDSplit[n].trim());
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue()OPERATOR IS : "+optr} );
							getOdiVariables(ANDSplit[n].trim());
						}
					}else{
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue()Final String OR only: "+ORSplit[m]} );
						optr = getOperator(ORSplit[m].trim());
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue()OPERATOR IS : "+optr} );
						getOdiVariables(ORSplit[m].trim());
					}
				}//End of for(int m = 0; m < ORSplit.length; m++)
			}else{
				optr = getOperator(val.trim());
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue()OPERATOR IS : "+optr} );
				getOdiVariables(val.trim());
			}//End of if(val.indexOf(" AND ") != -1)
		}//End of for loop for(int i=0;i<sFiltersExpr.size();i++)

		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getOdiValue() ODI NAME Final String: "+filtrExpSubStr} );
		int removeLastPipe = 0;
		for(Object val : setOfVariables) {
			String value = (String)val;
			filtrExpSubStr.append(value);
			removeLastPipe++;
			if(setOfVariables.size() > removeLastPipe)
			filtrExpSubStr.append("|");
		}
		return filtrExpSubStr;
	}//End of getOdiValue()

	/*
* below method returns a set of values containing ODI variable names
*/
	public Set getOdiVariables(String condn){
		StringBuffer strExp = new StringBuffer();
		StringTokenizer st1 = new StringTokenizer(condn.toString());
		while(st1.hasMoreTokens()){
			String odi = st1.nextToken().trim();
			if(odi.indexOf('#') != -1){
				//my code
				
				// Pattern pattern = Pattern.compile("#((\\w+[.])?\\w+)+");
				Pattern pattern = Pattern.compile("#(("+(char)92+"w+[.])?"+(char)92+"w+)+");
				Matcher matcher = pattern.matcher(odi);
				while (matcher.find()) {
					String match = odi.substring(matcher.start(), matcher.end());
					setOfVariables.add(match.trim());
				} 
			}
		}
		return setOfVariables; 
	} 

	/**
* @author Anupam.Srivastava
* DATE :- 30,June,2010
* This Method will be used for the Hierarchy Filter 
* @return
* @throws Exception
*/
	public String getHierarchyFilter() throws Exception {
		StringBuffer filtrExpSubStrHier = new StringBuffer();
		ArrayList sFiltersExprHier = identify_ODIVariables();;

		int counter = 0;
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"###The Value is for sFiltersExprHierarchy ###"+sFiltersExprHier} );
		if(sFiltersExprHier == null ||sFiltersExprHier.equals("null") || sFiltersExprHier.equals("") ){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##### BLANK  IN THE METHOD of the getHierarchyFilter() #####"} );
			return "";
		}
		for(int i = 0 ; i <sFiltersExprHier.size(); i++) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"odiRef getHierarchyFilter() "+sFiltersExprHier.get(i)} );
			String val = sFiltersExprHier.get(i).toString();
			if(val.indexOf("HIER") == -1) {
				return null;
			}
			//check whether filter condition is on only RSHIENM, DATETO and VERSION field
			if(!((val.indexOf("RSHIENM") != -1) || (val.indexOf("DATETO") != -1) || (val.indexOf("VERSION") != -1))) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Filter condition other than RSHIENM, DATETO and VERSION columns are not supported for Hierarchy"} );
				flag_INVALID_HIERARCHY = true;
				logger.severe("ODIKM-SAPBW-LKM-10016", new Object[] {odiLang.getValue(OdiSAPBWLang.INVALID_HIERARCHY_FILTER)} );
				throw new UnSupportedHierarchyFilterException(odiLang.getValue(OdiSAPBWLang.INVALID_HIERARCHY_FILTER));
			}
			//if(val.indexOf("=") != -1){
			//String []fSplit = val.split("=");
			
			val = val.replace(""+(char)39,"").trim();//replace single quote
			val = val.replace(""+(char)40,"").trim(); //removing '(' from string
			val = val.replace(""+(char)41,"").trim(); //removing ')' from string
			
			if(counter > 0) {
				filtrExpSubStrHier = filtrExpSubStrHier.append((char)44);//(char)44 ASCII code of comma
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"filtrExpSubStrHier: "+filtrExpSubStrHier} );
			}//end of inner if condition
			filtrExpSubStrHier = filtrExpSubStrHier.append(val);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getHierarchyFilter() - filtrExpSubStrHier: "+filtrExpSubStrHier} );
			//}//end of outer if condition
			counter++;
		}//End of for loop for
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ODI Var Name Final String getHierarchyFilter(): "+filtrExpSubStrHier} );
		return filtrExpSubStrHier.toString();
	}//end of getHierarchyFilter() method


	/**
	* Replace Filter condition symboles- < LT > GT >= GE <= LE == EQ != NE
	* 
	* @param filterCon
	*/
	private String replaceFilterConSymboles(String filterCon) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Filter condition symboles (e.g. <= with LE etc.)"} );
		filterCon = filterCon.replace("<=", "LE");
		filterCon = filterCon.replace(">=", "GE");
		filterCon = filterCon.replace("!=", "NE");
		filterCon = filterCon.replace("=", "EQ");
		filterCon = filterCon.replace("<>", "NE");
		filterCon = filterCon.replace("<", "LT");
		filterCon = filterCon.replace(">", "GT");
		return filterCon;
	}

	/**
	* This function checks for decimal value containing "." and adds single
	* quote
	* 
	* @param token
	* @return
	*/
	private String addQuote(String token) {
		String fieldValue = token;
		String strConst = "'";
		if (fieldValue.contains("'")) {
			return fieldValue;
		} else if (fieldValue.contains(".")) {
			fieldValue = strConst.concat(fieldValue);
			fieldValue = fieldValue.concat(strConst);
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Value: " + fieldValue} );
		

		return fieldValue;
	}

	private void extractJoins() throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Extract Join details..."} );
		String joins = map.getJoins();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"extractJoins() :: Joins from map ::"+joins});
		String fromStmt = map.getFrom();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"############## fromStmt ##################" + fromStmt} );
		// ##################"+fromStmt.indexOf("JOIN"));

		boolean isLeftOuterJoin = false;
		/*
		* FIXME: identify join type for all joins between InfoCube and its
		* associated InfoObjects
		*/
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ODI FromStmt: " + fromStmt} );
		
		if (fromStmt.contains("INNER JOIN") || fromStmt.contains(", <"+"?=")) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Invalid Join::::= "	+ odiLang.getValue(OdiSAPBWLang.INVALID_LEFT_OUTER_JOIN)} );
			flag_INVALID_LEFT_OUTER_JOIN = true;
			throw new UnSupportedJoinTypeException(odiLang.getValue(OdiSAPBWLang.INVALID_LEFT_OUTER_JOIN));
			
			//throwCodeGenException(odiLang.getValue(OdiSAPBWLang.INVALID_LEFT_OUTER_JOIN));
			
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Applied Joins: " + joins} );

		if (joins == null)
		return;
		if (joins.trim().equals(""))
		return;

		String[] join = joins.split("~");
		/*
		* Handle individual join conditions
		*/
		for (int i = 0; i < join.length; i++) {
			OdiSAPBWJoin tjoin = new OdiSAPBWJoin();
			/*
			* Split a single join into multiple column mapping
			*/
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Single Join: " + join[i]} );
			
			//Code fix to support multi-column join
			String[] jnStmt;
			if(join[i].contains("AND")){
				jnStmt = join[i].split(WORD_BLOCK + "AND" + WORD_BLOCK);
			}else{
				jnStmt = join[i].split(",");
			}//end of Code Fix
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Join statemnet::: " + jnStmt.length} );
			for (int j = 0; j < jnStmt.length; j++) {
				/*
				* Extract master table, sub table and their mapped columns
				* Sample txt: ZMATERIAL.ZMATERIAL=TXT_ZMATERIAL.ZMATERIAL
				*/
				String colMapping = jnStmt[j].trim();
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Col Mapping: " + colMapping} );
				colMapping = colMapping.replace(""+(char)40, "");//removing lef bracket
				colMapping = colMapping.replace(""+(char)41, "");//removing right bracket
				String masterStmt = colMapping.substring(0, colMapping
				.indexOf("="));
				String subStmt = colMapping.substring(
				colMapping.indexOf("=") + 1, colMapping.length());
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"MasterStmt: " + masterStmt} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SubStmt: " + subStmt} );
				
				// Master Table
				String masterTable = masterStmt.substring(0, masterStmt
				.indexOf("."));
				// Master field of InfoCube
				String masterCol = masterStmt.substring(
				masterStmt.indexOf(".") + 1, masterStmt.length());
				// Sub Table
				String subTable = subStmt.substring(0, subStmt.indexOf(".")).trim();
				String subCol = subStmt.substring(subStmt.indexOf(".") + 1,subStmt.length());
				// Validate the Mapping
				if (!validateMapping(masterTable, subTable)) {
					OdiSAPBWTable masterTab = (OdiSAPBWTable) tableInstanceMap.get(masterTable);
					OdiSAPBWTable subTab = (OdiSAPBWTable) tableInstanceMap.get(subTable);
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Can't process further....No InfoObject Column is selected.."} );
				}
				// Validate Join condition
				if (!validateJoin(masterTable, subTable)) {
					OdiSAPBWTable masterTab = (OdiSAPBWTable) tableInstanceMap
					.get(masterTable);
					OdiSAPBWTable subTab = (OdiSAPBWTable) tableInstanceMap
					.get(subTable);
					flag_UNSUPPORTED_INTERFACE = true; 
					

					String msg = odiLang.getValue ( OdiSAPBWLang.UNSUPPORTED_INTERFACE, new String[] {masterTable,masterTab.getType(),subTable, subTab.getType()} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"" + msg} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Can't process further .... "} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"---------> ******************* NOT VALID JOIN ******************!!, PLEASE CHECK THE INTERFACE AND JOIN AGAIN....----->"} );
					
					if (flag_UNSUPPORTED_INTERFACE == true) {
						throw new UnSupportedJoinException(msg);
					}    

					
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Master Table=" + masterTable} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Master Cols=" + masterCol} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Sub Table=" + subTable} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Sub Cols=" + subCol} );
				
				

				tjoin.setMasterTable(masterTable);
				// TODO: create Instance of OdiSAPBWTable for Sub Table
				tjoin.setSubTable((OdiSAPBWTable) tableInstanceMap
				.get(subTable));
				// Store OdiSAPBWColumn instance
				tjoin.setMasterCol(createColumn(masterCol));
				// Store OdiSAPBWColumn instance
				tjoin.setSubCol(createColumn(subCol));
				tjoin.setInnerJoin(isLeftOuterJoin);
			}
			OdiSAPBWTable tab = (OdiSAPBWTable) tableInstanceMap.get(tjoin.getMasterTable());
			tab.setJoin(tjoin);
		}
		showTabJoinDetails();
	}

	/**
	* Validate the Mapping Condition
	* 
	* 1.Join between IC and IO with no column mapped from IO 2.Join between IC
	* and IO is only possible on source (not on staging) - Add Exception Msg
	* 3.Create Join between 0Apo_c01 IC and 0Apo_RESNAM IO and map all columns
	* of IC & IO columns to the target. 4.Detect is both IOPK and its
	* corresponding IO Join field is selected. If this is the case throw
	* exception. Only IOPK column should be selected.
	*/

	private boolean validateMapping(String masterTableName, String subTableName) throws Exception {
		boolean isValid = true;
		// CASE # 1. join between IC and IO with no column mapped from IO
		// --throw Exception
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Validate Mapping Between: " + masterTableName + " and "	+ subTableName} );
		OdiSAPBWTable masterTab = (OdiSAPBWTable) tableInstanceMap.get(masterTableName);
		OdiSAPBWTable subTab = (OdiSAPBWTable) tableInstanceMap.get(subTableName.trim());
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"masterTab==" + masterTab} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subTab-->" + subTab} );
		String strTargetTable = map.getTargetCols();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"strTargetTable==" + strTargetTable} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subTab.getCols()-->" + subTab.getCols()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subTab.getType()-->" + subTab.getType()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"masterTab.getAlias()-->" + masterTab} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"masterTab.getType()-->" + masterTab.getType()} );
		

		if (masterTab.getType().equals("InfoCube")) {
			if (subTab.getType().equals("InfoObject")) {
				// If no Element is selected from Master Table
				if (masterTab.getCols().size() == 1
						&& subTab.getCols().size() == 0) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Only one Info Cube is mapped to the targer & There is no Info Object Exists in Target Table ,So a Single Column is mapped Exception Thrown!!!"} );
					isValid = false;
					flag_IC_IO_COLUMN_EXCEPTION = true;
					logger.severe("ODIKM-SAPBW-LKM-10009", new Object[] {odiLang.getValue(OdiSAPBWLang.IC_IO_COLUMN_EXCEPTION)});
					throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.IC_IO_COLUMN_EXCEPTION));
					
				}
				if (masterTab.getCols().size() == 0
						&& subTab.getCols().size() == 1) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Only one Info Object is mapped to the targer & There is no Info Cube Exists in Target Table ,So a Single Column is mapped Exception Thrown!!!"} );
					isValid = false;
					flag_IC_IO_COLUMN_EXCEPTION = true;
					//	logger.severe("",  new Object[] {"srColName: " + srColName} );
					logger.severe("ODIKM-SAPBW-LKM-10009", new Object[] {odiLang.getValue(OdiSAPBWLang.IC_IO_COLUMN_EXCEPTION)});
					throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.IC_IO_COLUMN_EXCEPTION));
				}
			}

		}

		if (subTab.getType().equals("InfoObject")) {

			if (subTab.getCols().size() == 0) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Join Between IC and IO With No Column Mapped From IO  Exception Thrown !!!"} );
				isValid = false;
				flag_NO_IO_COLUMN_MAPPED_EXCEPTION = true;
				//throw new UnSupportedColumnException("Join Between IC and IO With No Column Mapped From IO  Exception Thrown!!!");
				logger.severe("ODIKM-SAPBW-LKM-10015", new Object[] {odiLang.getValue(OdiSAPBWLang.NO_IO_COLUMN_MAPPED_EXCEPTION)} );
				throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.NO_IO_COLUMN_MAPPED_EXCEPTION));
			}

		}		
		/*
		* CASE # 2.Create Join between IC and IO and map all columns of IC & IO
		* columns to the target. Detect is both IOPK and its corresponding IO
		* Join field is selected. If this is the case throw exception. Only
		* IOPK column should be selected. i.e. if the existance from the IOPK
		* Column from the Sub Table then throw the exception
		*/
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {""+ subTab.getAlias()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {""+ subTab.getCols()} );
		
		// Fetch the Applied Joints::
		String strJoints = map.getJoins();
		if (strJoints.contains("IOPK_")) {
			/*
				* Fetch the "D_CUSTOMER" form the joint of Info Cube -Info Object Join
				*  e.g. "ZRB1.IOPK_ZRB11_0D_CUSTOMER_PK_D_CUSTOMER=0D_CUSTOMER.D_CUSTOMER"(Join)
				*/                                                          
			String strIOCol =strJoints.substring(strJoints.lastIndexOf("."),strJoints.length());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"####strFinalIOCol####"+ strIOCol} );
			
			//Get the Target table details::
			String strTargetTableColumns = map.getSelectedSrcCols();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#####strTargetTableColumns###"+ strTargetTableColumns} );
			if(strTargetTableColumns.contains(strIOCol)){
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Detect is both IOPK and its corresponding IO Join field is selected.Only IOPK column should be selected, Throw exception"} );
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"The Target Table & the Joints containts the same Column, throw the exception "} );
				flag_SAME_COLUMN_EXCEPTION =true;
				logger.severe("ODIKM-SAPBW-LKM-10011", new Object[] {odiLang.getValue(OdiSAPBWLang.SAME_COLUMN_EXCEPTION)} );
				throw new UnSupportedColumnException(odiLang.getValue(OdiSAPBWLang.SAME_COLUMN_EXCEPTION));								
			}						
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##Return Value is ##" + isValid} );
		return isValid;
	}

	/**
	* Validate Join condition- Valid Join case- 1. InfoCube and its associated
	* InfoObject (InfoObjects linked with Characteristics) 2. InfoObject-Text
	* Table
	* 
	* Invalid Join- InfoCube-InfoCube 1. ODS/DSO-ODS/DSO 2.
	* InfoObject-InfoObject 3. OHD-OHD 4. InfoCube-ODS/DSO etc.
	* 
	* @param masterTableName
	* @param subTableName
	* @return
	* @throws UnSupportedJoinException
	*/
	private boolean validateJoin(String masterTableName, String subTableName) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Validate Join between: " + masterTableName + " and "+ subTableName} );
		OdiSAPBWTable masterTab = (OdiSAPBWTable) tableInstanceMap
		.get(masterTableName);
		OdiSAPBWTable subTab = (OdiSAPBWTable) tableInstanceMap
		.get(subTableName);
		boolean valid = true;

		if (masterTab.getType().equals(INFOCUBE)) {
			if (!subTab.getType().equals(INFOOBJECT))
			valid = false;
		} else if (masterTab.getType().equals(INFOOBJECT)) {
			if (!subTab.getType().equals(INFOOBJECT_TXT))
			valid = false;
		} else if (!masterTab.getType().equals(INFOCUBE)
				&& !masterTab.getType().equals(INFOOBJECT))
		valid = false;

		return valid;
	}

	/**
	* Find out actual field name. This step is required for IOPK, KF and
	* columns having special character "/"
	* 
	* @param field
	* @return
	*/
	private OdiSAPBWColumn createColumn(String field) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Create Column instance for : " + field} );
		OdiSAPBWColumn col = new OdiSAPBWColumn();
		col.setName(field);
		String[] ffValues = (String[]) colFlexMap.get(field);

		if (ffValues != null) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Values: " + ffValues.length} );
			int index = 0;
			// InfoObject Name- associated with IOPK column
			if (index < ffValues.length)
			col.setInfoObjectName(ffValues[index]);
			index++;
			// SID Table Name
			if (index < ffValues.length)
			col.setBwSidTable(ffValues[index]);
			index++;
			// Column Type
			if (index < ffValues.length) {
				if (ffValues[index].toUpperCase().startsWith("KF"))
				col.setBwColumnType(KEY_FIGURE);
				else if (ffValues[index].toUpperCase().startsWith("IOPK"))
				col.setBwColumnType(IOPK_COLUMN);
			}
			index++;
			// Column name for KF and IOPK columns of InfoCube
			/*
			* Column Name- For InfoCube (KF and IOPK) For other data targets
			* (ODS/DSO, OHD, InfoObject) column names containing special
			* characters e.g. /BIC/ZREV
			*/
			if (index < ffValues.length) {
				if (field.toUpperCase().startsWith("IOPK_"))
				col.setName(ffValues[index]);
				else if (field.toUpperCase().startsWith("KF_"))
				col.setName(field.substring(3));
				else {
					// Store actual column name containing special char e.g.
					// /BIC/ZREV
					if (!ffValues[index].equals(""))
					col.setName(ffValues[index]);
				}
			}
			index++;
			// P Table Name
			if (index < ffValues.length)
			col.setBwPTable(ffValues[index]);
			index++;
			// FIXME: There is problem in reading [SAP_BW_QTABLE_NAME]flex field
			// Q Table Name
			if (index < ffValues.length)
			col.setBwQTable(ffValues[index]);
			index++;
			// NAV Attribute
			if (index < ffValues.length)
			col.setBwNavAttr(Integer.parseInt(ffValues[index]));
			index++;
			// Time dependent Attribute
			if (index < ffValues.length)
			col.setBwTimeDepAttr(Integer.parseInt(ffValues[index]));
		}

		return col;
	}

	private void showTabJoinDetails() {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {""} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"*****************(Join Details)*****************"} );
		
		for (int i = 0; i < tables.size(); i++) {
			OdiSAPBWTable tab = (OdiSAPBWTable) tables.get(i);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Table Name: " + tab.getAlias()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Filetrs: " + tab.getFilters().size()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Joins: " + tab.getJoins().size()} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {""} );
			
			
			if (tab.getJoins().size() > 0) {
				for (int j = 0; j < tab.getJoins().size(); j++) {
					OdiSAPBWJoin join = (OdiSAPBWJoin) tab.getJoins().get(j);
					OdiSAPBWColumn col = (OdiSAPBWColumn) join.getMasterCols().get(0);
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Master Table=" + join.getMasterTable()} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Master Col=" + col.getName()} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Sub Table=" + join.getSubTable().getAlias()} );
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Sub Col=" + col.getName()} );
					
				}
			}
			if (i < tables.size() - 1)
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"_____________________________________"} );
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"************************************************"} );
		//			className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {""} );
	}

	/**
	* @return the tables
	*/
	public ArrayList getTables() {
		return tables;
	}

	/**
	* @param tables the tables to set
	*/
	public void setTables(ArrayList tables) {
		this.tables = tables;
	}

}


//End of OdiSAPBWExtractMapping.java

// Start of OdiSAPBWRef.java
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.SortedSet;
import java.util.TreeSet;


/**
* This class generates List of Columns and Tables
* as per the requirement of Open Tool ABAP code generation
* 
* TODO: Add descriptions for all used tags
*/
public class OdiSAPBWRef {

	// Enum added for case statement
	/*public enum ObjectName
	{
		InfoCube, InfoObject, InfoObject_TXT, InfoObject_HIER, CUBE_IOBJ_JOIN, ODSDSO, WODSO,
		OHDT,NOVALUE;
		public static ObjectName toObjectName(String str)
		{
			try {
				return valueOf(str);
			} 
			catch (Exception ex) {
				return NOVALUE;
			}
	}
	}*/
	// End of Enum Added

	String className = getClass().getName();
	/*
	* *********************************************************************** 
	* ***********************************************************************
	* ODI Bean Shell appends extra '\' to special characters like New Line
	* ("\n"), "[", "]" etc.
	* Following piece of ASCII codes will be used to replace unnecessary ODI
	* Bean Shell characters 	
	* ***********************************************************************
	* ***********************************************************************
	*/
	String order = "";
	final String startCode = ""+ (char)92 + (char)91; // \[
	final String endCode = ""+ (char)92+ (char)93;// \]
	final String UNDERSCORE = "" + (char) 92+(char)95; //\_
	/**
	* NewLine char "\n" i.e. (char)10 gets changed to (char)92 and (char)110 i.e. character 'n'
	* by the Java bean shell
	* Put an extra "\" to escape "\"
	*/
	final String bsNewLine = ""+ (char)92 + (char)92+ (char)110;// \\n
	
	/**
	* Note: only "\n" i.e. (char)10 doesn't work. To over sure put '\r' i.e. (char)13
	*/
	final String jvNewLine = ""+ (char)13+ (char)10;// \r\n
	/*
	* *****************************************************************
	* *****************************************************************
	* 
	* Supported Tags: [Tag Name]
	* IMPORTANT: Tags can be present in "Pattern" and "Start"
	* *****************************************************************
	* *****************************************************************
	*/
	/**
	* [TABLE_NAME]: will return table name as stored in ODI
	*/
	final String TABLE_NAME_CODE = startCode+ "TABLE_NAME"+ endCode;
	/**
	* Table Type
	*/
	final String TABLE_TYPE_CODE = startCode+ "TABLE_TYPE"+ endCode;
	/**
	* [TABLE_ALIAS]: will return table alias stored in ODI
	*/
	//	final String TABLE_ALIAS_CODE = startCode+ "TABLE_ALIAS"+ endCode; 
	final String ODI_TABLE_NAME_CODE = startCode+ "ODI_TABLE_NAME"+ endCode; // replace [TABLE_ALIAS] with [ODI_TABLE_NAME]
	/**
	* [COL_NAME]: will return column name
	*/
	final String COL_NAME_CODE = startCode+ "COL_NAME"+ endCode;
	final String COL_CX_NAME_CODE = startCode+ "COL_CX_NAME"+ endCode; // added to support unique columns
	final String CX_RSHIENM = startCode+"CX_RSHIENM"+endCode; // added to support RSHIENM column
	/**
	* [PK_COL_NAME]: will return list of PK columns
	* IMPORTANT: applicable only for ODS/DSO tables
	*/
	final String PK_COL_NAME_CODE = startCode+ "PK_COL_NAME"+ endCode;
	
	/**
	* [BW_TABLE]: it can be used with both getTableList() and getColList()
	* 
	* getTableList()- returns associated SAP BW Table name if there
	* is one to one mapping between ODI DataStore and SAP Table e.g. ODS/DSO
	* and OHD.
	* 
	* getColList()- returns the associated SAP BW table for this column
	* e.g. InfoObject is a composition of columns from different SAP BW 
	* tables.
	*/
	final String BW_TABLE_CODE = startCode+ "BW_TABLE"+ endCode;
	final String BW_KF_NAME_CODE = startCode+ "BW_KF_NAME"+ endCode;
	final String BW_CX_KF_NAME_CODE = startCode+ "BW_CX_KF_NAME"+ endCode; // added for unique col issue
	/**
	* Key Figure Field name- /bic/zrev
	*/
	final String BW_KF_FNAME_CODE = startCode+ "BW_KF_FNAME"+ endCode;
	final String BW_IOPK_CODE = startCode+ "BW_IOPK"+ endCode;
	final String BW_FACT_TABLE_CODE = startCode+ "BW_FACT_TABLE"+ endCode;
	final String BW_HIER_TABLE_CODE = startCode+ "BW_HIER_TABLE"+ endCode;
	final String BW_SID_TABLE_CODE = startCode+ "BW_SID_TABLE"+ endCode;
	final String BW_PTABLE_CODE = startCode+ "BW_PTABLE"+ endCode;
	final String BW_QTABLE_CODE = startCode+ "BW_QTABLE"+ endCode;
	final String BW_CUBE_CODE = startCode+ "BW_CUBE"+ endCode;
	/*
	* Join table and column details.
	* IMPORTANT: Right now we are considering joins only between
	* InfoCube (Master Table) and its associated InfoObjects 
	*/
	final String BW_WJ_IOPK_CODE = startCode+ "BW_WJ_IOPK"+ endCode;
	final String BW_WJ_SID_TABLE_CODE = startCode+ "BW_WJ_SID_TABLE"+ endCode;
	final String BW_WJ_IOBJ_CODE = startCode+ "BW_WJ_IOBJ"+ endCode;
	/**
	* Name of the InfoObject joined with the InfoCube on the ODI Interface
	*/
	final String BW_IOBJ_CODE = startCode+ "BW_IOBJ"+ endCode;
	final String BW_IOBHIER_CODE = startCode+ "BW_IOBHIER"+ endCode;
	final String BW_IOBJ_TAB_CODE =  startCode+ "BW_IOBJ_TAB"+ endCode;
	final String BW_IOBJ_COL_CODE =  startCode+ "BW_IOBJ_COL"+ endCode;
	final String BW_CX_IOBJ_COL_CODE = startCode+ "BW_CX_IOBJ_COL"+ endCode; // added to handle cx column name
	final String BW_IOBJ_WJ_COL_CODE =  startCode+ "BW_IOBJ_WJ_COL"+ endCode;
	final String BW_CX_IOBJ_WJ_COL_CODE =  startCode+ "BW_CX_IOBJ_WJ_COL"+ endCode; // added to handle cx column name
	final String BW_JOIN_IOBJ_CODE = startCode+ "BW_JOIN_IOBJ"+ endCode;
	final String BW_IOBJ_TXT_CODE = startCode+ "BW_IOBJ_TXT_TAB"+ endCode;
	final String BW_IOBJTXT_CODE = startCode+ "BW_IOBJTXT"+ endCode;//added by Anzar
	final String BW_IOBJ_TXT_COL_CODE = startCode+ "BW_IOBJ_TXT_COL"+ endCode;
	final String BW_CX_IOBJ_TXT_COL_CODE = startCode+ "BW_CX_IOBJ_TXT_COL"+ endCode; // added to handle cx column name
	// Text Fields with join cols
	final String BW_IOBJ_WJ_TXT_COL_CODE = startCode+ "BW_IOBJ_WJ_TXT_COL"+ endCode;
	final String BW_CX_IOBJ_WJ_TXT_COL_CODE = startCode+ "BW_CX_IOBJ_WJ_TXT_COL"+ endCode;// added to handle cx column name
	final String BW_JOIN_IOBJ_TXT_COL_CODE = startCode+ "BW_JOIN_IOBJ_TXT_COL"+ endCode;
	final String BW_CX_JOIN_IOBJ_TXT_COL_CODE = startCode+ "BW_CX_JOIN_IOBJ_TXT_COL"+ endCode;// added to handle cx column name
	final String BW_JOIN_IOBJ_COL_CODE = startCode+ "BW_JOIN_IOBJ_COL"+ endCode;
	final String BW_CX_JOIN_IOBJ_COL_CODE = startCode+ "BW_CX_JOIN_IOBJ_COL"+ endCode; // added to handle cx column name
	
	/*
	* Filter condition fields
	*/
	final String FILTER_FIELD_CODE = startCode+ "FILTER_FIELD"+ endCode;
	final String FILTER_COND_CODE = startCode+ "FILTER_COND"+ endCode;
	final String FILTER_VALUE_CODE = startCode+ "FILTER_VALUE"+ endCode;
	final String FILTER_STMT_CODE = startCode+ "FILTER_STMT"+ endCode;
	final String FILTER_IOBJ_TXT_STMT_CODE = startCode+ "FILTER_IOBJ_TXT_STMT"+ endCode;
	// KF
	final String FILTER_KF_FIELD_CODE = startCode+ "FILTER_KF_FIELD"+ endCode;
	final String FILTER_KF_COND_CODE = startCode+ "FILTER_KF_COND"+ endCode;
	final String FILTER_KF_VALUE_CODE = startCode+ "FILTER_KF_VALUE"+ endCode;
	// IOPK
	final String FILTER_IOPK_FIELD_CODE = startCode+ "FILTER_IOPK_FIELD"+ endCode;
	final String FILTER_IOPK_COND_CODE = startCode+ "FILTER_IOPK_COND"+ endCode;
	final String FILTER_IOPK_VALUE_CODE = startCode+ "FILTER_IOPK_VALUE"+ endCode;
	
	/*
	* *************************************************************************
	* *************************************************************************
	* 
	* Tags without escape character: This will be used to match existance of
	* tags in a pattern 
	* 
	* *************************************************************************
	* **************************************************************************
	*/
	final String BW_TABLE_NAME = "[TABLE_NAME]";
	//final String BW_TABLE_ALIAS = "[TABLE_ALIAS]";
	final String BW_ODI_TABLE_NAME = "[ODI_TABLE_NAME]";
	final String BW_TABLE = "[BW_TABLE]";
	final String BW_IOBJ = "[BW_IOBJ]";
	final String BW_IOBHIER = "[BW_IOBHIER]";
	final String BW_PK_COL = "[PK_COL_NAME]";
	final String BW_IOBJ_TAB =  "[BW_IOBJ_TAB]";
	final String BW_JOIN_IOBJ = "[BW_JOIN_IOBJ]";
	final String BW_IOBJ_COL =  "[BW_IOBJ_COL]";
	final String BW_CX_IOBJ_COL = "[BW_CX_IOBJ_COL]"; // Added for Unique Col
	final String BW_IOBJ_WJ_COL =  "[BW_IOBJ_WJ_COL]";
	final String BW_CX_IOBJ_WJ_COL =  "[BW_CX_IOBJ_WJ_COL]"; // Added for Unique Col
	final String BW_IOBJ_TXT = "[BW_IOBJ_TXT_TAB]";
	final String BW_IOBJTXT = "[BW_IOBJTXT]";//Added by Anzar
	final String BW_IOBJ_TXT_COL = "[BW_IOBJ_TXT_COL]"; 
	final String BW_CX_IOBJ_TXT_COL = "[BW_CX_IOBJ_TXT_COL]"; // Added for Unique Col
	final String BW_IOBJ_WJ_TXT_COL = "[BW_IOBJ_WJ_TXT_COL]";
	final String BW_CX_IOBJ_WJ_TXT_COL = "[BW_CX_IOBJ_WJ_TXT_COL]"; // Added for Unique Col
	final String BW_JOIN_IOBJ_TXT_COL = "[BW_JOIN_IOBJ_TXT_COL]";
	final String BW_CX_JOIN_IOBJ_TXT_COL = "[BW_CX_JOIN_IOBJ_TXT_COL]"; // Added for Unique Col
	final String BW_JOIN_IOBJ_COL = "[BW_JOIN_IOBJ_COL]";
	final String BW_CX_JOIN_IOBJ_COL = "[BW_CX_JOIN_IOBJ_COL]"; // Added for Unique Col
	final String BW_FILTER_STMT = "[FILTER_STMT]";
	final String BW_IOBJ_TXT_FILTER_STMT = "[FILTER_IOBJ_TXT_STMT]";
	// Filter Tags
	final String BW_FILTER_KF_FIELD = "[FILTER_KF_FIELD]";
	final String BW_FILTER_KF_COND = "[FILTER_KF_COND]";
	final String BW_FILTER_KF_VALUE = "[FILTER_KF_VALUE]";
	final String BW_FILTER_IOPK_FIELD = "[FILTER_IOPK_FIELD]";
	final String BW_FILTER_IOPK_COND = "[FILTER_IOPK_COND]";
	final String BW_FILTER_IOPK_VALUE = "[FILTER_IOPK_VALUE]";
	//InfoCube
	final String BW_WJ_IOPK = "[BW_WJ_IOPK]";
	
	final String ROOT = ""+ (char)47;
	
	ArrayList arrColPos = new ArrayList();
	OdiSapBwLogger logger;
	OdiSAPBWExtractMapping em;	
	int z=0;	
	String inofObjectOrder = "";
	String iobjTableOrder = "";
	boolean isFilter = false;
	public String getRoot(){
		return ROOT;
	}
	OdiSAPBWLang odiLang = null; 
	public OdiSAPBWRef(OdiSAPBWExtractMapping em,OdiSapBwLogger odiSapBwLogger,OdiSAPBWLang odiLang ) throws Exception {
		this.em = em;
		this.logger = odiSapBwLogger;
		this.odiLang = odiLang;
		//	odiLang = OdiSAPBWLang.getInstance(odiSapBwLogger);
	}

	/**
	* @param start- prefix
	* @param pattern- expected input tags-
	* [TABLE_NAME]- table to to which these columns belongs to 
	* [COL_NAME]- column name (actual name or modified name of the column removing all RKM specific prefixes e.g. "KF", "IOPK" etc.)
	* [FACT_NAME]- Fact table name for KF columns
	* [SID_TABLE]- SID table name for IOPK columns
	* [BW_TABLE]- SAP BW table name e.g. columns of ODS/DSO, Open Hub and Text 
	* @param seperator- 
	* @param end- ",\n"
	* e.g. 
	*   lv_d_customer  TYPE string,
	*   lv_d_material TYPE string,
	*   lv_price_mat  TYPE string,
	*   lv_currency   TYPE s
	*   tring,
	*   lv_recordmode TYPE string.
	*
	*	 getColList("\n", "lv_[[COL_NAME] \nTYPE string", ",\n", ".");
	* @throws Exception
	*/
	public String getColList(String start, String pattern, String seperator, String end, String pSelector) throws Exception {
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generate Code: getColList()"} ); 
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"pSelector: "+ pSelector} );
		
		
		//Will clear contents in Array
		arrColPos.clear();

		ArrayList arrCol = new ArrayList();
		//ArrayList arrColPos = new ArrayList();
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		
		StringBuffer colList = new StringBuffer();
		start = start.replaceAll(bsNewLine, jvNewLine);
		//pattern = pattern.replaceAll(startCode, "");
		//pattern = pattern.replaceAll(endCode, "");
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		// get the List of available Tables
		ArrayList tables = em.getTables();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Tables: "+ tables.size()} );
		String p = "";
		String hP = "";
		colList.append(start);
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable table = (OdiSAPBWTable) tables.get(i);
			// replace all occurrences of TABLE_NAME with actual table name
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Table Name: "+ table.getOdiName()} );
			p = pattern.replaceAll(TABLE_NAME_CODE, table.getSapName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern (Replaced with Table Name): "+ p} );
			//p = p.replaceAll(TABLE_ALIAS_CODE, table.getAlias());// p = p.replaceAll(ODI_TABLE_NMAE_CODE, table.getOdiName());
			p = p.replaceAll(ODI_TABLE_NAME_CODE, table.getOdiName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern (Replaced with Table Name): "+ p} );
			p = p.replaceAll(BW_FACT_TABLE_CODE, table.getFactTable());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern (Replaced with Fact Table): "+ p} );
			
			p = p.replaceAll(BW_HIER_TABLE_CODE, table.getOdiName().replaceAll("HIER_","").trim());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern (Replaced with Hierarchy Table): "+ p} );
			
			p = p.replaceAll(BW_IOBHIER_CODE, table.getAlias().replaceAll("HIER_","").trim());//to fix Bosch issue
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern [BW_IOBHIER]replaced with InfoObectName): "+ p} );

			ArrayList cols = table.getCols();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Cols: "+ cols.size()} );
			for(int j=0; j<cols.size(); j++){
				boolean escape = false;
				boolean isDuplicate = true;
				OdiSAPBWColumn col = (OdiSAPBWColumn)cols.get(j);
				String colName = col.getName();
				String colNamewithoutPrefix = colName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				/*if(!col.getModifiedName().trim().equals(""))
					// Applicable for "KF" and "IOPK" columns
					colName = col.getModifiedName();*/
				String Tab_Col = table.getSapName().trim()+"_"+colName.trim();
				// replace all occurrences of COL_NAME and BW_TABLE with actual value
				if(!arrCol.contains(Tab_Col)){
					arrCol.add(Tab_Col);
					arrColPos.add(new Integer(j+1));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Col Name:: "+ colName} );
					p = p.replaceAll(BW_TABLE_CODE, table.getAlias());
					isDuplicate = false;
				}else{
					int position = arrCol.indexOf(Tab_Col);
					arrColPos.add(new Integer(position+1));
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern (Replaced with BW_Table): "+ p} );
				/*
				* Replace Column-SAP BW Table mapping
				*/
				p = p.replaceAll(BW_PTABLE_CODE, col.getBwPTable());
				p = p.replaceAll(BW_QTABLE_CODE, col.getBwQTable());
				p = p.replaceAll(BW_SID_TABLE_CODE, col.getBwSidTable());
				
				
				// Replace Column Name
				if(!isDuplicate){
					//For hierarchy Only
					//	if(colName.equalsIgnoreCase("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE+"RSHIENM")){
					if(colNamewithoutPrefix.equalsIgnoreCase("RSHIENM")){
						hP = p;
						hP = hP.replaceAll("RSHIERSTRUC-","");
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Datatype of Columns "+col.getSourceDataType() } );
						if(!(hP.contains("WA_H") || pSelector.contains("SQL_SELECT_COL"))){
							if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
								if(col.getSourceDataType().equalsIgnoreCase("CURR") ||
										col.getSourceDataType().equalsIgnoreCase("DEC") || 
										col.getSourceDataType().equalsIgnoreCase("FLTP") ||
										col.getSourceDataType().equalsIgnoreCase("QUAN") ||
										col.getSourceDataType().equalsIgnoreCase("INT4") ||
										col.getSourceDataType().equalsIgnoreCase("INT2")) {
									colList.append(hP.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).replaceAll(CX_RSHIENM, colName).trim());
								}
							}
							else if(pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("") || pSelector.contains("SQL_SELECT_COL")){ 
								colList.append(hP.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).replaceAll(CX_RSHIENM, colName).trim());
							}
						}else{
							//hP = hP.replace("SQL_SELECT", "");
							escape = true;
						}
					}else if(table.getType().equals("InfoObject_HIER")&& colNamewithoutPrefix.equalsIgnoreCase("VERSION")) {
						hP = p;
						hP = hP.replaceAll("RSHIERSTRUC-","RSNDI_S_HIESEL-");//RSNDI_S_HIESEL-VERSION
						if(!hP.contains("WA_H")){
							if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
								if(col.getSourceDataType().equalsIgnoreCase("CURR") ||
										col.getSourceDataType().equalsIgnoreCase("DEC") || 
										col.getSourceDataType().equalsIgnoreCase("FLTP") ||
										col.getSourceDataType().equalsIgnoreCase("QUAN") ||
										col.getSourceDataType().equalsIgnoreCase("INT4") ||
										col.getSourceDataType().equalsIgnoreCase("INT2")) {
									//	colList.append(hP.replaceAll(COL_NAME_CODE, colName).trim());
									colList.append(hP.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).trim());
								}
							}
							else if(pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("") || pSelector.contains("SQL_SELECT_COL")){			
								//	colList.append(hP.replaceAll(COL_NAME_CODE, colName).trim());
								colList.append(hP.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).trim());
							}
						}else{
							escape = true;
						}
						//Added below new code for Interval Hierarchy Data Extraction	
					}else if(table.getType().equals("InfoObject_HIER")&& (colNamewithoutPrefix.equalsIgnoreCase("LEAFFROM") || colNamewithoutPrefix.equalsIgnoreCase("LEAFTO"))) {
						hP = p;
						hP = hP.replaceAll("RSHIERSTRUC-","RSHIERINTVL-");//RSHIERINTVL-LEAFFROM or RSHIERINTVL-LEAFTO
						if(!hP.contains("WA_H")){
							
							if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
								if(col.getSourceDataType().equalsIgnoreCase("CURR") ||
										col.getSourceDataType().equalsIgnoreCase("DEC") || 
										col.getSourceDataType().equalsIgnoreCase("FLTP") ||
										col.getSourceDataType().equalsIgnoreCase("QUAN") ||
										col.getSourceDataType().equalsIgnoreCase("INT4") ||
										col.getSourceDataType().equalsIgnoreCase("INT2")) {
									//	colList.append(hP.replaceAll(COL_NAME_CODE, colName).trim());
									colList.append(hP.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).trim());
								}
							}
							else if(pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")){			
								//	colList.append(hP.replaceAll(COL_NAME_CODE, colName).trim());
								colList.append(hP.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).trim());
							}
						}else{
							escape = true;
						}
						//End of new code for Interval Hierarchy Data Extraction
					}else{
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern table.getOdiName(): "+ table.getOdiName()} );
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern colName: "+ colName} );
						//p = p.replace("SQL_SELECT", "");
						if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
							if(col.getSourceDataType().equalsIgnoreCase("CURR") ||
									col.getSourceDataType().equalsIgnoreCase("DEC") || 
									col.getSourceDataType().equalsIgnoreCase("FLTP") ||
									col.getSourceDataType().equalsIgnoreCase("QUAN") ||
									col.getSourceDataType().equalsIgnoreCase("INT4") ||
									col.getSourceDataType().equalsIgnoreCase("INT2")) {
								//	colList.append(p.replaceAll(COL_NAME_CODE, colName).trim());
								colList.append(p.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).trim());
							}
						}else if(pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("") || pSelector.equalsIgnoreCase("SQL_SELECT_COL")){			
							//	colList.append(p.replaceAll(COL_NAME_CODE, colName).trim());
							colList.append(p.replaceAll(COL_NAME_CODE, colNamewithoutPrefix).replaceAll(COL_CX_NAME_CODE, colName).trim());
						}
						
						//	colList.append(p.replaceAll(COL_NAME_CODE, colName).trim());
					}
				}
				if(j == cols.size()-1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Last element!! End "+ end} );
					if(!isDuplicate){
						colList.append(end);
					}
				}
				else{
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator..."} );
					if(!isDuplicate){
						if(!escape) {
							colList.append(seperator);
						}
					}
				}
			}
		}
		//colList.append(end);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text: "+ colList.toString()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Order of Column Mapped: "+ arrColPos} );
		return colList.toString();
	}//end of getColList() method

	/**
	* Returns Order of columns mapped for ODS/DSO
	* @return
	*/
	public String getODSOrder(){
		String strOrder = "";		
		strOrder = getOrder(arrColPos);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getODSOrder of Column Mapped in ODSDSO: "+ strOrder} );
		return strOrder;
	}

	public String getWODSOrder(){
		String strOrder = "";		
		strOrder = getOrder(arrColPos);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getODSOrder of Column Mapped in ODSDSO: "+ strOrder} );
		return strOrder;
	}
	
	/**
	* Get List of Source table used for ODI Interface design
	* @param start
	* @param pattern- [TABLE_NAME], [TABLE_ALIAS], [BW_TABLE]
	* [BW_TABLE]- meaningful for tables having 1-to-1 mapping with SAP BW Tables
	* e.g. ODS/DSO and OHD Table
	* 
	* IMPORTANT: this is applicable only for ODS/DSO and OHD table
	* 
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getTable(String start, String pattern, String seperator, String end) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generate Code: getTable()"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"GStart: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		StringBuffer tabString = new StringBuffer();
		start = start.replaceAll(bsNewLine, jvNewLine);
		//pattern = pattern.replaceAll(startCode, "");
		//pattern = pattern.replaceAll(endCode, "");
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		
		ArrayList tables = em.getTables();
		OdiSAPBWTable table = null;
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"######tables.size() ######"+tables.size()} );
		
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"######tables.TYPE() ######"+tab.getType()} );
			
			if(tab.getType().equals(OdiSAPBWExtractMapping.ODSO) || tab.getType().equals(OdiSAPBWExtractMapping.WODSO) || tab.getType().equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION)){
				table = tab;
				break;
			}
		}
		
		if(table == null)
		throw new Exception("getTable() method is applicable only for ODS/DSO and OHD Tables");
		
		// Start Tag
		tabString.append(start);
		if(pattern.indexOf(BW_TABLE_NAME) != -1)
		pattern = pattern.replaceAll(TABLE_NAME_CODE, table.getSapName());
		if(pattern.indexOf(BW_ODI_TABLE_NAME) != -1)
		//pattern = pattern.replaceAll(ODI_TABLE_NAME_CODE, table.getAlias());
		pattern = pattern.replaceAll(ODI_TABLE_NAME_CODE, table.getOdiName());
		if(pattern.indexOf(BW_TABLE) != -1)
		pattern = pattern.replaceAll(BW_TABLE_CODE, table.getSapName());
		
		if(pattern.indexOf(BW_PK_COL) != -1){
			// Replace PK Column Tag
			ArrayList cols = table.getCols();
			boolean keyFieldFlag = false;
			ArrayList uniqueCols = new ArrayList();
			for(int i=0; i<cols.size(); i++){
				OdiSAPBWColumn col = (OdiSAPBWColumn)cols.get(i);
				if(uniqueCols.contains(col.getName().trim()))
				continue;
				
				uniqueCols.add(col.getName().trim());
				if(col.getBwColumnType().equals(OdiSAPBWExtractMapping.KEY_FIELD)){ //col.isPKCol()
					keyFieldFlag = true;
					// PK Column
                                        String colName = col.getName();
                                        String colNamewithoutPrefix = colName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
                                        tabString.append(pattern.replaceAll(PK_COL_NAME_CODE, colName).replaceAll(COL_NAME_CODE, colNamewithoutPrefix));
					tabString.append(seperator);
					/*if(i<cols.size()-1) // Don't add seperator at the end
						tabString.append(seperator);*/
				}
			}
			// Remove the last seperator
			if(keyFieldFlag)
			tabString = tabString.delete(tabString.length()-seperator.length(), tabString.length());
		}
		else
		tabString.append(pattern);
		// End Tag
		tabString.append(end);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text: "+ tabString.toString()} );
		return tabString.toString(); 
	}

	/**
	* @param start
	* @param pattern- supported tags
	* [BW_IOPK][BW_KF][BW_KF_MOD_NAME][BW_FACT_TABLE][BW_SID_TABLE][BW_CUBE][BW_IOBJ]
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getCubeDetails(String start, String pattern, String seperator, String end, String pSelector) throws Exception {

		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"*********Generate Code: getInfoCube()*************"});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Start: " + start});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Pattern: " + pattern});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Seperator: " + seperator});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"End: " + end});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"pSelector: " + pSelector});

		
		if (pattern.trim().length() == 0) // No pattern defined
		{
			return "";
		}
		StringBuffer cubeDetails = new StringBuffer();
		start = start.replaceAll(bsNewLine, jvNewLine);
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		pSelector = pSelector.replaceAll(bsNewLine, jvNewLine);

		ArrayList tables = em.getTables();
		OdiSAPBWTable cubeTable = null;
		/*
		* Check existance of InfoCube
		*/
		for (int i = 0; i < tables.size(); i++) {
			OdiSAPBWTable tab = (OdiSAPBWTable) tables.get(i);
			if (tab.getType().equals(OdiSAPBWExtractMapping.INFOCUBE)) {
				cubeTable = tab;
				break;
			}
		}
		if (cubeTable == null) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"No InfoCube Exists"});
			return "";
		}

		cubeDetails.append(start);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)1: " + cubeDetails});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"getCubeDetails() - cubeTable.getOdiName(): " + cubeTable.getOdiName()});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"getCubeDetails() - cubeTable.getAlias(): " + cubeTable.getAlias()});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"getCubeDetails() - cubeTable.getFactTable(): " + cubeTable.getFactTable()});
		
		pattern = pattern.replaceAll(BW_CUBE_CODE, cubeTable.getOdiName());
		/*
		* If user need only Cube Name skip remaining steps
		*/
		if (pattern.indexOf("[") == -1
				&& pattern.indexOf("]") == -1) {
			cubeDetails.append(pattern);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)2: " + cubeDetails});
			cubeDetails.append(end);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)3: " + cubeDetails});
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Only CUBE Name required. Generated Text: " + cubeDetails.toString()});
			return cubeDetails.toString();
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generate Code: getColList()"});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generate Code: getColList()"});
		ArrayList cubeCols = cubeTable.getCols();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Number of Columns: " + cubeCols.size()});
		for (int i = 0; i < cubeCols.size(); i++) {
			String p = "";
			OdiSAPBWColumn col = (OdiSAPBWColumn) cubeCols.get(i);
			String modifiedColName = col.getModifiedName();
			String modifiedColNamewithoutPrefix = modifiedColName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])" + UNDERSCORE, "");
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Value of col:" + col.getName()});
			/*
			* Consider Join Cols
			*/
			if (col.getBwColumnType().equals(OdiSAPBWExtractMapping.KEY_FIGURE)) {
				if (pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside pSelector SOURCE_DT_ALLOWS_NEGATIVE"});
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"col.getBwColumnType()" + col.getBwColumnType()});
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"colName" + col.getName() + "col.getSourceDataType()" + col.getSourceDataType()});
					if (col.getSourceDataType().equalsIgnoreCase("CURR")
							|| col.getSourceDataType().equalsIgnoreCase("DEC")
							|| col.getSourceDataType().equalsIgnoreCase("FLTP")
							|| col.getSourceDataType().equalsIgnoreCase("QUAN")
							|| col.getSourceDataType().equalsIgnoreCase("INT4")
							|| col.getSourceDataType().equalsIgnoreCase("INT2")) {
						p = pattern.replaceAll(BW_CX_KF_NAME_CODE, modifiedColName).replaceAll(BW_KF_NAME_CODE, modifiedColNamewithoutPrefix);
						p = p.replaceAll(BW_KF_FNAME_CODE, col.getName());
						p = p.replaceAll(BW_FACT_TABLE_CODE, cubeTable.getFactTable());
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Pattern: " + p});
						if (p.equals(pattern)) // it doesn't contain KF tags
						{
							p = "";
						}
					}
				} else if (pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Modified Name: " + col.getModifiedName()});
					p = pattern.replaceAll(BW_CX_KF_NAME_CODE, modifiedColName).replaceAll(BW_KF_NAME_CODE, modifiedColNamewithoutPrefix);
					p = p.replaceAll(BW_KF_FNAME_CODE, col.getName());
					p = p.replaceAll(BW_FACT_TABLE_CODE, cubeTable.getFactTable());
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Pattern: " + p});
					if (p.equals(pattern)) // it doesn't contain KF tags
					{
						p = "";
					}
				}
			} else if (col.getBwColumnType().equals(OdiSAPBWExtractMapping.IOPK_COLUMN)) {

				if (pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside pSelector SOURCE_DT_ALLOWS_NEGATIVE"});
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"col.getBwColumnType()" + col.getBwColumnType()});
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"colName" + col.getName() + "col.getSourceDataType()" + col.getSourceDataType()});
					if (col.getSourceDataType().equalsIgnoreCase("CURR")
							|| col.getSourceDataType().equalsIgnoreCase("DEC")
							|| col.getSourceDataType().equalsIgnoreCase("FLTP")
							|| col.getSourceDataType().equalsIgnoreCase("QUAN")
							|| col.getSourceDataType().equalsIgnoreCase("INT4")
							|| col.getSourceDataType().equalsIgnoreCase("INT2")) {
						p = pattern.replaceAll(BW_IOPK_CODE, col.getName()); //
						p = p.replaceAll(BW_SID_TABLE_CODE, col.getBwSidTable());
						p = p.replaceAll(BW_IOBJ_CODE, col.getInfoObjectName());
						// With join
						p = p.replaceAll(BW_WJ_IOPK_CODE, col.getName());
						p = p.replaceAll(BW_WJ_SID_TABLE_CODE, col.getBwSidTable());
						p = p.replaceAll(BW_WJ_IOBJ_CODE, col.getInfoObjectName());
						if (p.equals(pattern)) // it doesn't contain IOPK tags
						{
							p = "";
						}
					}
				} else if (pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")) {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside AllMapped: col.getName():" + col.getName() + ":col.getInfoObjectName():" + col.getInfoObjectName()});
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"col.getName():" + col.getName() + ":col.getMappingOrder():" + col.getMappingOrder()});
					p = pattern.replaceAll(BW_IOPK_CODE, col.getName());
					p = p.replaceAll(BW_SID_TABLE_CODE, col.getBwSidTable());
					p = p.replaceAll(BW_IOBJ_CODE, col.getInfoObjectName());
					// With join
					p = p.replaceAll(BW_WJ_IOPK_CODE, col.getName());
					p = p.replaceAll(BW_WJ_SID_TABLE_CODE, col.getBwSidTable());
					p = p.replaceAll(BW_WJ_IOBJ_CODE, col.getInfoObjectName());
					if (p.equals(pattern)) // it doesn't contain IOPK tags
					{
						p = "";
					}
				}
			}
			if (!p.equals("")) {
				cubeDetails.append(p);
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)4: " + cubeDetails});
				cubeDetails.append(seperator);
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)5: " + cubeDetails});
			}
		}
		/*
		* Join columns
		* Following section list join columns
		*/
		ArrayList joins = cubeTable.getJoins();
		String p = "";
		for (int i = 0; i < joins.size(); i++) {
			OdiSAPBWJoin join = (OdiSAPBWJoin) joins.get(i);
			ArrayList masterCols = join.getMasterCols();
			ArrayList subCols = join.getSubCols();
			OdiSAPBWTable iobj = join.getSubTable(); // InfoObject 

			// Master Table columns- InfoCube cols
			for (int im = 0; im < masterCols.size(); im++) {
				p = "";
				OdiSAPBWColumn col = (OdiSAPBWColumn) masterCols.get(im);
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Column Name: " + col.getName()});
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Column Mapping Order: " + col.getMappingOrder()});
				// Check if this detail already present 
				if (cubeCols.contains(col)) {

				}
				if (col.getBwColumnType().equals(OdiSAPBWExtractMapping.IOPK_COLUMN)) {

					if (pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
						if (col.getSourceDataType().equalsIgnoreCase("CURR")
								|| col.getSourceDataType().equalsIgnoreCase("DEC")
								|| col.getSourceDataType().equalsIgnoreCase("FLTP")
								|| col.getSourceDataType().equalsIgnoreCase("QUAN")
								|| col.getSourceDataType().equalsIgnoreCase("INT4")
								|| col.getSourceDataType().equalsIgnoreCase("INT2")) {
							// Replace Sub Table- InfoObject
							p = pattern.replaceAll(BW_JOIN_IOBJ_CODE, iobj.getAlias());
							if (!cubeCols.contains(col)) {
								/*
								* If the Join Field is not in the list of Selected field
								*/
								p = p.replaceAll(BW_WJ_IOBJ_CODE, col.getInfoObjectName());
								p = p.replaceAll(BW_WJ_IOPK_CODE, col.getName());
								p = p.replaceAll(BW_WJ_SID_TABLE_CODE, col.getBwSidTable());
							}
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Pattern: " + p});

						}
					} else if (pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")) {

						// Replace Sub Table- InfoObject
						p = pattern.replaceAll(BW_JOIN_IOBJ_CODE, iobj.getAlias());
						if (!cubeCols.contains(col)) {
							/*
							* If the Join Field is not in the list of Selected field
							*/
							p = p.replaceAll(BW_WJ_IOBJ_CODE, col.getInfoObjectName());
							p = p.replaceAll(BW_WJ_IOPK_CODE, col.getName());
							p = p.replaceAll(BW_WJ_SID_TABLE_CODE, col.getBwSidTable());
						}
					}
					if (p.equals(pattern)) // it doesn't contain IOPK tags
					{
						p = "";
					}
				}
				if (!p.equals("")) {
					cubeDetails.append(p);
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)6: " + cubeDetails});
					cubeDetails.append(seperator);
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)7: " + cubeDetails});
				}
			}
		}
		/*
		* Replace the last seperator with end String
		*/
		if (cubeDetails.length() <= start.length()) {
			return "";
		}

		int l = cubeDetails.length();
		int x = l - seperator.length();
		cubeDetails = cubeDetails.delete(x, l);
		cubeDetails.append(end);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Pattern1: " + p});
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Text: " + cubeDetails.toString()});
		return cubeDetails.toString();
	}
	/**
	* CUBE-IOBJ Join
	* @param start
	* @param cond- (true/false) this flag will use this value only to replace 
	*               IOBJ tags
	* @param pstart- part of pattern will occure once per IOBJ
	* @param pattern- used for InfoObject
	* @param spattern- used for Text Table
	* @param pend- part of pattern will occure once per IOBJ
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getCubeIOBJoin(String start, String pattern, String seperator, String end, String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getCubeIOBJoin()*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Simple Cube Join Details...."} );
		return getCubeIOBJoin(start, "", "", "", pattern, "", "", seperator, end, pSelector);
	}
	
	/**
	* CUBE-IOBJ Join (Single Pattern)
	* @param start
	* @param cond
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getCubeIOBJoin(String start, String cond, String pattern, String seperator, String end, String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generate Code: getCubeIOBJoin()"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Medium Cube Join Details...."} );
		return getCubeIOBJoin(start, cond, "", "", pattern, "", "", seperator, end, pSelector);
	}
	
	/**
	* CUBE-IOBJ Join (2 Patterns without Start and End for Sub Pattern)
	* @param start
	* @param cond- pattern condition
	* @param scond- spattern condition
	* @param pstart
	* @param pattern
	* @param spattern
	* @param pend
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getCubeIOBJoin(String start, 
	String cond, 
	String scond, 
	String pstart, 
	String pattern, 
	String spattern, 
	String pend, 
	String seperator, 
	String end, String pSelector) throws Exception {
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generate Code: getCubeIOBJoin()"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Cond: "+ cond} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"PStart: "+ pstart} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SPattern: "+ spattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"PEnd: "+ pend} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"pSelector: "+ pSelector} );
		
		
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		
		start = start.replaceAll(bsNewLine, jvNewLine);
		pstart = pstart.replaceAll(bsNewLine, jvNewLine);
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		spattern = spattern.replaceAll(bsNewLine, jvNewLine);
		pend = pend.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		
		ArrayList tables = em.getTables();
		OdiSAPBWTable cubeTable = null;
		/*
		* Check existance of InfoCube
		*/
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOCUBE)){
				cubeTable = tab;
				break;
			}
		}
		
		if(cubeTable == null){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"No InfoCube Exists"} );
			return "";
		}
		
		StringBuffer cubeJoinDetails = new StringBuffer();
		//Append start string
		cubeJoinDetails.append(start);
		/*
		* Find out the joins of the Cube
		*/
		ArrayList joins = cubeTable.getJoins();
		
		/*
		* Replace details of joined IOBJ and Text Table details
		* 
		* it will call replaceIOBJTags() multiple times to replace IOBJ related tags
		* for all associated InfoObjects.
		* It will then add actual start and end string to the resulted replaced string.
		* 
		*/
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of joined IOBJs: "+ joins.size()} );
		String e = "";
		String replacedStr = "";
		
		for(int i=0; i<joins.size(); i++){
			replacedStr = "";
			OdiSAPBWJoin join = (OdiSAPBWJoin)joins.get(i);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getCubeIOBJoin() :join:> "+ join} );
			OdiSAPBWTable iobj = join.getSubTable();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getCubeIOBJoin() :iobj :>"+ iobj} );
			OdiSAPBWColumn iobjCubeJoinCol = (OdiSAPBWColumn)join.getSubCols().get(0);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getCubeIOBJoin() :iobjCubeJoinCol :>"+ iobjCubeJoinCol} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Read join details for IOBJ: "+ iobj.getAlias()} );
			
			if(i < joins.size()-1)
			e = seperator;
			else
			e = jvNewLine;
			
			if(cond.trim().equals(""))
			// without condition
			replacedStr = replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", pattern, seperator, e, pSelector);
			else
			// with conditions
			replacedStr = replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", cond, pattern, seperator, e, pSelector);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str (Pattern): "+ replacedStr} );
			
			// Sub Pattern
			if(!spattern.trim().equals("")){
				if(scond.trim().equals(""))
				// without condition
				replacedStr += replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", spattern, seperator, e, pSelector);
				else
				// with conditions
				replacedStr += replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", scond, spattern, seperator, e, pSelector);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str (SubPattern): "+ replacedStr} );
			
			if(!pstart.trim().equals("") && !replacedStr.trim().equals("")){
				String ps = pstart;
				if(pstart.indexOf(BW_IOBJ) != -1)
				ps = pstart.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
				replacedStr = ps.concat(replacedStr);
			}
			
			if(!pend.trim().equals("") && !replacedStr.trim().equals("")){
				String pe = pend;
				if(pend.indexOf(BW_IOBJ) != -1)
				pe = pend.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
				replacedStr = replacedStr.concat(pe);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str(pstart and pend): "+ replacedStr} );
			cubeJoinDetails.append(replacedStr);
		}
		cubeJoinDetails.append(end);
		
		return cubeJoinDetails.toString();
		
	}
	
	/**
	* CUBE-IOBJ Join (2 Patterns)
	* This function can be used where 2 independent pattern statement need to be 
	* generated.
	* e.g.
	* select a, b from abc where a=1 and b=2.
	* select <pattern1>
	* where <pattern2>
	* 
	* @param start
	* @param optionalPattern
	* @param cond- cond applied to both Main & Sub
	* @param pStart- Main Start
	* @param pattern- Main Pattern
	* @param pSeperator- Main Sep
	* @param pEnd- Main End
	* @param subStart- Sub Start
	* @param subPattern- Sub Pattern
	* @param subSeperator- Sub Seperator
	* @param subEnd- Sub End
	* @param end
	* @return
	* @throws Exception
	*/
	public String getCubeIOBJoin(
	String start,
	String optionalPattern,
	String cond,
	String pStart, 
	String pattern, 
	String pSeperator, 
	String pEnd, 
	String subStart, 
	String subPattern, 
	String subSeperator, 
	String subEnd,
	String end,
	String pSelector) throws Exception {
		return getCubeIOBJoin(start,
		optionalPattern,
		cond,
		cond,// scond is a copy of cond
		pStart, 
		pattern, 
		pSeperator, 
		pEnd, 
		subStart, 
		subPattern, 
		subSeperator, 
		subEnd,
		end,
		pSelector);
	}
	/**
	* CUBE-IOBJ Join (2 Patterns)
	* 
	* This function can be used where 2 independent pattern statement need to be 
	* generated.
	* e.g.
	* select a, b from abc where a=1 and b=2.
	* select <pattern1>
	* where <pattern2>
	* 
	* @param start
	* @param optionalPattern- if this pattern is provided and there are no
	* selected fields of the text table
	* Generated Text: <start>+<optionalPattern>+<end>
	*   
	* @param cond- condition flag for both pattern1 and pattern2
	* @param scond- condition on sub pattern
	* @param pStart- pattern1 start string
	* @param pattern- pattern1
	* @param pSeperator- pattern1 seperator
	* @param pEnd- pattern1 End
	* @param subStart- pattern2 start
	* @param subPattern- pattern2 
	* @param subSeperator- pattern2 seperator
	* @param subEnd- pattern2 End
	* @param end
	* @return
	* @throws Exception
	*/
	public String getCubeIOBJoin(
	String start,
	String optionalPattern,
	String cond,
	String scond,
	String pStart, 
	String pattern, 
	String pSeperator, 
	String pEnd, 
	String subStart, 
	String subPattern, 
	String subSeperator, 
	String subEnd,
	String end,
	String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getCubeIOBJoin()*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Cond: "+ cond} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"PStart: "+ pStart} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"PSeperator: "+ pSeperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"PEnd: "+ pEnd} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subStart: "+ subStart} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subPattern: "+ subPattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subSeperator: "+ subSeperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subEnd: "+ subEnd} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		
		start = start.replaceAll(bsNewLine, jvNewLine);
		optionalPattern = optionalPattern.replaceAll(bsNewLine, jvNewLine);
		pStart = pStart.replaceAll(bsNewLine, jvNewLine);
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		pSeperator = pSeperator.replaceAll(bsNewLine, jvNewLine);
		pEnd = pEnd.replaceAll(bsNewLine, jvNewLine);
		subStart = subStart.replaceAll(bsNewLine, jvNewLine);
		subPattern = subPattern.replaceAll(bsNewLine, jvNewLine);
		subSeperator = subSeperator.replaceAll(bsNewLine, jvNewLine);
		subEnd = subEnd.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		
		ArrayList tables = em.getTables();
		OdiSAPBWTable cubeTable = null;
		/*
		* Check existance of InfoCube
		*/
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOCUBE)){
				cubeTable = tab;
				break;
			}
		}
		
		if(cubeTable == null){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"No InfoCube Exists"} );
			return "";
		}
		StringBuffer cubeJoinDetails = new StringBuffer();
		cubeJoinDetails.append(start);
		
		ArrayList joins = cubeTable.getJoins();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of joined IOBJs: "+ joins.size()} );
		String e = "";
		String replacedStr = "";
		
		for(int i=0; i<joins.size(); i++){
			replacedStr = "";
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside if Condition"} );
			OdiSAPBWJoin join = (OdiSAPBWJoin)joins.get(i);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"join :>"+join} );
			OdiSAPBWTable iobj = join.getSubTable();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobj :>"+iobj} );
			OdiSAPBWColumn iobjCubeJoinCol = (OdiSAPBWColumn)join.getSubCols().get(0);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Read join details for IOBJ: "+ iobj.getAlias()} );
			
			/*
			* Optional Pattern
			*/
			if(!optionalPattern.trim().equals("")){
				if(!isTextTableSelected(iobj)){
					// If there is no selected fields from Text Table,
					// Generate Optional Pattern and skip rest
					if(optionalPattern.indexOf(BW_IOBJ) != -1)
					cubeJoinDetails.append(optionalPattern.replaceAll(BW_IOBJ_CODE, iobj.getAlias()));
					continue;
				}
			}
			
			/*
			* For every InfoObject generate Main and Sub Pattern
			* data
			*/
			/*
			* ****************************************************************
			****************************************************************** 
			* Main Pattern- data generation
			* ****************************************************************
			* ****************************************************************
			*/
			
			if(i < joins.size()-1)
			e = pSeperator;
			else
			e = jvNewLine;
			
			if(cond.trim().equals(""))
			// without condition
			replacedStr = replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", pattern, pSeperator, e, pSelector);
			else
			// with conditions
			replacedStr = replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", cond, pattern, pSeperator, e, pSelector);
			
			// Translate pStart
			if(!pStart.trim().equals("") && !replacedStr.trim().equals("")){
				String ps = pStart;
				// [BW_IOBJ] tag
				if(pStart.indexOf(BW_IOBJ) != -1)
				ps = ps.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
				
				/*
				* Date: 2nd Nov, 2009
				* BW_JOIN_IOBJ_COL_CODE- tag is replaced by the field of IOBJ Table
				* which joins CUBE
				* -Prasanta Paul
				*/
				OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)join.getSubCols().get(0);
				String iobJoinColwithPrefix = iobJoinCol.getName();
				String iobJoinColwithoutPrefix = iobJoinColwithPrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				// [BW_JOIN_IOBJ_COL] tag
				if(pStart.indexOf(BW_JOIN_IOBJ_COL) != -1 || pStart.indexOf(BW_CX_JOIN_IOBJ_COL) != -1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"IOBJ Join field: "+ iobJoinCol.getName()} );
					ps = ps.replaceAll(BW_CX_JOIN_IOBJ_COL_CODE, iobJoinColwithPrefix).replaceAll(BW_JOIN_IOBJ_COL_CODE, iobJoinColwithoutPrefix);
				}
				
				// [BW_JOIN_IOBJ_COL] and [BW_JOIN_IOBJ_TXT_COL] tags
				
				if(iobj.getJoins().size() > 0){
					OdiSAPBWJoin iobJoin = (OdiSAPBWJoin)iobj.getJoins().get(0);
					OdiSAPBWColumn txtJoinCol = (OdiSAPBWColumn)iobJoin.getSubCols().get(0);
					String txtJoinColPrefix = txtJoinCol.getName();
					String txtJoinColwithoutPrefix = txtJoinColPrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
					/*OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)iobJoin.getMasterCols().get(0);
					// [BW_JOIN_IOBJ_COL] tag
					if(pStart.indexOf(BW_JOIN_IOBJ_COL) != -1){
						ps = ps.replaceAll(BW_JOIN_IOBJ_COL_CODE, iobJoinCol.getName());
					}*/
					// [BW_JOIN_IOBJ_TXT_COL] tag
					if(pStart.indexOf(BW_JOIN_IOBJ_TXT_COL) != -1 || pStart.indexOf(BW_CX_JOIN_IOBJ_TXT_COL) != -1){
						ps = ps.replaceAll(BW_CX_JOIN_IOBJ_TXT_COL_CODE, txtJoinCol.getName()).replaceAll(BW_JOIN_IOBJ_TXT_COL_CODE, txtJoinColwithoutPrefix);
					}
				}
				replacedStr = ps.concat(replacedStr);
			}
			// Translate pEnd
			if(!pEnd.trim().equals("") && !replacedStr.trim().equals("")){
				String pe = pEnd;
				// Replace [IOBJ_TXT_TAB] 
				ArrayList iobJoins = (ArrayList)iobj.getJoins();
				OdiSAPBWJoin iobjJoin = null;
				if(iobJoins.size() > 0){
					iobjJoin = (OdiSAPBWJoin)iobJoins.get(0);
					OdiSAPBWTable iobjTxt = (OdiSAPBWTable)iobjJoin.getSubTable();
					// [BW_IOBJ_TXT_TAB] tag
					if(pEnd.indexOf(BW_IOBJ_TXT) != -1)
					pe = pe.replaceAll(BW_IOBJ_TXT_CODE, iobjTxt.getSapName());
				}
				// [BW_IOBJ] tag
				if(pEnd.indexOf(BW_IOBJ) != -1)
				pe = pe.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
				// [BW_IOBJ_TAB] tag
				if(pEnd.indexOf(BW_IOBJ_TAB) != -1)
				pe = pe.replaceAll(BW_IOBJ_TAB_CODE, iobj.getSapName());
				
				/*
				* Date: 2nd Nov, 2009
				* BW_JOIN_IOBJ_COL_CODE- tag is replaced by the field of IOBJ Table
				* which joins CUBE
				* -Prasanta Paul
				*/
				// OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)iobJoin.getMasterCols().get(0);
				OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)join.getSubCols().get(0);
				String iobJoinColPrefix = iobJoinCol.getName();
				String iobJoinColwithoutPrefix = iobJoinColPrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				// [BW_JOIN_IOBJ_COL] tag
				if(pEnd.indexOf(BW_JOIN_IOBJ_COL) != -1 || pEnd.indexOf(BW_CX_JOIN_IOBJ_COL) != -1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"IOBJ Join field: "+ iobJoinCol.getName()} );
					pe = pe.replaceAll(BW_CX_JOIN_IOBJ_COL_CODE, iobJoinColPrefix).replaceAll(BW_JOIN_IOBJ_COL_CODE, iobJoinColwithoutPrefix);
				}
				
				// [BW_JOIN_IOBJ_COL] and [BW_JOIN_IOBJ_TXT_COL] tags
				if(iobj.getJoins().size() > 0){
					OdiSAPBWJoin iobJoin = (OdiSAPBWJoin)iobj.getJoins().get(0);
					OdiSAPBWColumn txtJoinCol = (OdiSAPBWColumn)iobJoin.getSubCols().get(0);
					String txtJoinColPrefix = txtJoinCol.getName();
					String txtJoinColwithoutPrefix = txtJoinColPrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
					/*OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)iobJoin.getMasterCols().get(0);
					// [BW_JOIN_IOBJ_COL] tag
					if(pEnd.indexOf(BW_JOIN_IOBJ_COL) != -1){
						pe = pe.replaceAll(BW_JOIN_IOBJ_COL_CODE, iobJoinCol.getName());
					}*/
					// [BW_JOIN_IOBJ_TXT_COL] tag
					if(pEnd.indexOf(BW_JOIN_IOBJ_TXT_COL) != -1 || pEnd.indexOf(BW_CX_JOIN_IOBJ_TXT_COL) != -1){
						pe = pe.replaceAll(BW_CX_JOIN_IOBJ_TXT_COL_CODE, txtJoinColPrefix).replaceAll(BW_JOIN_IOBJ_TXT_COL_CODE, txtJoinColwithoutPrefix);
					}
				}
				replacedStr = replacedStr.concat(pe);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str (Main Pattern): "+ replacedStr} );
			if(!replacedStr.trim().equals(""))
			cubeJoinDetails.append(replacedStr);
			/*
			* ****************************************************************
			****************************************************************** 
			* Sub Pattern- data generation
			* ****************************************************************
			* ****************************************************************
			*/
			
			
			replacedStr = "";
			
			if(i < joins.size()-1)
			e = subSeperator;
			else
			e = jvNewLine;
			
			if(scond.trim().equals(""))
			// without condition
			replacedStr = replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", subPattern, subSeperator, e,pSelector );
			else
			// with conditions
			replacedStr = replaceIOBJTags(iobj, iobjCubeJoinCol.getName(), "", scond, subPattern, subSeperator, e, pSelector);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str (Sub Pattern): "+ replacedStr} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"subStart: "+ subStart} );
			if(!subStart.trim().equals("") && !replacedStr.trim().equals("")){
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside if block to replace substart"} );
				String ps = subStart;
				if(subStart.indexOf(BW_IOBJ) != -1)
				ps = ps.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
				/*
				* Date: 2nd Nov, 2009
				* BW_JOIN_IOBJ_COL_CODE- tag is replaced by the field of IOBJ Table
				* which joins CUBE
				* -Prasanta Paul
				*/
				// OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)iobJoin.getMasterCols().get(0);
				OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)join.getSubCols().get(0);
				String iobJoinColPrefix = iobJoinCol.getName();
				String iobJoinColwithoutPrefix = iobJoinColPrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				//	logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobJoinColPrefix="+iobJoinColPrefix+"iobJoinColwithoutPrefix="+iobJoinColwithoutPrefix} );
				// [BW_JOIN_IOBJ_COL] tag
				if(subStart.indexOf(BW_JOIN_IOBJ_COL) != -1 || subStart.indexOf(BW_CX_JOIN_IOBJ_COL) != -1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"IOBJ Join field: "+ iobJoinCol.getName()} );
					ps = ps.replaceAll(BW_CX_JOIN_IOBJ_COL_CODE, iobJoinColPrefix).replaceAll(BW_JOIN_IOBJ_COL_CODE, iobJoinColwithoutPrefix);
				}
				
				// [BW_JOIN_IOBJ_COL] and [BW_JOIN_IOBJ_TXT_COL] tags
				if(iobj.getJoins().size() > 0){
					OdiSAPBWJoin iobJoin = (OdiSAPBWJoin)iobj.getJoins().get(0);
					OdiSAPBWColumn txtJoinCol = (OdiSAPBWColumn)iobJoin.getSubCols().get(0);
					String txtJoinColPrefix = txtJoinCol.getName();
					String txtJoinColwithoutPrefix = txtJoinColPrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
					/*OdiSAPBWColumn iobJoinCol = (OdiSAPBWColumn)iobJoin.getMasterCols().get(0);
					// [BW_JOIN_IOBJ_COL] tag
					if(subStart.indexOf(BW_JOIN_IOBJ_COL) != -1){
						ps = ps.replaceAll(BW_JOIN_IOBJ_COL_CODE, iobJoinCol.getName());
					}*/
					// [BW_JOIN_IOBJ_TXT_COL] tag
					if(subStart.indexOf(BW_JOIN_IOBJ_TXT_COL) != -1 || subStart.indexOf(BW_CX_JOIN_IOBJ_TXT_COL) != -1){
						ps = ps.replaceAll(BW_CX_JOIN_IOBJ_TXT_COL_CODE, txtJoinCol.getName()).replaceAll(BW_JOIN_IOBJ_TXT_COL_CODE, txtJoinColwithoutPrefix);
					}
				}
				replacedStr = ps.concat(replacedStr);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str (Sub Start): "+ replacedStr} );
			
			// subEnd should be added (if there is generated code from Main Pattern), though there might not be
			// generated code from Sub Pattern.
			// This is needed to complete the syntex of generated string e.g. inserting "."
			if(!subEnd.trim().equals("") && (cubeJoinDetails.length() > start.length())){
				String pe = subEnd;
				if(subEnd.indexOf(BW_IOBJ) != -1)
				pe = pe.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
				if(subEnd.indexOf(BW_IOBJ_TAB) != -1)
				pe = pe.replaceAll(BW_IOBJ_TAB_CODE, iobj.getSapName());
				replacedStr = replacedStr.concat(pe);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replaced Str (Sub End): "+ replacedStr} );
			cubeJoinDetails.append(replacedStr);
		}
		cubeJoinDetails.append(end);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text: "+ cubeJoinDetails.toString()} );
		return cubeJoinDetails.toString();
	}
	
	/**
	* This function can be used for optional template code which are dependent
	* on field selection of Text Table.
	* If the "cond" is set to true, it will check for selected fields of Text Table,
	* if there is no selection, it will return empty string.
	* 
	* @param start
	* @param cond-
	* if set to true
	* generated text will be returned only if there is Text Table
	* otherwise empty string
	* 
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getIOBJ(String start, String cond, String pattern, String seperator, String end, String pSelector)throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getIOBJ() with Condition*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"pSelector: "+ pSelector} );
		
		// Check if there is any selected column of Text Table
		OdiSAPBWTable iobj = getIOBJTable();
		if(iobj == null)
		// No IOBJ Table
		return "";
		
		/*
		* Validate if the text table is joined with the InfoObject
		*/
		boolean isTxtTableSelected = isTextTableSelected(iobj);
		
		if(cond.equalsIgnoreCase("true")){
			/*	if(txtTabcols == null)
				return "";
			if(txtTabcols.size() == 0)
				// no selected fields from Text Table
				return "";*/
			if(!isTxtTableSelected)
			return "";
		}
		else{
			if(!isTxtTableSelected)
			return getIOBJ(start, pattern, seperator, end, pSelector);
			// If Text Table fields are selected return empty string
			if(isTxtTableSelected)
			return "";
		}
		return getIOBJ(start, pattern, seperator, end, pSelector);
	}
	
	/**
	* Get InfoObject Table
	* @return
	* @throws Exception
	*/
	private OdiSAPBWTable getIOBJTable() throws Exception {
		OdiSAPBWTable iobj = null;
		OdiSAPBWTable iobjTxt = null;
		ArrayList tables = em.getTables();
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOOBJECT))
			iobj = tab;
		}
		/*
		* Validate if the text table is joined with the InfoObject
		*/
		if(iobj == null)
		return null;
		
		ArrayList joins = (ArrayList)iobj.getJoins();
		if(joins.size() == 0)
		return iobj;
		
		OdiSAPBWJoin join = (OdiSAPBWJoin)joins.get(0);
		iobjTxt = (OdiSAPBWTable)join.getSubTable();
		
		if(!iobjTxt.getType().equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT)){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_JOIN)+"("+ iobj.getType()+")-"+iobj.getAlias()+" And ("+ iobjTxt.getType()+")-"+iobjTxt.getAlias()} );
			throw new UnSupportedJoinException(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_JOIN)+"("+ iobj.getType()+")-"+iobj.getAlias()+" And ("+ iobjTxt.getType()+")-"+iobjTxt.getAlias());			
		}
		return iobj;
	}

	/**
	* Added by Anzar
	* @return
	* @throws Exception
	*/
	private OdiSAPBWTable getIOBJTXTTable() throws Exception {
		//OdiSAPBWTable iobj = null;
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getIOBJTXTTable() method start"} );
		OdiSAPBWTable iobjTxt = null;
		ArrayList tables = em.getTables();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getIOBJTXTTable() tables:"+tables} );
		for(int i=0; i<tables.size(); i++){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getIOBJTXTTable() inside for loop"} );
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT) || tab.getType().equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER_TXT))
			iobjTxt = tab;
		}
		if(iobjTxt == null)
		return null;
		/*OdiSAPBWJoin join = (OdiSAPBWJoin)joins.get(0);
		iobjTxt = (OdiSAPBWTable)join.getSubTable();*/
		
		/*if(!iobjTxt.getType().equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT)){
			logger.log(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_JOIN)+"("+ iobj.getType()+")-"+iobj.getAlias()+" And ("+ iobjTxt.getType()+")-"+iobjTxt.getAlias(), className, OdiSAPBWLogger.DEBUG);
			throw new UnSupportedJoinException(odiLang.getValue(OdiSAPBWLang.UNSUPPORTED_JOIN)+"("+ iobj.getType()+")-"+iobj.getAlias()+" And ("+ iobjTxt.getType()+")-"+iobjTxt.getAlias());			
		}*/
		return iobjTxt;
	}//end of getIOBJTXTTable() method
	
	/**
	* This method can be used for-
	* - Single InfoObject
	* - Single InfoObject and its joined Text Table
	* 
	* @param start
	* @param pattern- supported Tags
	* 1. [BW_IOBJ]- IOBJ name
	* 2. [BW_IOBJ_COL]- IOBJ selected columns
	* 3. [BW_IOBJ_TXT]- IOBJ Text Table Name
	* 4. [BW_IOBJ_TXT_COL]- IOBJ Text Table Cols
	* 5. [BW_JOIN_IOBJ_COL]- IOBJ joined field
	* 
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getIOBJ(String start, String pattern, String seperator, String end, String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getIOBJ()*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"pSelector: "+ pSelector} );
		
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"bsNewLine: "+bsNewLine} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"jvNewLine: "+jvNewLine} );
		
		start = start.replaceAll(bsNewLine, jvNewLine);
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		pSelector = pSelector.replaceAll(bsNewLine, jvNewLine);
		
		//**** Extra condition added for New IOBJ Text Table Template
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"extractionType: "+OdiSAPBWExtractMapping.INFOOBJECT_TXT + "------"+em.extractionType} );
		if(!em.extractionType.equals(OdiSAPBWExtractMapping.INFOOBJECT)) {
			return "";
		}
		OdiSAPBWTable iobj = getIOBJTable();
		
		ArrayList joins = (ArrayList)iobj.getJoins();
		OdiSAPBWJoin join = null;
		String jcol = "";
		if(joins.size() > 0){
			join = (OdiSAPBWJoin)joins.get(0);
			ArrayList jcols = join.getMasterCols();
			jcol = ((OdiSAPBWColumn)jcols.get(0)).getName();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"jcol :: "+jcol} );
		}
		return replaceIOBJTags(iobj, null, start, pattern, seperator, end, pSelector);
	}

	/**
	* Added by Anzar
	* @param start
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getIOBJTXT(String start, String pattern, String seperator, String end, String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getIOBJTXT()*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"pSelector: "+ pSelector} );
		
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"bsNewLine: "+bsNewLine} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"jvNewLine: "+jvNewLine} );
		
		start = start.replaceAll(bsNewLine, jvNewLine);
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		pSelector = pSelector.replaceAll(bsNewLine, jvNewLine);
		//**** Extra condition added for New IOBJ Text Table Template
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"extractionType: "+OdiSAPBWExtractMapping.INFOOBJECT_TXT + "------"+em.extractionType} );
		if(!(em.extractionType.equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT) || em.extractionType.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER_TXT)))
		return "";
		OdiSAPBWTable iobjTxtTab = getIOBJTXTTable();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobjTxtTab------"+iobjTxtTab} );
		return replaceIOBJTXTTags(iobjTxtTab, start, pattern, seperator, end, pSelector);
	}//end of getIOBJTXT() method


	private boolean isTextTableSelected(OdiSAPBWTable iobj) {
		ArrayList txtTabcols = null;
		ArrayList joins = (ArrayList) iobj.getJoins();
		if (joins.size() > 0) {
			OdiSAPBWJoin join = (OdiSAPBWJoin) joins.get(0);
			OdiSAPBWTable iobjTxt = (OdiSAPBWTable) join.getSubTable();
			txtTabcols = iobjTxt.getCols();
		}
		if (txtTabcols == null)
		return false;
		if (txtTabcols.size() == 0)
		// no selected fields from Text Table
		return false;

		return true;
	}
	/**
	* Generic method to replace IOBJ-Text Table details (Conditional)
	*  
	* @param iobj
	* @param start
	* @param cond
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	private String replaceIOBJTags(OdiSAPBWTable iobj, String iobjCubeJoinCol, String start, String cond, String pattern, String seperator, String end, String pSelector) throws Exception {
		
		if(iobj == null)
		// No IOBJ Table
		return "";
		OdiSAPBWTable iobjTxt = null;
		
		/*
		* Validate if the text table is joined with the InfoObject
		*/
		ArrayList txtTabcols = null;
		ArrayList joins = (ArrayList)iobj.getJoins();
		if(joins.size() > 0){
			OdiSAPBWJoin join = (OdiSAPBWJoin)joins.get(0);
			iobjTxt = (OdiSAPBWTable)join.getSubTable();
			txtTabcols = iobjTxt.getCols();
		}
		
		if(cond.equalsIgnoreCase("true")){
			if(txtTabcols == null)
			return "";
			if(txtTabcols.size() == 0)
			// no selected fields from Text Table
			return "";
		}
		else{
			if(txtTabcols == null)
			return getIOBJ(start, pattern, seperator, end, pSelector);
			// If Text Table fields are selected return empty string
			if(txtTabcols.size() > 0)
			return "";
		}
		
		return replaceIOBJTags(iobj, iobjCubeJoinCol, start, pattern, seperator, end, pSelector);
		
	}
	/**
	* Generic method to replace IOBJ-Text Table details
	* 
	* @param iobj
	* @param start
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	private String replaceIOBJTags(OdiSAPBWTable iobj, String iobjCubeJoinCol, String start, String pattern, String seperator, String end, String pSelector) throws Exception {
		OdiSAPBWTable iobjTxt = null;
		if(iobj == null)
		// No IOBJ Table
		return "";
		
		StringBuffer iobjDetails = new StringBuffer();

		ArrayList arrCol = new ArrayList();
		iobjDetails.append(start);
		
		/*
		* Validate if the text table is joined with the InfoObject
		*/
		ArrayList joins = (ArrayList)iobj.getJoins();
		OdiSAPBWJoin join = null;
		if(joins.size() > 0){
			join = (OdiSAPBWJoin)joins.get(0);
			iobjTxt = (OdiSAPBWTable)join.getSubTable();
		}
		// Replace all IOBJ specific tags
		String p = pattern;
		if(p.indexOf(BW_FILTER_STMT) != -1){
			// Filters on IOBJ Fields
			ArrayList filters = iobj.getFilters();
			if(filters.size() == 0)
			return "";
			for(int i=0; i< filters.size(); i++){
				OdiSAPBWFilter f = (OdiSAPBWFilter) filters.get(i);
				iobjDetails.append(p.replaceAll(FILTER_STMT_CODE, f.getStatement()));
				if(i < filters.size()-1)
				iobjDetails.append(seperator);
			}
			iobjDetails.append(end);
			return iobjDetails.toString();
		}
		
		if(p.indexOf(BW_IOBJ) != -1){
			p = p.replaceAll(BW_IOBJ_CODE, iobj.getAlias());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_CODE+" :"+ p} );
		}
		if(p.indexOf(BW_IOBJ_TAB) != -1){
			p = p.replaceAll(BW_IOBJ_TAB_CODE, iobj.getSapName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TAB_CODE+" :"+ p} );
		}
		if(iobjCubeJoinCol != null){
			if(!iobjCubeJoinCol.equals("")){
				if(p.indexOf(BW_JOIN_IOBJ_COL) != -1 || p.indexOf(BW_CX_JOIN_IOBJ_COL) != -1){
					p = p.replaceAll(BW_CX_JOIN_IOBJ_COL_CODE, iobjCubeJoinCol).replaceAll(BW_JOIN_IOBJ_COL, iobjCubeJoinCol.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, ""));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_JOIN_IOBJ_COL_CODE+" :"+ p} );
				}
			}
		}
		/*if(join != null){ 
			ArrayList jcols = join.getMasterCols();
			String jcol = ((OdiSAPBWColumn)jcols.get(0)).getName();
			if(p.indexOf(BW_JOIN_IOBJ_COL) != -1){
				p = p.replaceAll(BW_JOIN_IOBJ_COL_CODE, jcol);
				logger.log("__Replace "+BW_JOIN_IOBJ_COL_CODE+" :"+ p);
			}
		}*/
		/*
		* Duplicate values are checked and position are incremented accordingly 
		* for IOBJ Table
		*/ 
		if(p.indexOf(BW_IOBJ_COL) != -1 || p.indexOf(BW_CX_IOBJ_COL) != -1){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside BW_CX_IOBJ_COL->>>>> "});
			ArrayList cols = iobj.getCols();			
			
			for(int i=0; i<cols.size(); i++){				
				boolean isDuplicate = true;
				OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);				
				String colName = col.getName();
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Col Order->>>>> " + col.getOrder()});
				String colNamewithoutPrefix = colName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"colName1->>>>> "+colName + "ColType1-->>"+ col.getSourceDataType()} );
				if(!arrCol.contains(colName.trim())){	
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"colName->>>>> "+colName + "ColType-->>"+ col.getSourceDataType()} );
					arrCol.add(colName.trim());
					arrColPos.add(new Integer(z+1));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Col Name::: "+ colName} );
					isDuplicate = false;
					z++;					
				}else{
					int position = arrCol.indexOf(colName.trim());						
					arrColPos.add(new Integer(position+1));							
				}											
				if(!isDuplicate){	
					if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
						if(col.getSourceDataType().equalsIgnoreCase("CUKY") ||
								col.getSourceDataType().equalsIgnoreCase("DEC") || 
								col.getSourceDataType().equalsIgnoreCase("FLTP") ||
								col.getSourceDataType().equalsIgnoreCase("QUAN") ||
								col.getSourceDataType().equalsIgnoreCase("INT4") ||
								col.getSourceDataType().equalsIgnoreCase("INT2")) {
							
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobjDetails::: "+ iobjDetails} );
							iobjDetails.append(p.replaceAll(BW_CX_IOBJ_COL_CODE, colName).replaceAll(BW_IOBJ_COL_CODE,colNamewithoutPrefix ));
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobjDetails::: "+ iobjDetails} );
							//	iobjDetails.append(p.replaceAll(BW_IOBJ_COL_CODE, col.getName().substring(3)));
						}
					}
					else if(pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")){
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobjDetails::: "+ iobjDetails} );
						iobjDetails.append(p.replaceAll(BW_CX_IOBJ_COL_CODE, colName).replaceAll(BW_IOBJ_COL_CODE, colNamewithoutPrefix));
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"iobjDetails::: "+ iobjDetails} );
						// added to handle unique column
						//	iobjDetails.append(p.replaceAll(BW_IOBJ_COL_CODE, col.getName().substring(3)));
						// end of added code 
					}
				}
				
				if(i == cols.size()-1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Last element!! End "+ end} );
				}
				else{
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator..."} );	
				}
				if(i < cols.size()-1){
					iobjDetails.append(seperator);
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"iobjDetails.append(seperator) : " + iobjDetails});
				}	
				if(isDuplicate)
				iobjDetails = iobjDetails.delete(iobjDetails.length()-seperator.length(), iobjDetails.length());
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"iobjDetails.append(duplicate) : " + iobjDetails});
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_COL_CODE+" :"+ p} );
		}
		
		/*
		* Duplicate values are checked for IOBJ Table only
		* Order is obtained for IOBJ Table only.
		*/
		boolean iobjTxtFlag=false;
		if(p.indexOf(BW_IOBJ_WJ_COL) != -1 || p.indexOf(BW_CX_IOBJ_WJ_COL) != -1){
			// list of columns with join field
			int m=0;
			ArrayList cols = iobj.getCols();	
			ArrayList iobjColPos = new ArrayList();			
			for(int i=0; i<cols.size(); i++){
				boolean isDuplicate = true;
				OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);
				String colName = col.getName();
				String colNamewithoutPrefix = colName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				if(!arrCol.contains(colName.trim())){
					arrCol.add(colName.trim());
					iobjColPos.add(new Integer(m+1));						
					isDuplicate = false;
					m++;
				}else{
					int position = arrCol.indexOf(colName.trim());								
					iobjColPos.add(new Integer(position+1));								
				}											
				if(!isDuplicate){			//BW_CX_IOBJ_WJ_COL_CODE;BW_CX_IOBJ_WJ_COL	
					//append(p.replaceAll(BW_CX_IOBJ_WJ_COL_CODE, col.getName()).replaceAll(BW_IOBJ_WJ_COL_CODE, col.getName().substring(3)));
					//	iobjDetails.append(p.replaceAll(BW_IOBJ_WJ_COL_CODE, col.getName()));		
					iobjDetails.append(p.replaceAll(BW_CX_IOBJ_WJ_COL_CODE, colName).replaceAll(BW_IOBJ_WJ_COL_CODE, colNamewithoutPrefix));
				}					
				if(i == cols.size()-1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Last element!! End "+ end} );
					
				}
				else{
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator..."} );
				}
				if(i < cols.size()-1){
					iobjDetails.append(seperator);
				}	
				if(isDuplicate)
				iobjDetails = iobjDetails.delete(iobjDetails.length()-seperator.length(), iobjDetails.length());
			}
			//****************ANZAR*************************
			/*if (join != null) {
				ArrayList jcols = join.getMasterCols();
				Iterator itr = jcols.iterator();
				while(itr.hasNext()) {
					//OdiSAPBWColumn jcol = (OdiSAPBWColumn) jcols.get(0);
					OdiSAPBWColumn jcol = (OdiSAPBWColumn) itr.next();
					if (!cols.contains(jcol)){
						iobjDetails.append(seperator);
						iobjDetails.append(p.replaceAll(BW_IOBJ_WJ_COL_CODE, jcol.getName()));
					}
				}
			}*/
			//****************end of code by ANZAR*************************
			if(iobjCubeJoinCol != null){
				if(!iobjCubeJoinCol.equals("")){
					OdiSAPBWColumn iobjCubeJC = new OdiSAPBWColumn();
					iobjCubeJC.setName(iobjCubeJoinCol);
					if(!cols.contains(iobjCubeJC)){
						if(p.indexOf(BW_IOBJ_WJ_COL) != -1 || p.indexOf(BW_CX_IOBJ_WJ_COL) != -1){
							iobjDetails.append(seperator);
							iobjDetails.append(p.replaceAll(BW_CX_IOBJ_WJ_COL_CODE, iobjCubeJoinCol).replaceAll(BW_IOBJ_WJ_COL_CODE, iobjCubeJoinCol.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "")));
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_WJ_COL_CODE+" :"+ p} );
						}
					}
				}
			}
			if(iobjTableOrder.equals(""))
			{				
				iobjTableOrder = getOrder(iobjColPos);				
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TXT_COL_CODE+" :"+ p} );
		}
		
		if(iobjTxt == null){
			if(iobjDetails.length() == start.length())
			// There are no column tags
			iobjDetails.append(p);
			iobjDetails.append(end);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text1: "+ iobjDetails.toString()} );
			return iobjDetails.toString();
		}
		
		// Replace all IOBJ Txt specific tags
		
		if(p.indexOf(BW_IOBJ_TXT_FILTER_STMT) != -1){
			// Filters on IOBJ TXT Fields
			ArrayList filters = iobjTxt.getFilters();
			if(filters.size() == 0)
			return "";
			for(int i=0; i< filters.size(); i++){
				OdiSAPBWFilter f = (OdiSAPBWFilter) filters.get(i);
				iobjDetails.append(p.replaceAll(FILTER_IOBJ_TXT_STMT_CODE, f.getStatement()));
				if(i < filters.size()-1)
				iobjDetails.append(seperator);
			}
			iobjDetails.append(end);
			return iobjDetails.toString();
		}
		
		if(p.indexOf(BW_IOBJ_TXT) != -1){
			p = p.replaceAll(BW_IOBJ_TXT_CODE, iobjTxt.getSapName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TXT_CODE+" :"+ p} );
		}
		// Join column of Text Table
		if(p.indexOf(BW_JOIN_IOBJ_TXT_COL) != -1 || p.indexOf(BW_CX_JOIN_IOBJ_TXT_COL) != -1){
			ArrayList jscols = (ArrayList)join.getSubCols();
			
			//*************Start of code change by Anzar ************ 
			Iterator joinItr = jscols.iterator();
			OdiSAPBWColumn scol = null;
			int counter = 1;
			while(joinItr.hasNext()) {
				//OdiSAPBWColumn scol = (OdiSAPBWColumn)jscols.get(0);
				scol = (OdiSAPBWColumn)joinItr.next();
				//if(p.indexOf(BW_JOIN_IOBJ_TXT_COL) != -1){
				if(counter > 1) {
					iobjDetails.append(seperator);
				}
				iobjDetails.append(p.replaceAll(BW_JOIN_IOBJ_TXT_COL_CODE, scol.getName().replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "")).replaceAll(BW_CX_JOIN_IOBJ_TXT_COL_CODE, scol.getName()));
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_JOIN_IOBJ_TXT_COL_CODE+" :"+ p} );
				//}
				counter++;
			}//end of while loop
		}//end of if(p.indexOf(BW_JOIN_IOBJ_TXT_COL) != -1) condition
		//*************End of code change by Anzar ************BW_JOIN_IOBJ_TXT_COL
		
		/*
		* Duplicate values are checked for IOBJ-TXT Table.
		* Order is obtained for IOBJ - IOBJ_TXT Table 		 
		*/
		
		if(p.indexOf(BW_IOBJ_TXT_COL) != -1 || p.indexOf(BW_CX_IOBJ_TXT_COL) != -1){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside BW_CX_IOBJ_TXT_COL->>>>> "});
			ArrayList cols = iobjTxt.getCols();
			for(int i=0; i<cols.size(); i++){
				boolean isDuplicate = true;
				OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);
				String colName = col.getName();
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Col Order->>>>> " + col.getOrder()});
				String colNamewithoutPrefix = colName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				if(!arrCol.contains(colName.trim())){					
					arrCol.add(colName.trim());
					arrColPos.add(new Integer(z+1));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Col Name......: "+ colName} );
					isDuplicate = false;
					z++;//added in 20th build
				}else{
					int position = arrCol.indexOf(colName.trim());
					//arrColPos.add(new Integer(z+1));//Commented in 20th Build
					arrColPos.add(new Integer(position+1));//Changed in 20th Build							
				}
				iobjTxtFlag = true;
				if(!isDuplicate){					
					iobjDetails.append(p.replaceAll(BW_IOBJ_TXT_COL_CODE, colNamewithoutPrefix).replaceAll(BW_CX_IOBJ_TXT_COL_CODE, colName));						
				}
				
				if(i == cols.size()-1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Last element!! End "+ end} );
				}
				else{
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator..."} );
				}				
				if(i < cols.size()-1){
					iobjDetails.append(seperator);
				}
				if(isDuplicate)
				iobjDetails = iobjDetails.delete(iobjDetails.length()-seperator.length(), iobjDetails.length());
			}
			if(inofObjectOrder.equals("") && iobjTxtFlag){				
				inofObjectOrder = getOrder(arrColPos);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TXT_COL_CODE+" :"+ p} );
		}
		if(p.indexOf(BW_IOBJ_WJ_TXT_COL) != -1 || p.indexOf(BW_CX_IOBJ_WJ_TXT_COL) != -1){
			// list of columns with join field
			ArrayList cols = iobjTxt.getCols();
			for(int i=0; i<cols.size(); i++){
				boolean isDuplicate = true;
				OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);
				String colName = col.getName();
				String colNamewithoutPrefix = colName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				String Tab_Col = iobj.getSapName().trim()+"_"+colName.trim();					
				if(!arrCol.contains(colName.trim())){
					arrCol.add(colName.trim());
					arrColPos.add(new Integer(z+1));//added in 20th Build
					//arrColPos.add(new Integer(i+1));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Col Name: "+ colName} );
					isDuplicate = false;
				}else{
					int position = arrCol.indexOf(colName.trim());
					arrColPos.add(new Integer(position+1));//Added in 20th Build
				}				
				if(!isDuplicate){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"In Block: !isDuplicate:-p="+p} );
					iobjDetails.append(p.replaceAll(BW_IOBJ_WJ_TXT_COL_CODE, colNamewithoutPrefix).replaceAll(BW_CX_IOBJ_WJ_TXT_COL_CODE, colName));					
				}
				
				if(i == cols.size()-1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Last element!! End "+ end} );
				}
				else{
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator..."} );
					
				}
				if(i < cols.size()-1){
					iobjDetails.append(seperator);
				}
				//if(isDuplicate)
				//iobjDetails = iobjDetails.delete(iobjDetails.length()-seperator.length(), iobjDetails.length());
			}//end of for loop
			/*if(!cols.contains(scol)){
				iobjDetails.append(seperator);
				iobjDetails.append(p.replaceAll(BW_IOBJ_WJ_TXT_COL_CODE, scol.getName()));
			}*/
			//***************ANZAR*************************
			if (join != null) {
				ArrayList jcols = join.getSubCols();
				Iterator itr = jcols.iterator();
				while(itr.hasNext()) {
					//OdiSAPBWColumn jcol = (OdiSAPBWColumn) jcols.get(0);
					OdiSAPBWColumn jcol = (OdiSAPBWColumn) itr.next();
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"In replace obj tags :::jcol name "+jcol.getName()});		
					if (!cols.contains(jcol)){
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"In Block: !cols.contains(jcol):-p="+p+"jcol.getName()="+jcol.getName()} );
						iobjDetails.append(seperator);
						iobjDetails.append(p.replaceAll(BW_IOBJ_WJ_TXT_COL_CODE, jcol.getName().replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "")).replaceAll(BW_CX_IOBJ_WJ_TXT_COL_CODE, jcol.getName()));
					}
				}
			}
			//****************end of code by ANZAR*************************
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TXT_COL_CODE+" :"+ p} );
		}
		if(iobjDetails.length() == start.length())
		// There are no column tags (IOBJ & TXT)
		iobjDetails.append(p);
		iobjDetails.append(end);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text: "+ iobjDetails.toString()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"arrColPos size ......  "+arrColPos} );
		
		return iobjDetails.toString();
	}//end of replaceIOBJTags() method

	
	/**
	* Method added by Anzar for IOBJ Text Table Template
	* @param iobjTxt
	* @param start
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	private String replaceIOBJTXTTags(OdiSAPBWTable iobjTxt, String start, String pattern, String seperator, String end, String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside replaceIOBJTXTTags"+iobjTxt.getOdiName()} );
		if(iobjTxt == null)
		return "";//No IOBJ Txt Table
		StringBuffer iobjDetails = new StringBuffer();
		ArrayList arrCol = new ArrayList();
		iobjDetails.append(start);
		// Replace all IOBJ specific tags
		String p = pattern;
		
		/* Duplicate values are checked for IOBJ Table only
		* Order is obtained for IOBJ Table only.
		*/
		boolean iobjTxtFlag = false;
		
		// Replace all IOBJ Txt specific tags
		if(p.indexOf(BW_IOBJ_TXT_FILTER_STMT) != -1) {
			// Filters on IOBJ TXT Fields
			ArrayList filters = iobjTxt.getFilters();
			if(filters.size() == 0)
			return "";
			for(int i=0; i< filters.size(); i++){
				OdiSAPBWFilter f = (OdiSAPBWFilter) filters.get(i);
				iobjDetails.append(p.replaceAll(FILTER_IOBJ_TXT_STMT_CODE, f.getStatement()));
				if(i < filters.size()-1)
				iobjDetails.append(seperator);
			}
			iobjDetails.append(end);
			return iobjDetails.toString();
		}//end of if(p.indexOf(BW_IOBJ_TXT_FILTER_STMT) != -1)
		if(p.indexOf(BW_IOBJTXT) != -1) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"replaceIOBJTXTTags [BW_IOBJTXT]- iobjTxt.getOdiName()): "+iobjTxt.getOdiName()} );
			p = p.replaceAll(BW_IOBJTXT_CODE, iobjTxt.getOdiName());
		}

		if(p.indexOf(BW_IOBJ_TXT) != -1){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"replaceIOBJTXTTags - iobjTxt.getSapName(): "+iobjTxt.getSapName()} );
			p = p.replaceAll(BW_IOBJ_TXT_CODE, iobjTxt.getSapName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TXT_CODE+" :"+ p} );
		}
		/*
		* Duplicate values are checked for IOBJ-TXT Table.
		* Order is obtained for IOBJ - IOBJ_TXT Table 		 
		*/
		
		if(p.indexOf(BW_IOBJ_TXT_COL) != -1 || p.indexOf(BW_CX_IOBJ_TXT_COL) != -1) {			
			ArrayList cols = iobjTxt.getCols();
			for(int i=0; i<cols.size(); i++){
				boolean isDuplicate = true;
				OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);
				String colNamePrefix = col.getName();
				String colNamewithoutPrefix = colNamePrefix.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])"+UNDERSCORE, "");
				if(!arrCol.contains(colNamePrefix.trim())){	
					arrCol.add(colNamePrefix.trim());
					arrColPos.add(new Integer(z+1));
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace Col Name......: "+ colNamePrefix} );
					isDuplicate = false;
				}else{
					int position = arrCol.indexOf(colNamePrefix.trim());
					arrColPos.add(new Integer(z+1));							
				}
				iobjTxtFlag = true;
				if(!isDuplicate){	
					
					
					if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {
						if(col.getSourceDataType().equalsIgnoreCase("CURR") ||
								col.getSourceDataType().equalsIgnoreCase("DEC") || 
								col.getSourceDataType().equalsIgnoreCase("FLTP") ||
								col.getSourceDataType().equalsIgnoreCase("QUAN") ||
								col.getSourceDataType().equalsIgnoreCase("INT4") ||
								col.getSourceDataType().equalsIgnoreCase("INT2")) {
							iobjDetails.append(p.replaceAll(BW_CX_IOBJ_TXT_COL_CODE, colNamePrefix).replaceAll(BW_IOBJ_TXT_COL_CODE, colNamewithoutPrefix));
						}
					}
					else if(pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")){ 
						iobjDetails.append(p.replaceAll(BW_CX_IOBJ_TXT_COL_CODE, colNamePrefix).replaceAll(BW_IOBJ_TXT_COL_CODE, colNamewithoutPrefix));
					}							
				}
				
				if(i == cols.size()-1){
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Last element!! End "+ end} );
				}
				else{
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator..."} );
				}				
				if(i < cols.size()-1){
					iobjDetails.append(seperator);
				}
				if(isDuplicate)
				iobjDetails = iobjDetails.delete(iobjDetails.length()-seperator.length(), iobjDetails.length());
			}			
			if(inofObjectOrder.equals("") && iobjTxtFlag){				
				inofObjectOrder = getOrder(arrColPos);
			}
		}
		if(iobjDetails.length() == start.length())
		// There are no column tags (IOBJ & TXT)
		iobjDetails.append(p);
		iobjDetails.append(end);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text for IOBJ Txt Table: "+ iobjDetails.toString()} );
		return iobjDetails.toString();
	}//end of replaceIOBJTXTTags() method



	/**
	* 
	* @return String
	*/
	public String getHierOhdOrder(){
		String strHierOhdOrder = "";		
		strHierOhdOrder = getOrder(arrColPos);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getODSOrder of Column Mapped in Hierarchy Order: "+ strHierOhdOrder} );
		return strHierOhdOrder;
	}
	
	/**
	* Method for getting the Order of the Table
	* Applicable for CUBE, IOBJ, ODSO,WODSO, CUBE_IOBJ JOIN.
	*/
	private  String getOrder(List arrColPos){
		String strOrder = "";
		String strLimitOrder = "";
		String quotesString = "'";
		strOrder = quotesString; 

		StringBuffer colList = new StringBuffer();
		
		
		Iterator itr = arrColPos.iterator();
		int count = 0;
		int nextCount = 9;
		int diffCount = 10;
		int cnt ;
		int colsize = arrColPos.size();
		while(itr.hasNext()) {
			/*if(count == 0) 
				colList.append("'"+itr.next());*/
			
			if(count == diffCount && count != colsize) {
				colList.append(" '");
				colList.append((char)10);
				diffCount = diffCount+10;
			}
			nextCount++;
			if(nextCount == diffCount) {
				colList.append("' ");
			}
			colList.append("~"+itr.next());
			
			count++;        	        
			if(count == colsize) {        	
				colList.append(" '");
			}
		}//end of while
		//adding ' in the last
		
		
		return colList.toString();
	}

	/**
	* Method for getting the Ordered String for InfoObject Table and InfoObject-Txt Table.	
	* Eg: Order of the String may be  '1 2 2 3 1' (the Duplicate field value takes the same order 
	*  number of the original field value)
	* @return
	*/
	public String getInfoObjectOrder() {
		String order = "";
		if(inofObjectOrder.equals(""))
		{
			order = iobjTableOrder;
		}
		else{
			order = inofObjectOrder;
		}			
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getInfoObjectOrder() ......... " + order} );
		return order;
	}
	
	/**
	* @param start
	* @param pattern
	* @param seperator
	* @param end- if there is no filter condition and end string contains only single specila char
	* e.g. . or , it will return end string otherwise empty string.
	* 
	* IMPORTANT- this function can be used only for ODS/DSO and Cube table
	* @return
	* @throws Exception
	*/
	public String getFilterDetails(String start, String pattern, String seperator, String end) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getFilterDetails()*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End: "+ end} );
		
		
		if(pattern.trim().length() == 0)
		// No pattern defined
		return "";
		
		StringBuffer filterString = new StringBuffer();
		start = start.replaceAll(bsNewLine, jvNewLine);
		//pattern = pattern.replaceAll(startCode, "");
		//pattern = pattern.replaceAll(endCode, "");
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		ArrayList tables = em.getTables();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"in Filter Table size "+tables.size()} );
		OdiSAPBWTable table = null;
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			// Find out ODS/DSO or Cube object
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOCUBE) || tab.getType().equals(OdiSAPBWExtractMapping.ODSO) || tab.getType().equals(OdiSAPBWExtractMapping.WODSO) || tab.getType().equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION)){
				table = tab;
				break;
			}
		}
		if(table == null)
		return "";
		
		ArrayList filters = table.getFilters();
		// IMPORTANT: No Filter conditions
		if(filters.size() == 0){
			// Check for special chars . and ,
			if(end.equals(".") ||
					end.equals(","))
			return end;
			else
			return "";
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of filter conditions: "+ filters.size()} );
		filterString.append(start);
		
		String p = "";
		for(int i=0; i<filters.size(); i++){
			OdiSAPBWFilter filter = (OdiSAPBWFilter)filters.get(i);
			
			if(filter.getFieldType().equals(OdiSAPBWExtractMapping.KEY_FIGURE)){
				// Filters on Key Figure
				p = pattern.replaceAll(FILTER_KF_FIELD_CODE, filter.getField());
				p = p.replaceAll(FILTER_KF_COND_CODE, filter.getFilterCon());
				p = p.replaceAll(FILTER_KF_VALUE_CODE, filter.getFilterValue());
			}
			else if(filter.getFieldType().equals(OdiSAPBWExtractMapping.IOPK_COLUMN)){
				// Filter on Characteristics or IOPK columns
				p = pattern.replaceAll(FILTER_IOPK_FIELD_CODE, filter.getField());
				p = p.replaceAll(FILTER_IOPK_COND_CODE, filter.getFilterCon());
				p = p.replaceAll(FILTER_IOPK_VALUE_CODE, filter.getFilterValue());
			}
			else{
				p = pattern.replaceAll(FILTER_FIELD_CODE, filter.getField());
				p = p.replaceAll(FILTER_COND_CODE, filter.getFilterCon());
				p = p.replaceAll(FILTER_VALUE_CODE, filter.getFilterValue());
				p = p.replaceAll(FILTER_STMT_CODE, filter.getStatement());
			}
			
			if(p.equals(pattern))
			p = "";
			
			if(!p.equals("")){
				filterString.append(p);
				filterString.append(seperator);
			}
		}
		if(p.equals("") && filterString.length() == start.length())
		// No tags are replaced
		return "";
		/*
		* Replace the last seperator with end String
		*/
		int l = filterString.length();
		int x = l - seperator.length();
		filterString = filterString.delete(x, l);
		filterString.append(end);
		if(filterString.length()>0){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {" FILTER LENGTH "+filterString.length()} );
			
			isFilter = true;
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Generated Text: "+ filterString.toString()} );
		return filterString.toString();
	}
	public String removeSpChar(String str, String regExp) throws Exception {
		return str.replaceAll(regExp, "");
	}
	
	/**
	* This method differentiates IOPK ,KF and mapped columns from InfoObjects and Text Tables based on the ColumnType 
	* and finds the index position of these columns and returns values in the list.
	* @return
	*/
	
	public String getOrderList(){		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getOrderList Method " + em.tables.size()} );
		List IOPK_List = new ArrayList();
		List KF_List = new ArrayList();
		String strIOPK = "";
		String strKF = "";
		String emptyString = " ";
		String quotesString = "'";
		int extraCount = 0;
		
		ArrayList tables = em.getTables();
		OdiSAPBWTable cubeTable = null;
		OdiSAPBWTable joinTable = null;
		/*
		* Check existance of InfoCube
		*/
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOCUBE)){
				cubeTable = tab;
				break;
			}
		}
		if(cubeTable == null){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {" No InfoCube Exists"} );
			return "";
		}
		
		ArrayList cubeCols = cubeTable.getCols();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Number of Columns: "+ cubeCols.size()} );
		
		for(int i=0; i<cubeCols.size(); i++){			
			OdiSAPBWColumn col = (OdiSAPBWColumn) cubeCols.get(i);
			/*
			* Consider Join Cols
			*/
			if(col.getBwColumnType().equals(OdiSAPBWExtractMapping.IOPK_COLUMN)){
				IOPK_List.add(new Integer(i+1));
				strIOPK  = strIOPK.concat(new Integer(i+1).toString());
				strIOPK = strIOPK.concat(emptyString);
			}
			else if(col.getBwColumnType().equals(OdiSAPBWExtractMapping.KEY_FIGURE)){
				KF_List.add(new Integer(i+1));
				strKF  = strKF.concat(new Integer(i+1).toString());
				strKF = strKF.concat(emptyString);
			}
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"the IOPK index.......... " + strIOPK} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"the KF index.......... " + strKF} );
		}
		
		for(int n=0;n<KF_List.size();n++){
			
			IOPK_List.add(KF_List.get(n));
		}	
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Final List: " + IOPK_List} );
		
		/*strIOPK = getPositionInList(IOPK_List);
		strIOPK = quotesString.concat(strIOPK);
		quotesString = strIOPK.concat(quotesString);*/
		
		//strIOPK = getPositionInList(IOPK_List);
		//strIOPK = quotesString.concat(strIOPK).trim();
		
		ArrayList arrayjointab = cubeTable.getJoins();
		
		if(arrayjointab.size() == 0){
			
			// Separate Method getOrder(List) has been used for splitting the String if 
			//exceeds the max length and Quotes are added to the String			
			quotesString = getOrderPositionList(IOPK_List);
			//quotesString = strIOPK.concat(quotesString);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ORDER OF THE CUBE FIELDS " + quotesString} );
			return quotesString;
		}
		
		extraCount = cubeCols.size();
		int totalSize = extraCount;
		ArrayList iobjJoin = new ArrayList();
		for(int i=0; i<arrayjointab.size(); i++){
			OdiSAPBWJoin iobJoin = (OdiSAPBWJoin)arrayjointab.get(i);
			OdiSAPBWTable iobj = iobJoin.getSubTable();
			totalSize += iobj.getCols().size();
			iobjJoin = iobj.getJoins();
			if(iobjJoin.size() > 0){
				OdiSAPBWJoin txtJoin = (OdiSAPBWJoin)iobjJoin.get(0);
				OdiSAPBWTable txtTab = txtJoin.getSubTable();
				totalSize += txtTab.getCols().size();
			}
		}		
		for(int j=extraCount+1; j<=totalSize; j++){		
			IOPK_List.add(new Integer(j));
		}		
		//getOrder(List) converts List to String and splits the String 
		//when max length is reached. 
		// Quotes are added to the Ordering String
		quotesString = getOrderPositionList(IOPK_List);		
		//quotesString = strIOPK.concat(quotesString);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"ORDER OF CUBE - INFOOBJECT JOIN ...... " + quotesString} );
		
		return quotesString;		
	}
	
	/**
	* This method compares the object with the List for IOPK and KF
	* 
	*/
	private  String getOrderPositionList(List IOPK_List){
		String strOrder = "";
		String strLimitOrder = "";
		String quotesString = "'";
		strOrder = quotesString; 

		StringBuffer colList = new StringBuffer();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"getOrderPositionList itr for IOPK List...... " +IOPK_List} );
		SortedSet result1 = new TreeSet(IOPK_List);
		Iterator itr = result1.iterator();
		int count = 0;
		int nextCount = 9;
		int diffCount = 10;
		int cnt ;
		int colsize = IOPK_List.size();
		while(itr.hasNext()) {
			/*if(count == 0) 
				colList.append("'"+itr.next());*/
			Integer item = (Integer)itr.next();
			
			
			if(count == diffCount && count != colsize) {
				colList.append(" '");
				colList.append((char)10);
				diffCount = diffCount+10;
			}
			nextCount++;
			if(nextCount == diffCount) {
				colList.append("'");
			}
			//colList.append(" "+itr.next());
			if (IOPK_List.contains(item)) {
				colList.append(((IOPK_List.indexOf(item))+1)+"~"); 
			}	
			count++;        	        
			
			if(count == colsize) {        	
				colList.append(" '");
			}
		}//end of while
		//adding ' in the last
		
		return colList.toString();
	}

	/**
	* Get Hierarchy Table
	* @return
	* @throws Exception
	*/
	private OdiSAPBWTable getHierTable() throws Exception {
		OdiSAPBWTable iobHier = null;
		
		ArrayList tables = em.getTables();
		for(int i=0; i<tables.size(); i++){
			OdiSAPBWTable tab = (OdiSAPBWTable)tables.get(i);
			if(tab.getType().equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER))
			iobHier = tab;
		}
		
		return iobHier;
	}

	
	/**
	* This function can be used for optional template code which are dependent
	* on field selection of Text Table.
	* If the "cond" is set to true, it will check for selected fields of Text Table,
	* if there is no selection, it will return empty string.
	* 
	* @param start
	* @param cond-
	* if set to true
	* generated text will be returned only if there is Text Table
	* otherwise empty string
	* 
	* @param pattern
	* @param seperator
	* @param end
	* @return
	* @throws Exception
	*/
	public String getIOBHier(String start, String pattern, String seperator, String end)throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"**********Generate Code: getIOBHier() with Condition*************"} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Start Hierarchy: "+ start} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Pattern Hierarchy: "+ pattern} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Seperator Hierarchy: "+ seperator} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"End Hierarchy: "+ end} );
		
		// Check if there is any selected column of Text Table
		
		String strIOName = null;
		
		OdiSAPBWTable iobH = getHierTable();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Hierarchy Table Alias: "+iobH.getAlias()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Hierarchy Fact Table Name: "+iobH.getFactTable()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Hierarchy Odi Name: "+iobH.getOdiName()} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Hierarchy SAP Name: "+iobH.getSapName()} );
		
		if(iobH == null)
		// No IOBJ Table
		return "";
		
		start = start.replaceAll(bsNewLine, jvNewLine);
		pattern = pattern.replaceAll(bsNewLine, jvNewLine);
		seperator = seperator.replaceAll(bsNewLine, jvNewLine);
		end = end.replaceAll(bsNewLine, jvNewLine);
		if(!em.extractionType.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER))
		return "";
		OdiSAPBWTable iobj = getHierTable();

		if(pattern.indexOf(BW_IOBHIER) != -1){
			pattern = pattern.replaceAll(BW_IOBHIER_CODE, iobj.getAlias());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBHIER_CODE+" :"+ pattern} );
		}
		//****Start New Code to fix Customer issue where slashes r there in InfoObject Name *************/
		if(pattern.indexOf(BW_IOBJ) != -1){
			pattern = pattern.replaceAll(BW_IOBJ_CODE, iobj.getOdiName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_CODE+" :"+ pattern} );
		}
		//****End of new code to fix Customer issue where slashes r there in InfoObject Name
		//****Start New Code to get SAP Hierarchy Object Name for SQL based extraction. Added in build BW build 20 ******/
		if(pattern.indexOf(BW_IOBJ_TAB) != -1){
			pattern = pattern.replaceAll(BW_IOBJ_TAB_CODE, iobj.getSapName());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Replace "+BW_IOBJ_TAB_CODE+" :"+ pattern} );
		}
		//****End of New Code to get SAP Hierarchy Object Name for SQL based extraction. Added in build BW build 20
		//remove the HIER_
		strIOName = pattern.toString();
		if(strIOName.contains("HIER_")){
			strIOName = strIOName.replaceAll("HIER_","");
			
			
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Final strIOName"+ strIOName} );
		
		return strIOName;
	}

	/**
	* Returns total length, of mapped columns in the interface 
	* for ABAP data buffering in SAP
	* @return integer value as row length
	* @since 21st BW LKM Build
	*/
	public int getABAPRecordBufferLength() throws MissingMetadataException {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"OdiSAPBWRef.getABAPRecordBufferLength() called"} );
		HashMap srcTables = new HashMap();
		HashMap srcCols = new HashMap();
		//Iterate over all tables
		OdiSAPBWTable sapTable = new OdiSAPBWTable();
		ArrayList sSrcTables = em.getTables();
		List mappedColList = new ArrayList();
		int rowLength = 0;
		for(int i = 0; i < sSrcTables.size(); i++ ) {
			sapTable = (OdiSAPBWTable) sSrcTables.get(i);
			String aliasName = sapTable.getAlias().trim();
			String tableMetadata = sapTable.getMetadata();
			String tableName = tableMetadata.replaceFirst(".*?SNP.CRTABLE_NAME=(.*?)SNP.CR.*","$1");
			
			HashMap curTableHM = new HashMap();
			srcTables.put( aliasName, curTableHM );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"TableName: " + tableName} );
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"AliasName: " + aliasName} );
			
			String []colList = tableMetadata.split("SNP.CRDWG_COLSNP.CR");
			
			//Iterate over all columns
			for (int c = 1; c < colList.length; c++) {
				String colMD = colList[c];
				String colName = colMD.replaceFirst("COL_NAME=(.*?)SNP.CR.*","$1").trim();
				HashMap curColHM = new HashMap();
				//curTableHM.put( colName, curColHM );
				//srcCols.put( aliasName + "." + colName, curColHM );
				//sapLogger.log(sapLogger.INFO, "  ColName: " + colName );
				//String []propList = colMD.split("\\QSNP$CR\\E");test it later
				String []propList = colMD.split("SNP.CR");
				// Iterate over all parameters
				for (int p = 1; p < propList.length; p++) {
					String propMD = propList[p];
					// property name/ value pair left?
					if (propMD.matches(".*?=.*")) {
						String []str = propMD.split("=");
						String propName = str[0];
						String propValue = str[1];
						curColHM.put(propName, propValue);
					}//end of if condition
				}//end of inner for loop
				curTableHM.put( colName, curColHM );
				srcCols.put( aliasName + "." + colName, curColHM );
			}//end of sub-inner for loop
			//}//end of outer for loop
			//List mappedColList = new LinkedList();
			if(sapTable.getCols() != null)
			mappedColList = sapTable.getCols();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Size of mapped col list: " + mappedColList.size()} );
			//Calculate total length of row by iterating
			//over all source columns and see whether they 
			//are used in any expression.
			//int rowLength = 0;
			Iterator mColItr = mappedColList.iterator();
			while(mColItr.hasNext()){
				OdiSAPBWColumn col = (OdiSAPBWColumn)mColItr.next();
				//String mappedCol = mColItr.next().toString().trim();
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"mapped Col name: " + col.getOdiName()} );
				Iterator iter = srcCols.keySet().iterator();
				//Iterate over all source columns
				int cntr = 1;
				while( iter.hasNext() ) {
					String curSrcColName = iter.next().toString().trim();
					HashMap curSrcCol = (HashMap)srcCols.get( curSrcColName );
					String srColName = curSrcColName.substring(curSrcColName.lastIndexOf(".")+1, curSrcColName.length()).trim();
					String colSrcColType = curSrcCol.get( "TYPE_NAME" ).toString().trim();
					//iterate over concatenated expressions
					//if current source column is referenced by any remaining reference...
					if(col.getOdiName().trim().equalsIgnoreCase(srColName)) {
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"colSrcColType: " + colSrcColType} );
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"srColName: " + srColName} );
						
						int colLen = 0;
						String colLenStr = (String) ((HashMap)srcCols.get( curSrcColName )).get("PRECISION");
						String colScale = (String) ((HashMap)srcCols.get( curSrcColName )).get("SCALE");
						if (colLenStr != null) {
							colLen = Integer.valueOf( colLenStr );
						} else {
							throw new MissingMetadataException("Undefined length for column: " + curSrcColName);
						}
						if(colSrcColType.equalsIgnoreCase("ACCP")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("CHAR")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("CLNT")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("CUKY")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("CURR")) {
							colLen = Integer.valueOf( colLenStr )+1;
						}else if(colSrcColType.equalsIgnoreCase("DATS")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("DEC")) {
							colLen = Integer.valueOf(colLenStr)+Integer.valueOf(colScale)+1;
						}else if(colSrcColType.equalsIgnoreCase("FLTP")) {
							colLen = 22 + Integer.valueOf(colScale);
						}else if(colSrcColType.equalsIgnoreCase("INT1")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("INT2")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("INT4")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("LANG")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("LCHR")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("LRAW")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("NUMC")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("PREC")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("QUAN")) {
							colLen = Integer.valueOf(colLenStr)+Integer.valueOf(colScale)+1;
						}else if(colSrcColType.equalsIgnoreCase("RAW")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("RAWSTRING")) {
							colLen = 60;
						}else if(colSrcColType.equalsIgnoreCase("STRING")) {
							colLen = 60;
						}else if(colSrcColType.equalsIgnoreCase("TIMS")) {
							colLen = Integer.valueOf( colLenStr );
						}else if(colSrcColType.equalsIgnoreCase("UNIT")) {
							colLen = Integer.valueOf( colLenStr );
						}
						rowLength += colLen;//add source column length to record length
						break;
					}//end of main if(mappedColList.contains(curSrcColName)) 
					cntr++;
				}//end of outer while
			}//end of while(mColItr.hasNext())
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"rowLength for all mapped columns: "+rowLength} );
			rowLength += (mappedColList.size()*3)+10;//add - number of cols x col separator (iv_delimeter) + newline char, to the record length
			mappedColList = null;
			sapTable = null;
		}//END of for(int i = 0; i < sSrcTables.size(); i++ )
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"rowLength After adding col separator & end of line into mapped col length: "+rowLength} );
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"----------- OdiSAPBWRef.getABAPRecordBufferLength() End ---------------"} );
		return rowLength; 
	}//end of method getABAPRecordBufferLength()
	
	
	//Start of getMappedColList Method
	/**
	* 
	* @param objectName
	* @param srcAllowNegative
	* @return
	*/
	public String getMappedColList(String ObjectType, String pattern, String seperator, String end, String pSelector, boolean condition) {
		//String objectName, String srcAllowNegative
		
		int y=0;
		System.out.println("1. InfoObject");
		System.out.println("2. InfoObject_HIER");
		System.out.println("3. InfoObject_TXT");
		System.out.println("4. InfoCube");
		System.out.println("5. CUBE_IOBJ_JOIN");
		System.out.println("6. ODS-DSO and WODS-DSO");
		System.out.println("7. OHDT");
		System.out.println("8. InfoObject_TXT");
		System.out.println("9. InfoObject_HIERTXT");
		String objPattern = "";
		
		if(ObjectType.equals("InfoObject"))
		{
			y=1;
		}
		else if(ObjectType.equals("InfoObject_HIER")||ObjectType.equals("ODS-DSO")|| ObjectType.equals("WODS-DSO")||ObjectType.equals("OHDT"))
		{
			y=2;
		}
		
		else if(ObjectType.equals("InfoObject_TXT") || ObjectType.equals("InfoObject_HIERTXT"))
		{
			y=3;
		}
		else if(ObjectType.equals("InfoCube"))
		{
			y=4;
		}
		else if(ObjectType.equals("CUBE_IOBJ_JOIN"))
		{
			y=5;
		}
		String ColQuery = "";
		String ColConcatenateQuery = "";
		switch (y)
		{
		case 1: 
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"InfoObject block"} );
			try {
				if (!condition) {
					objPattern = pattern.replace("COL_NAME", "BW_CX_IOBJ_COL");
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"objPattern: " + objPattern});

					//ColMoveQuery=getIOBJ("\n", "MOVE wa_final-[BW_IOBJ_COL]\n TO [BW_IOBJ_COL]", " .\n ", ".");
					ColQuery = getIOBJ("\n", objPattern, seperator, end, pSelector);
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"ColQuery: " + ColQuery});

					objPattern = pattern.replace("COL_NAME", "BW_CX_IOBJ_TXT_COL");
					//ColMoveQuery=ColMoveQuery+getIOBJ("", "true", "MOVE wa_final-[BW_IOBJ_TXT_COL]\n TO [BW_IOBJ_TXT_COL]", " .\n ", ".");
					ColQuery = ColQuery + getIOBJ("\n", "true", objPattern, seperator, end, pSelector);
				} else {
					pattern = pattern.replace("COL_NAME", "[BW_CX_IOBJ_COL]-[BW_CX_IOBJ_TXT_COL]");
					ColQuery = getSelectedOrderedJoinColumns(pattern, pSelector);
				}
			} catch (Exception e1) {
				e1.printStackTrace();
			}
			break;
			
		case 2:
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {ObjectType+"Block"} );
			try {
				objPattern = pattern.replace("COL_NAME", "COL_CX_NAME");
				ColQuery = getColList("\n", objPattern, seperator, end, pSelector);
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
			break;
			
		case 3:
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Its is InfoObject_TXT"} );
			try {
				objPattern = pattern.replace("COL_NAME", "BW_CX_IOBJ_TXT_COL");
				//ColMoveQuery= getIOBJTXT("", "MOVE wa_final-[BW_IOBJ_TXT_COL]\n TO [BW_IOBJ_TXT_COL]", " .\n ", ".");
				ColQuery= getIOBJTXT("\n", objPattern, seperator, end, pSelector);
				
			} catch (Exception e1) {
				e1.printStackTrace();
			}
			break;
		case 4:
			try
			{
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Its is InfoCube"} );
				objPattern = pattern.replace("COL_NAME", "BW_IOBJ");
				//ColMoveQuery=getCubeDetails("\n", "MOVE wa_final-[BW_IOBJ]\n TO [BW_IOBJ]", ".\n", ".");
				ColQuery=getCubeDetails("\n", objPattern, seperator, end,pSelector);
				
				objPattern = pattern.replace("COL_NAME", "BW_KF_NAME");
				//ColMoveQuery=ColMoveQuery+getCubeDetails("\n", "MOVE wa_final-[BW_KF_NAME]\n TO [BW_KF_NAME]", ".\n", ".");
				ColQuery=ColQuery+getCubeDetails("\n", objPattern, seperator, end,pSelector); 
				
				
			}
			catch (Exception e1) {
				e1.printStackTrace();
			}
			break;
			
		case 5:
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"It is IOBJ join"} );
			try {
				if (!condition) {
					objPattern = pattern.replace("COL_NAME", "BW_WJ_SID_TABLE]_[BW_WJ_IOPK");
					//	ColMoveQuery=getCubeDetails("\n", "MOVE wa_final-[BW_WJ_SID_TABLE]_[BW_WJ_IOPK]\n TO [BW_WJ_SID_TABLE]_[BW_WJ_IOPK]", ".\n", ".");
					ColQuery = getCubeDetails("\n", objPattern, seperator, end, pSelector);

					objPattern = pattern.replace("COL_NAME", "BW_FACT_TABLE]_[BW_KF_FNAME");
					//	ColMoveQuery=ColMoveQuery+getCubeDetails("\n", "MOVE wa_final-[BW_FACT_TABLE]_[BW_KF_FNAME]\n TO [BW_FACT_TABLE]_[BW_KF_FNAME]", ".\n", ".");
					ColQuery = ColQuery + getCubeDetails("\n", objPattern, seperator, end, pSelector);

					objPattern = pattern.replace("COL_NAME", "BW_IOBJ_TAB]_[BW_CX_IOBJ_COL");
					//   ColMoveQuery=ColMoveQuery+getCubeIOBJoin("\n", "MOVE wa_final-[BW_IOBJ_TAB]_[BW_IOBJ_COL]\n TO [BW_IOBJ_TAB]_[BW_IOBJ_COL]", " .\n ", " .");
					ColQuery = ColQuery + getCubeIOBJoin("\n", objPattern, seperator, end, pSelector);

					objPattern = pattern.replace("COL_NAME", "BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL");
					//   ColMoveQuery=ColMoveQuery+getCubeIOBJoin("\n", "true", "MOVE wa_final-[BW_IOBJ_TXT_TAB]_[BW_IOBJ_TXT_COL]\n TO [BW_IOBJ_TXT_TAB]_[BW_IOBJ_TXT_COL]", " .\n ", " .");
					ColQuery = ColQuery + getCubeIOBJoin("\n", "true", objPattern, seperator, end, pSelector);
				} else {
					pattern = pattern.replace("COL_NAME", "BW_WJ_SID_TABLE]_[BW_WJ_IOPK]_[BW_FACT_TABLE]_[BW_KF_FNAME]_[BW_IOBJ_TAB]_[BW_CX_IOBJ_COL]_[BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL");
					ColQuery = getSelectedOrderedJoinColumns(pattern, pSelector);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
			
		}
		return ColQuery;
	}
	// End of Method 	 

	/**
	* Process all the joined column that are mapped in the ODI irrespective of the type of join tables
	*/ 
	public String getSelectedOrderedJoinColumns(String pattern, String pSelector) throws Exception {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Fetching the mapped ordered columns names"});
		String p = pattern;
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Pattern : " + p});
		ArrayList arrCol = null;
		OdiSAPBWTable iobjTxt = null;
		ArrayList infoObjJoins = null;
		ArrayList infoCubeJoins = null;
		OdiSAPBWJoin objJoin = null;
		OdiSAPBWJoin cubejoin = null;
		int arrCapacity = 0;

		//for info objects
		OdiSAPBWTable iobj = getIOBJTable();
		if (iobj != null) {
			arrCapacity += (iobj.getCols().size());
			infoObjJoins = (ArrayList) iobj.getJoins();
			if (infoObjJoins.size() > 0) {
				objJoin = (OdiSAPBWJoin) infoObjJoins.get(0);
				iobjTxt = (OdiSAPBWTable) objJoin.getSubTable();
				arrCapacity += (iobjTxt.getCols().size());
			}
		}
		
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Info object column count : " + arrCapacity});

		//for info cubes
		ArrayList tables = em.getTables();
		OdiSAPBWTable cubeTable = null;
		for (Object table : tables) {
			OdiSAPBWTable tab = (OdiSAPBWTable) table;
			if (tab.getType().equals(OdiSAPBWExtractMapping.INFOCUBE)) {
				cubeTable = tab;
				break;
			}
		}
		if (cubeTable != null) {
			arrCapacity += (cubeTable.getCols().size());
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"infocube(arrCapacity) : " + arrCapacity});
			infoCubeJoins = cubeTable.getJoins();
			if (!infoCubeJoins.isEmpty()) {
				for (Object join1 : infoCubeJoins) {
					cubejoin = (OdiSAPBWJoin) join1;
					//arrCapacity += cubejoin.getMasterCols().size();
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"infocube_join(arrCapacity) : " + arrCapacity});
			}
		}

		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Info cube column count : " + arrCapacity});
		
		arrCol = new ArrayList(arrCapacity);
		for (int x = 0; x < arrCapacity; x++) {
			arrCol.add(x);
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"arrCol: " + arrCol});
		if (pattern.contains("[BW_CX_IOBJ_COL]-[BW_CX_IOBJ_TXT_COL]")
				|| p.contains("[BW_IOBJ_TAB]_[BW_CX_IOBJ_COL]_[BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL]")) {

			if (p.contains(BW_IOBJ_COL) || p.contains(BW_CX_IOBJ_COL)) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside BW_CX_IOBJ_COL->>>>> "});

				if (iobj != null) {
					ArrayList cols = iobj.getCols();

					for (Object col1 : cols) {
						OdiSAPBWColumn col = (OdiSAPBWColumn) col1;
						String colName = "";
						if (p.contains(BW_IOBJ_TAB)) {
							colName = iobj.getSapName();
							colName += "_";
						}
						colName += col.getName();
						arrCol.set(col.getMappingOrder(), colName);
					}
				} else {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"No info object exists... "});
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"array: " + arrCol});
			}

			if (p.contains(BW_IOBJ_TXT_COL) || p.contains(BW_CX_IOBJ_TXT_COL)) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside BW_CX_IOBJ_TXT_COL->>>>> "});
				if (iobjTxt != null) {
					ArrayList cols = iobjTxt.getCols();
					for (int i = 0; i < cols.size(); i++) {
						OdiSAPBWColumn col = (OdiSAPBWColumn) cols.get(i);
						String colName = "";
						if (p.indexOf(BW_IOBJ_TXT) != -1) {
							colName = iobjTxt.getSapName();
							colName += "_";
						}
						colName += col.getName();
						arrCol.set(col.getMappingOrder(), colName);
					}
				} else {
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"No info text object exists... "});
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"array: " + arrCol});
			}
		}
		if (pattern.equalsIgnoreCase("[BW_WJ_SID_TABLE]_[BW_WJ_IOPK]_[BW_FACT_TABLE]_[BW_KF_FNAME]_[BW_IOBJ_TAB]_[BW_CX_IOBJ_COL]_[BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL]")) {
			StringBuffer cubeDetails = new StringBuffer();

			if (pattern.contains("[BW_WJ_SID_TABLE]_[BW_WJ_IOPK]")) {
				ArrayList cubeCols = cubeTable.getCols();
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Number of Columns: " + cubeCols.size()});
				for (int i = 0; i < cubeCols.size(); i++) {
					OdiSAPBWColumn col = (OdiSAPBWColumn) cubeCols.get(i);
					String modifiedColName = col.getModifiedName();
					String modifiedColNamewithoutPrefix = modifiedColName.replaceFirst("(C|D)([0-9]|[0-9][0-9]|[0-9][0-9][0-9])" + UNDERSCORE, "");
					logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Value of col:" + col.getName()});
					/*
					* Consider Join Cols
					*/
					if (col.getBwColumnType().equals(OdiSAPBWExtractMapping.KEY_FIGURE)) {
						p = "[BW_FACT_TABLE]_[BW_KF_FNAME]";
						if (pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")) {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Modified Name: " + col.getModifiedName()});
							p = pattern.replaceAll(BW_CX_KF_NAME_CODE, modifiedColName).replaceAll(BW_KF_NAME_CODE, modifiedColNamewithoutPrefix);
							p = p.replaceAll(BW_KF_FNAME_CODE, col.getName());
							p = p.replaceAll(BW_FACT_TABLE_CODE, cubeTable.getFactTable());
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Pattern: " + p});
							if (p.equals(pattern)) // it doesn't contain KF tags
							{
								p = "";
							}
						}
					} else if (col.getBwColumnType().equals(OdiSAPBWExtractMapping.IOPK_COLUMN)) {
						p = "[BW_WJ_SID_TABLE]_[BW_WJ_IOPK]";
						if (pSelector.equalsIgnoreCase("ALL_MAPPED") || pSelector.equalsIgnoreCase("")) {
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Inside AllMapped: col.getName():" + col.getName() + ":col.getInfoObjectName():" + col.getInfoObjectName()});
							logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"col.getName():" + col.getName() + ":col.getMappingOrder():" + col.getMappingOrder()});
							//                            p = pattern.replaceAll(BW_IOPK_CODE, col.getName());
							//                            p = p.replaceAll(BW_SID_TABLE_CODE, col.getBwSidTable());
							//                            p = p.replaceAll(BW_IOBJ_CODE, col.getInfoObjectName());
							// With join
							p = p.replaceAll(BW_WJ_IOPK_CODE, col.getName());
							p = p.replaceAll(BW_WJ_SID_TABLE_CODE, col.getBwSidTable());
							//                            p = p.replaceAll(BW_WJ_IOBJ_CODE, col.getInfoObjectName());
							if (p.equals(pattern)) // it doesn't contain IOPK tags
							{
								p = "";
							}
						}
					}
					if (!p.equals("")) {
						cubeDetails.append(p);
						arrCol.set(col.getMappingOrder(), p);
						logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"cubeDetails.append(start)4: " + cubeDetails});
					}
				}
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"Generated Text: " + cubeDetails.toString()});
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"array: " + arrCol});
			}
		}

		arrCol.trimToSize();
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[]{"ArrayList Column Order: " + arrCol.toString()});
		return arrCol.toString().replace("[", "").replaceAll("]", "").replaceAll(",", ("" + (char) 10));
	}

}

// End of OdiSAPBWRef.java
%>
<?
/**
* @(#)OdiSapUtil.java  1.00 10/30/2013
*
* Application : ODI SAP Knowledge Modules
* Module      : SAP ERP Adapter
* Author(s)   : 
**/

/**
* <b>OdiSapUtil</b> class is a data structure of all utilities to be used in RKM
*/
public class OdiSapUtil {

	// Check the ODI Release
	public static boolean isOdi10gOr11g(){
		return <%=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")%>;
	}
	
	public static void throwODIException(String message)
	{		
		
		if(isOdi10gOr11g()){			
			throw new RuntimeException(message);
		}else{
			throw new OdiKMException(message);
		}
	}

}
//end of main class -- OdiSapUtil
?>


<@
// Start of Delta Source code
/*
* ****************************************************************
* ****************************************************************
* ODI-SAP BW Delta Extraction Source code
* ****************************************************************
* ****************************************************************
*/
//Start of OdiSapBwLogger.java

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
//import java.io.IOException;
import java.io.PrintStream;
import java.util.Locale;
import java.util.ResourceBundle;
//import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
//import java.util.logging.SimpleFormatter;


public class OdiSapBwLogger {
	
	private Logger mLogger = null;
	private PrintStream mLogPs = null;
	//private Logger mLogPsNew = null;
	//static private FileHandler fileTxt;
	//static private SimpleFormatter formatterTxt;
	private String resourceMessage = "";
	public String baseResourceName = null;
	private ResourceBundle messages = null;
	private LogRecord record = null;
	private String logFile = "";
	private ResourceBundle resourceBundle;
	static OdiSapBwLogger loggerInstance;

	/** For backwards compatibility:
	The OT should use file based logging as long as the "LOG_FILE" parameter is provided. Even in 12c!
	The KM will suppress this parameter, as soon as gen'ed in 12c. 
	* @throws OpenToolExecutionException 
	*/
	
	
	
	public static OdiSapBwLogger getLogger(String logFileName, ResourceBundle resourceBundle) throws Exception {
		//Check the instance of the singleton class
		if (loggerInstance == null) {
			loggerInstance = new OdiSapBwLogger(logFileName, resourceBundle);
		} 
		return loggerInstance;
	}
	
	public static OdiSapBwLogger getLogger()throws Exception {
		return loggerInstance;
	}
	
	public OdiSapBwLogger(String logFileName, ResourceBundle rBundle){
		this.resourceBundle = rBundle;
		this.logFile = logFileName;
		initLogger();
	}
	
	
	/**
	* Initialize logger
	*/
	private void initLogger() {
		try {
			// Do we have a logger?
			if (mLogger == null && mLogPs == null) {
				// Has the LOG_FILE_NAME parameter been passed to this OT?
				// If so we assume that the OT is used in a 10g or 11g version of ODI 
				// and we use file based logging
				if (logFile != null) {
					// Empty file name provided? => use standard file name 
					if (logFile.equals("")) {
						String logFileName = new File(System.getProperty("java.io.tmpdir"),"OdiSapBwLkm.genlog").toString();
						//mLogPsNew = Logger.getLogger("");
						//fileTxt = new FileHandler(logFileName);

						mLogPs = new PrintStream(new FileOutputStream(logFileName));
					} else {
						// Otherwise use given log file name
						//mLogPsNew = Logger.getLogger("");
						//fileTxt = new FileHandler(logFile);
						// Create txt Formatter
						//formatterTxt = new SimpleFormatter();
						//fileTxt.setFormatter(formatterTxt);
						//mLogPsNew.addHandler(fileTxt);
						mLogPs = new PrintStream(new FileOutputStream(logFile));
					}
				} else {            
					// This OT executes in ODI 12c or later and we can use ODI's logger
					mLogger = Logger.getLogger("oracle.odi.km");
				}
			}
		} catch(FileNotFoundException ex) {
			
			OdiSapUtil.throwODIException("Exception during Logger initialization: "+ ex.getMessage());
			//throw new RuntimeException("Exception during Logger initialization: "+ ex.getMessage());
		} 
		
	}//end of initLogger() method
	
	
	private void log(Level level, String messageId, String message, Object[] args) {
		//record.setResourceBundle(new OdiSapOTLoggerResourceBundle(messageId, message));
		//	baseResourceName = "sap_lkm_bw";
		//	messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.getClass().getClassLoader());
		//	messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.caller.getClass().getClassLoader());//class loader changed due to 12c issue
		record = new LogRecord(level, messageId);
		record.setResourceBundle(resourceBundle);
		record.setParameters(args);
		// Are we using a logger?
		if (mLogger != null) {
			mLogger.log(record);
		};
		// Are we using a log file?
		if (mLogPs != null) {
			String result = record.getLevel() + ": "+ record.getResourceBundle().getString(messageId)+ ": ";
			
			Object[] objParams = record.getParameters();
			if (objParams == null)
			result += "<null>\n";
			else
			for (int i = 0; i < objParams.length; i++)
			result += objParams[i].toString() + ": ";
			mLogPs.println(result);
			//mLogPs.println(record.toString());
		}
	}//end of log() method
	
	/**
	* Return resource string
	* @param messageId
	* @return
	*/
	private String getResourceString(String messageId) {
		// existing code to retrieve string from property file
		if (resourceMessage.equalsIgnoreCase("!!! BUNDLE " + baseResourceName + " !!!")) {
			return resourceMessage;
		} else {
			try {
				return resourceBundle.getString(messageId);
			} catch (Exception e) {
				//sapLogger.log(sapLogger.INFO, "Exception in getResourceString() -----: "+e);
				return "### KEY " + baseResourceName + " / " + messageId + "###"; //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$
			}
		}
	}//end of method
	
	public void setMessages(String resourceMsg) {
		this.resourceMessage = resourceMsg;
	}
	
	public void severe(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log( Level.SEVERE, messageId, getResourceString(messageId), args );
	}//end of method
	
	public void warn(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log( Level.WARNING, messageId, getResourceString(messageId), args );
	}//end of method
	
	public void fine(String messageId, String message, Object[] args) {
		// message text for trace messages is not externalized 
		log( Level.FINE, messageId, message, args );
	}//end of method
	
	
}//end of inner class _OdiLog

// Start of OdiSAPBWLang.java
import java.text.MessageFormat;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;


/**
* OdiSAPBWLang.java
* This class is used for getting the values from corresponding language property file.
*/
public class OdiSAPBWLang {
	
	
	ResourceBundle rb = null;
	
	//Constant Variable Declaration	
	public static final String UNSUPPORTED_INTERFACE = "ODIKM-SAPBW-LKM-10017";
	public static final String UNSUPPORTED_DATA_TARGET = "ODIKM-SAPBW-LKM-10001";
	public static final String FUNCTION_TIMED_OUT = "function_timed_out";
	public static final String INVALID_LEFT_OUTER_JOIN = "ODIKM-SAPBW-LKM-10002";
	public static final String UNSUPPORTED_JOIN = "invalid_join";
	public static final String UNSUPPORTED_OHD_DELTA = "ODIKM-SAPBW-LKM-10003";
	
	
	//Extract Mapping
	public static final String N0_VALID_TEMLPATE_MAPPING = "ODIKM-SAPBW-LKM-10006";
	public static final String N0_TEMLPATE_IO_TXT_EXTRACTION = "ODIKM-SAPBW-LKM-10007";
	public static final String INCORRECT_SOURCE_ORDERING = "ODIKM-SAPBW-LKM-10008";
	public static final String SINGLE_COLUMN_EXCEPTION  = "ODIKM-SAPBW-LKM-10014";
	public static final String IC_IO_COLUMN_EXCEPTION = "ODIKM-SAPBW-LKM-10009";
	public static final String NO_COLUMN_MAPPED_EXCEPTION = "ODIKM-SAPBW-LKM-10010";
	public static final String SAME_COLUMN_EXCEPTION = "ODIKM-SAPBW-LKM-10011";
	public static final String OHD_CLMN_DFFERENT_LOCATION = "ODIKM-SAPBW-LKM-10012";
	public static final String GET_TABLE_EXCEPTION = "ODIKM-SAPBW-LKM-10013";
	public static final String NO_IO_COLUMN_MAPPED_EXCEPTION = "ODIKM-SAPBW-LKM-10015";
	public static final String CONNECTION_EXCEPTION_RAISED = "JCO_Exception_is_raised_during_the_execution";
	public static final String INVALID_HIERARCHY_FILTER = "ODIKM-SAPBW-LKM-10016";
	
	//JCo Connection
	public static final String EXCEPTION_JCO_CONNECTION = "ODIKM-SAPBW-LKM-10004";
	
	public static final String ERROR_IN_MAXID = "ODIKM-SAPBW-LKM-10005";
	
	
	//property files	
	public static final String PROPERTY_FILE = "sap_lkm_bw";
	
	public static final String EMPTY_STRING = "EMPTY STRING";
	public static final String NO_TRANSLATION = "NO TRANSLATION";
	public static final boolean NO_PROPERTY_FILE = true;	
	private boolean resourceMessage = false;
	private oracle.odi.sap.km.CommonResourceBundle commonResourceBundle;
	
	/*
	*Logger 
	*/	
	OdiSapBwLogger logger;
	private static OdiSAPBWLang lang;
	
	public static OdiSAPBWLang getInstance(oracle.odi.sap.km.CommonResourceBundle commonResourceBundle){
		if(lang == null)
		{
			lang = new OdiSAPBWLang(commonResourceBundle);
		}
		return lang;
	}
	
	// Constructor for ODI
	public OdiSAPBWLang(oracle.odi.sap.km.CommonResourceBundle commonResourceBundle) {	
		
		this.commonResourceBundle = commonResourceBundle;	
		try {				
			//	logger = odiSAPBWLogger;
			logger =  OdiSapBwLogger.getLogger();
			//	rb = ResourceBundle.getBundle("oracle/odi/sap/km/"+PROPERTY_FILE, Locale.getDefault(), this.getClass().getClassLoader());
			//	rb = ResourceBundle.getBundle("oracle/odi/sap/km/"+PROPERTY_FILE, Locale.getDefault(), this.caller.getClass().getClassLoader());//class loader changed due to 12c issue
		} catch (Exception e) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"initializeResource() - e: "+e.getMessage()} );
			setMessages(NO_PROPERTY_FILE); 
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"LKM  ODISAPBWResourceBundle || initializeResource()"} );
	}

	
	public String getValue(String pKeyName) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"LKM resourceMessage: "+resourceMessage} );
		if (resourceMessage) {
			return NO_TRANSLATION;
		} else {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"+++Inside else block+++"} );
			try {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"+++Inside try block+++ pKeyName="+pKeyName} );
				return commonResourceBundle.getResourceString(pKeyName);
				//	return rb.getString(pKeyName);
			} catch (Exception e) {
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Exception in getResourceString() LKM -----: "+e.getMessage()} );
				return EMPTY_STRING; 
			}
		}
	}

	public String getValue (String pKeyName, Object[] pParams) {
		return MessageFormat.format( getValue( pKeyName ), pParams );
	}
	
	private void setMessages(boolean resourceMsg) {
		this.resourceMessage = resourceMsg;
	}
	
}
// End of OdiSAPBWLang.java

// Start of OdiSAPJCO3DataProvider

// End of OdiSAPJCO3DataProvider.java

//Start of OdiSAPBWConn3Delta

import java.util.Date;
import java.util.Properties;

import com.sap.conn.jco.JCoDestination;
import com.sap.conn.jco.JCoDestinationManager;
import com.sap.conn.jco.JCoFunction;
import com.sap.conn.jco.JCoParameterList;
import com.sap.conn.jco.JCoRepository;
import com.sap.conn.jco.ext.DestinationDataProvider;
import com.sap.conn.jco.ext.Environment;
import oracle.odi.sap.km.OdiSapDestinationDataProvider;

public class OdiSAPBWConn3Delta {
	
	//OdiSAPJCO3DataProvider dataProvider;
	oracle.odi.sap.km.OdiSapConnection sapConnection;
	JCoRepository repository;
	JCoDestination dest;

	/**
	* RFC: Get Max Request ID for Delta extraction
	*/
	final private String SAP_ZODI_GET_MAX_REQID = "ZODI_GET_MAX_REQID";
	//private String SID = "SAP_ODI_LKM_POOL";
	private String SID = "";
	
	//New Server 10.30.0.17 in use 
	private String SAP_CLIENT = "";
	private String SAP_USER_ID = "";
	private String SAP_PASSWORD = "";
	private String SAP_HOST = ""; 
	private String SAP_SYS_NUM = "";
	private String SAP_LN = "";
	private String SAP_SYS_ID = "";
	String className = OdiSAPBWConn3Delta.class.getName();
	OdiSAPBWLang odiLang = null; 
	OdiSapBwLogger logger;
	
	public OdiSAPBWConn3Delta(OdiSAPBWLang odiLang, OdiSapBwLogger sapBWDeltalogger, oracle.odi.sap.km.OdiSapConnection sapConnection) throws Exception
	{
		this.odiLang = odiLang;
		this.logger = sapBWDeltalogger;
		//	connect(sapBWDeltalogger);
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside Constrctor: sapConnection="+sapConnection} );
		try {
			this.dest = sapConnection.getDestination();
			
			// Define repository
			repository = dest.getRepository();
			// Testing: get JCO Destination instance
			dest.ping();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Inside Constrctor: sapConnection="} );
		}
		catch (Exception e) {
			logger.severe("ODIKM-SAPBW-LKM-10004", new Object[] {"["+className+"]: "+odiLang.getValue(OdiSAPBWLang.EXCEPTION_JCO_CONNECTION)+ e.toString()} );
			
			OdiSapUtil.throwODIException(odiLang.getValue(OdiSAPBWLang.EXCEPTION_JCO_CONNECTION)+": "+e.getMessage());
			//throw new Exception(odiLang.getValue(OdiSAPBWLang.EXCEPTION_JCO_CONNECTION)+": "+e.getMessage());
		}
		
	}
	
	/*public OdiSAPBWConn3Delta(String sid,
							String host,
							String userID,
							String passwd,
							String clientID,
							String lang,
							String sysNum,
							OdiSAPBWLang odiLang,
							OdiSapBwLogger sapBWDeltalogger 
							) throws Exception {
		SID = sid;
		SAP_HOST = host;
		SAP_USER_ID = userID;
		SAP_PASSWORD = passwd;
		SAP_CLIENT = clientID;
		SAP_LN = lang;
		SAP_SYS_NUM = sysNum;
		this.odiLang = odiLang;
	//	odiLang = OdiSAPBWLang.getInstance(sapBWDeltalogger);
		
		connect(sapBWDeltalogger);
	}*/
	/*public OdiSAPBWConn3Delta() throws Exception {
		connect();
	}*/
	/*private void connect(OdiSapBwLogger sapBWDeltalogger) throws Exception {
		logger = sapBWDeltalogger;
		//TODO: Add code to take dynamic connection parameters from FlexFields
		Properties connectProperties = new Properties();	
	connectProperties.setProperty(DestinationDataProvider.JCO_ASHOST, SAP_HOST);
	connectProperties.setProperty(DestinationDataProvider.JCO_SYSNR,  SAP_SYS_NUM);
	connectProperties.setProperty(DestinationDataProvider.JCO_CLIENT, SAP_CLIENT);
	connectProperties.setProperty(DestinationDataProvider.JCO_USER,   SAP_USER_ID);
	connectProperties.setProperty(DestinationDataProvider.JCO_PASSWD, SAP_PASSWORD);
	connectProperties.setProperty(DestinationDataProvider.JCO_LANG,   SAP_LN);
	OdiSapDestinationDataProvider.defineDestination(SID,connectProperties);
	
	try {
//	   logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Create Destination...."} );
		this.dest = sapConnection.getDestination();
		// Define repository
		repository = dest.getRepository();
		// Testing: get JCO Destination instance
		dest.ping();
		
	} catch (Exception e) {
		logger.severe("ODIKM-SAPBW-LKM-10004", new Object[] {"["+className+"]: "+odiLang.getValue(OdiSAPBWLang.EXCEPTION_JCO_CONNECTION)+ e.toString()} );
		throw new Exception(odiLang.getValue(OdiSAPBWLang.EXCEPTION_JCO_CONNECTION)+": "+e.getMessage());
	}
	}*/
	
	/*  
	* Delta Extractionfor InfoCube  && ODS/DSO
	*/
	public int getMaxiumRequestId() {
		int maxReqID = 0;
		try {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"+++++++Inside getMaxiumRequestId()+++++"} );
			// get JCO function name from RFC function name
			//	dest = JCoDestinationManager.getDestination(SID);
			
			JCoFunction function = repository
			.getFunction(SAP_ZODI_GET_MAX_REQID);
			// Execute the function
			function.execute(dest);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Function exected succesfully"} );
			/*
			* Call the Export Parameter
			*/
			JCoParameterList export = function.getExportParameterList();
			/*
			* Export Parameter :"EV_MAX_REQ_ID" is for Referred database field
			* i.e. /BI0/SREQUID-SID
			*/
			Integer exportDBField = (Integer) export.getValue("EV_MAX_REQ_ID");
			// intMaxReqID= Integer.parseInt(exportDBField);
			maxReqID = exportDBField.intValue();
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"MaxReqID: "+ maxReqID} );

			/*
			* Export Parameter :"EV_ERROR_MSG" is for Error Message :: No
			* message if the execution is success
			*/
			String errMsg = (String) export.getValue("EV_ERROR_MSG");
			if(errMsg != null){
				if(!errMsg.trim().equals(""))
				logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {odiLang.getValue(OdiSAPBWLang.ERROR_IN_MAXID)+ errMsg} );
				logger.severe("ODIKM-SAPBW-LKM-10005", new Object[] {odiLang.getValue(OdiSAPBWLang.ERROR_IN_MAXID)+ errMsg} );
			}
		} catch (Exception ex) {
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {odiLang.getValue(OdiSAPBWLang.ERROR_IN_MAXID)+ ex.toString()} );
		} 
		return maxReqID;
	}

	/*public void disconnect() throws Exception {
		if (dataProvider != null) {
			dataProvider.changeProperties(null);
			Environment.unregisterDestinationDataProvider(dataProvider);
		}
	}*/
}
//End of OdiSAPBWConn3Delta.java

import java.util.Date;

//Start of OdiSAPBWDeltaRef.java

/**
* This class need to be Singleton so that multiple Interfaces
* can be executed simultaneously.
* 
*/
public class OdiSAPBWDeltaRef {

	/**
	* Returns the current maximum request id of BW, 
	* if a BW connection exists.
* Returns maximum possible request id (predefined max value e.g. 9999), 
* if there is no SAP BW connection (=interface execution outside of a package)
	*/
	private static OdiSAPBWConn3Delta con;
	private static OdiSapBwLogger logger;
	private static oracle.odi.sap.km.OdiSapConnection sapConnection;
	private static OdiSAPBWDeltaRef sapBWDeltaRef;
	boolean resetReqID = false;
	int maxReqID = 0;
	static OdiSAPBWLang odiLang = null;
	public static OdiSAPBWDeltaRef getInstance(
	OdiSAPBWLang odiLang,
	OdiSapBwLogger odiSAPBWLogger,
	oracle.odi.sap.km.OdiSapConnection sapConnection
	) throws Exception {
		if(sapBWDeltaRef == null){
			sapBWDeltaRef = new OdiSAPBWDeltaRef();
			logger = odiSAPBWLogger;//new OdiSAPBWLogger(OdiSAPBWLogger.DEBUG,loggerFile);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Before Calling Connection"} );
			con = new OdiSAPBWConn3Delta(odiLang,logger,sapConnection);
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SAP Connection project"+con} );
			//con = new OdiSAPBWConn3Delta(sid,host,userID,passwd,clientID,lang,sysNum,odiLang,logger);
		}
		return 	 sapBWDeltaRef;
	}
	
	/**
	* Get the last Req ID either previously fetched ID or read from SAP BW system
	* @param MaxReqId
	* @return
	*/
	public int getLastOrMaxReqId() {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Get Last or Max Req ID...."} );
		if(maxReqID == 0 || resetReqID){
			logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Fetch new Max Req ID from SAP BW system: Conn="+con} );
			maxReqID = con.getMaxiumRequestId();
		}
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Max Request ID: "+ maxReqID} );
		return maxReqID;
	}
	/**
	* Reset the flag. If set to true, getLastOrMax() fetch new
	* Req ID from SAP BW System
	*/

	public void resetLastReqId(boolean flag) {
		logger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"#### Reset Last Req ID FLAG ###" + flag} );
		resetReqID = flag;

	}	
}
//End of OdiSAPBWDeltaRef.java

/**
* @(#)OdiSapUtil.java  1.00 10/30/2013
*
* Application : ODI SAP Knowledge Modules
* Module      : SAP ERP Adapter
* Author(s)   : 
**/

/**
* <b>OdiSapUtil</b> class is a data structure of all utilities to be used in RKM
*/
public class OdiSapUtil {

	// Check the ODI Release
	public static boolean isOdi10gOr11g(){
		return odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");
	}
	
	public static void throwODIException(String message)
	{
		if(isOdi10gOr11g()){			
			throw new RuntimeException(message);
		}else{
			throw new OdiKMException(message);
		}
	}

}
//end of main class -- OdiSapUtil

//END of Delta Source Code
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1905]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[611df65f-104c-4ffe-8d98-19a696f96be0]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[889]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[170]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c3f08b0c-df6e-4d30-ab78-44ece391bd63]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1905]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[create table <%=snpRef.getTable("L", "COLL_NAME", "W")%>
(
	<%=snpRef.getColList("", "[CX_COL_NAME]\t[DEST_WRI_DT] " + snpRef.getInfo("DEST_DDL_NULL"), ",\n\t", "","")%>
)
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1906]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String"><![CDATA[ SUNOPSIS_MEMORY_ENGINE]]></Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_ENGINE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d65b20fc-51a0-4692-b0bd-503bc18ef67e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[890]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize DUAL Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[942805f5-6932-40c4-97fd-0ab18822f63c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1906]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[// Start of Initialize DUAL Table
jdbcCon = odiRef.getJDBCConnection("DEST");
sqlStmt = jdbcCon.createStatement();
rs = null;
try{
	rs = sqlStmt.executeQuery("SELECT COUNT(1) FROM DUAL");
}catch( java.sql.SQLException ex){
rs = null;
}
if(rs == null){
	// There is no DUAL Table. 
	// Create DUAL Table
	sqlStmt.execute("CREATE TABLE DUAL (COL1 CHAR)");
	sqlStmt.execute("INSERT INTO DUAL (COL1) VALUES ('X')");
}
else{
	rs.next();
	int count = rs.getInt(1);
	if(count > 0){
		sqlStmt.execute("DELETE FROM DUAL");
		sqlStmt.execute("INSERT INTO DUAL (COL1) VALUES ('X')");
	}
}
// End of Initialize DUAL Table ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1907]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2ef5f1af-82f4-487e-adc4-e445468f86e0]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get FTP Details]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6ba422f5-41dc-4aba-bdb3-f015ecf64e33]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1907]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
//get FTP server details
<?
String sFtpServerName = odiRef.getInfo("SRC_DSERV_NAME");
String sFtpPath = odiRef.getInfo("SRC_SCHEMA");
String sFtpLocalPath = odiRef.getInfo("SRC_WORK_SCHEMA");
String sFtpUsername = odiRef.getInfo("SRC_USER_NAME");

?>

<@ String sFtpPasswordEnc = odiRef.getInfo("SRC_ENCODED_PASS"); @> 
<@ String sFtpPassword = odiRef.getInfo("SRC_PASS"); @> ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1908]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a5893d4a-7be3-431c-8c7e-5a027540f1db]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[892]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get SAP Characterset]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d4df5771-e35e-44db-b87a-c2509bcacdc6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1908]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//get SAP Characterset
<?
String sapTransportLayerName = null;
//
<% if (odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION"))  { /*if ODI 10g or 11g*/ %>
String sSapCharacterset = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CHARACTER_SET" );
String sSapAbapVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ABAP_VERSION" );
String sSapBwVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_BW_VERSION" );
boolean performExecute = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ALLOW_ABAP_EXECUTE" ).equals("1") && 
                    <%=odiRef.getOption("EXECUTE_ABAP_CODE").equals("1")%>;
String sapLanguage = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_LANGUAGE" );
String sapSystemNumber = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_NUMBER" );
String upload = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ALLOW_ABAP_UPLOAD" );
String sapClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CLIENT" );
String extractTimeout = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_EXTRACT_TIMEOUT" );

//Flex Field for transport layer name
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
String sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_QOP" );

//Fetching SAP Temp Dir
String sap_TempDir = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_DIR" );
String sap_TempLogicalName= odiRef.getFlexFieldValue(odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_LOGICAL_NAME" );
<%} else { /*if ODI 12C*/%>
String sSapCharacterset = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CHARACTER_SET" );
String sSapAbapVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ABAP_VERSION" );
String sSapBwVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_BW_VERSION" );
boolean performExecute = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ALLOW_ABAP_EXECUTE" ).equals("1") && 
                    <%=odiRef.getOption("EXECUTE_ABAP_CODE").equals("1")%>;
String extractTimeout = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_EXTRACT_TIMEOUT" );
String sapLanguage = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_LANGUAGE" );
String sapSystemNumber = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_NUMBER" );
String upload = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ALLOW_ABAP_UPLOAD" );
String sapClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CLIENT" );
//Flex field for SAP tranport layer name
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_QOP" );

//Fetching SAP Temp Dir
String sap_TempDir = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_DIR" );
String sap_TempLogicalName= odiRef.getFlexFieldValue(odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_LOGICAL_NAME" );
<%}%>
boolean bgp = ("<%=odiRef.getOption("BACKGROUND_PROCESSING")%>".equals("1"));
int sapcontype = oracle.odi.sap.km.OdiSapConnection.getSAPConnectionType(odiRef.getInfo("SRC_DSERV_NAME"),sncPartner,msHost);
?>
<@
String SAP_TR_DESC = "<%=odiRef.getOption("SAP_TRANSPORT_REQUEST_DESC")%>";
String step_name = "ODI:"+"<%=odiRef.getStep("STEP_NAME")%>";
String prefix = "";
SAP_TR_DESC = SAP_TR_DESC.trim();
if(SAP_TR_DESC.equalsIgnoreCase(step_name) || SAP_TR_DESC.equalsIgnoreCase("")){
 prefix = "<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>";
prefix = prefix.trim();
if(!prefix.equalsIgnoreCase("")){ 
 SAP_TR_DESC = prefix;
}
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1909]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ad9723cc-2ed4-45ec-805f-ab708c5560cf]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Extract ODI Mapping]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e482fb89-f8f3-4a94-9358-2eddecda19e1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1909]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%
//Odi Variable declaration
odiVarName = "";
odiVarValue = "";

//ODI Hierarchy Filter declaration
hierarchyNameFilterValue = "";//Hierarchy Name
hierarchyDateToFilterValue = "99991231";//Hierarchy Date
hierVersionValue = "";//Hierarchy Version

//Store From Tables
fromTables = odiRef.getSrcTablesList("","[TABLE_NAME]~~[POP_TAB_ALIAS]~~[SAPBW_OBJECT_TYPE]~~[SAPBW_TABLE_NAME]~~[SAPBW_FACT_TABLE_NAME]~~[METADATA]", "^^^^", "");
map.setSrcTables(fromTables);

odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"SAP table details::::"+fromTables});

//Store Join List
joinList = odiRef.getJoinList("", "[EXPRESSION]", "~", ""); 

odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"Joins as set from Extract ODI Mapping step::::"+joinList});
map.setJoins(joinList);

//Store all mapped Src. Cols
cols = odiRef.getColList("", "[EXPRESSION]", ", ", "");
map.setSelectedSrcCols(cols);

// code added 
// end code added 
//Store Col-FlexField mapping- TODO- Replace 2nd PTable with QTable
colFF = odiRef.getSrcColList("","[COL_NAME]~[COL_HEADING]~[SAPBW_SID_TABNAME]~[SAPBW_COLTYPE]~[SAPBW_COLNAME]~[SAPBW_PTABLE_NAME]~[SAPBW_PTABLE_NAME]~[SAPBW_NAVIGATION_ATTRIBUTE]~[SAPBW_TIME_DEPENDENT_ATTRIBUTE]", "+", "");
map.setColFlexFields(colFF);

//Store Filters
filter = odiRef.getFilter();
map.setFilters(filter);

//Store Target Table Columns
targtCols = odiRef.getTargetColList("", "[COL_NAME]", "~", "");
map.setTargetCols(targtCols);

//Form Statement- to find out Join Type
from =  odiRef.getFrom();
map.setFrom(from);

//Process Mapping Details
em.processMapping();


//ODI Variables Names
if(em.getOdiName()==null ||em.getOdiName().equals("null") || em.getOdiName().equals("") ){
	//getOdiVariableName = "";
	odiVarName = "";
}else{
	//getOdiVariableName = em.getOdiName();
	odiVarName = em.getOdiName();
}

//ODI Variables Values
if(em.getOdiValue()==null ||em.getOdiValue().equals("null") || em.getOdiValue().equals("") ){
	//getOdiVariableValue = "";
	odiVarValue = "";
}else{
	//getOdiVariableValue = em.getOdiValue();
	odiVarValue = em.getOdiValue();
}

if(em.getHierarchyFilter()==null ||em.getHierarchyFilter().equals("null") || em.getHierarchyFilter().equals("") ){
	hierarchyNameFilterValue = "";
	hierarchyDateToFilterValue = "99991231";
	hierVersionValue = "";
}else {
	String hierarchyFilter = em.getHierarchyFilter();
	if(hierarchyFilter.indexOf((char)44) != -1) {//checking for comma - for multiple hierarchy filter condition
		String []filterSplit = hierarchyFilter.split(""+(char)44);

		for(int i = 0; i < filterSplit.length ; i++) {
			if(filterSplit[i].indexOf("RSHIENM") != -1) {
				String hierName = filterSplit[i];
				if(hierName.indexOf("=") != -1) {
					String []hierNameKeyValue = hierName.split("=");
					hierarchyNameFilterValue = hierNameKeyValue[1].trim();
				}//end of inner if
			}else if(filterSplit[i].indexOf("DATETO") != -1) {//end of outer if
				String hierDateto = filterSplit[i];
				if(hierDateto.indexOf("=") != -1) {
					String []hierDatetoKeyValue = hierDateto.split("=");
					hierarchyDateToFilterValue = hierDatetoKeyValue[1].trim();
				}
			}else if(filterSplit[i].indexOf("VERSION") != -1) {//end of outer if
				String hierVer = filterSplit[i];
				if(hierVer.indexOf("=") != -1) {
					String []hierVerKeyValue = hierVer.split("=");
					hierVersionValue = hierVerKeyValue[1].trim();
				}
			}//end of else if condition
		}//end of for loop
	}else {//else single hierarchy filter condition -- String without comma
		if(hierarchyFilter.indexOf("RSHIENM") != -1) {
			if(hierarchyFilter.indexOf("=") != -1) {
				String []hierNameKeyValue = hierarchyFilter.split("=");
				hierarchyNameFilterValue = hierNameKeyValue[1].trim();
			}//end of inner if
		}else if(hierarchyFilter.indexOf("DATETO") != -1) {
			if(hierarchyFilter.indexOf("=") != -1) {
				String []hierDatetoKeyValue = hierarchyFilter.split("=");
				hierarchyDateToFilterValue = hierDatetoKeyValue[1].trim();
			}
		}else if(hierarchyFilter.indexOf("VERSION") != -1) {
			if(hierarchyFilter.indexOf("=") != -1) {
				String []hierVerKeyValue = hierarchyFilter.split("=");
				hierVersionValue = hierVerKeyValue[1].trim();
			}
		}//end of else if
	}//end of outer else single hierarchy filter condition
}//end of main else condition
%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1910]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[94a6ed7d-1e12-4c74-bde2-82d79ccbeed4]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Delete FTP Files]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[efcfc9fc-1856-40bc-9c9c-58a118aea384]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1910]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%if 	(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FTP") ||
	 odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SFTP") ||
	 odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SCP") ||
	 odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE")) {

/* For any transfer mode involving SAP pushing the data file via FTP, we need to have SAP delete the via FTP: */ %>

_OdiSAPAbapExecute "-UPLOAD=0" "-EXECUTE=<%=odiRef.getOption("EXECUTE_ABAP_CODE")%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RFC_DELETE_FTP_FILE" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=<%=odiRef.getOption("FIELD_SEPARATOR")%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=odiRef.getOption("FTP_PASSIVE_MODE")%>" "-FTP_TRANSFER_TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>" "-ODI_VARIABLE_NAMES=" "-ODI_VARIABLE_VALUES=" "-USER_ABAP_PARAMETER_NAMES=<Value>" "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=ET_FILE_RETURN,BAPIRET2;" "-ABAP_EXCEPTION_PARAMETERS=<Value>" "-ABAP_EXPORT_PARAMETERS=<Values>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=<Value>"

<% } else { 

/* FTP_TRANSFER_METHOD is NONE or FSMOUNT_DIRECT */ %>

OdiSleep "-DELAY=1"

<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1911]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[83017381-18f2-441a-9775-933c1ab72e62]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Invoke Process Chain]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[25d7f96a-5936-4ca2-bbde-5e646fa7ddc5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1911]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%
type = em.extractionType;
if( odiRef.getOption("PROCESS_CHAIN").length() > 0 ) {
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## Process Chain Invokation......"} );
%>_OdiSAPAbapExecute "-UPLOAD=0" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RSPC_API_CHAIN_START" "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR35 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_REQ_L,RSSID;IV_REQ_H,RSSID;IV_REQ_L,RSSID;IV_REQ_H,RSSID;I_CHAIN,CHAR25;I_NOPLAN,CHAR1"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR1;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35 ;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID;I_CHAIN,CHAR25;I_NOPLAN,CHAR1" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-LOG_FILE_NAME=<%=otLogFileName%>_new" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-PROCESS_CHAIN_I_NOPLAN=X" "-PROCESS_CHAIN=<%=odiRef.getOption("PROCESS_CHAIN")%>" "-CHAIN_TIMEOUT=300" "-KM=LKM SAP BW to Oracle(SQLLDR)" "-KM_VERSION=38" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>"  "-TRANSPORT_REQUEST_DESC=<%=odiRef.getOption("SAP_TRANSPORT_REQUEST_DESC")%>"
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1912]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[59e0d23b-1355-4f86-afdd-36497c263383]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Extract Data]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0175365b-3515-47c8-82f7-abb38ad2f7b9]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1912]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT)){
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## INFOOBJECT Template...."} );
%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_REQ_L,RSSID;IV_REQ_H,RSSID;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255 LOWER CASE;IV_LODIR,CHAR255;"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-FIRST_REQ_ID=<%=odiRef.getOption("FIRST_REQ_ID")%>" "-LAST_REQ_ID=<%=odiRef.getOption("LAST_REQ_ID")%>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
***********************************
*** InfoObject extraction
***********************************
**ABAP declarations specific to IO
TYPES: BEGIN OF ty_<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", ",\n", "")%>
* IOBJ Cols
<%=bwRef.getIOBJ("", "[BW_CX_IOBJ_COL] TYPE [BW_IOBJ_TAB]-[BW_IOBJ_COL]", " ,\n ", ", \n", "")%>
* Text Tab Cols
<%=bwRef.getIOBJ("", "true", "[BW_CX_IOBJ_TXT_COL] TYPE [BW_IOBJ_TXT_TAB]-[BW_IOBJ_TXT_COL]", " ,\n ", ", \n", "")%>
<%=bwRef.getIOBJ("END OF ty_", "[BW_IOBJ]", "", ".\n", "")%> 
DATA wa_<%=bwRef.getIOBJ("", "[BW_IOBJ]", " ", "\n", "")%> TYPE ty_<%=bwRef.getIOBJ("", "[BW_IOBJ]", " ", ".\n", "")%> 
DATA it_<%=bwRef.getIOBJ("", "[BW_IOBJ]", " ", "\n", "")%> TYPE table of ty_<%=bwRef.getIOBJ("", "[BW_IOBJ]", " ", ".\n", "")%>
DATA: wa_final TYPE ty_<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", ",\n", "")%>
* IOBJ Cols
<%=bwRef.getIOBJ("", "[BW_CX_IOBJ_COL] TYPE STRING", " ,\n ", ",\n", "")%>
* Text Tab Cols
<%=bwRef.getIOBJ("", "true", "[BW_CX_IOBJ_TXT_COL] TYPE STRING", " ,\n ", ",\n", "")%>
it_final TYPE TABLE OF ty_<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", ".\n", "")%>
* IOBJ Cols
TYPES: BEGIN OF ty_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", ",\n", "")%>

<%=bwRef.getIOBJ("", "[BW_CX_IOBJ_WJ_COL] TYPE [BW_IOBJ_TAB]-[BW_IOBJ_WJ_COL]", " ,\n ", ", \n", "")%>
END OF ty_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", "", "")%> .

<%=bwRef.getIOBJ("", "DATA wa_m[BW_IOBJ] TYPE ty_m[BW_IOBJ]", " ", ".\n", "")%>
<%=bwRef.getIOBJ("", "DATA it_m[BW_IOBJ] TYPE TABLE OF ty_m[BW_IOBJ]", "", ".\n", "")%>

* IOBJ Text cols
<%=bwRef.getIOBJ("TYPES: BEGIN OF ty_txt_", "true", "[BW_IOBJ]", "", ",\n", "")%>
<%=bwRef.getIOBJ("", "true", "[BW_CX_IOBJ_WJ_TXT_COL] TYPE [BW_IOBJ_TXT_TAB]-[BW_IOBJ_WJ_TXT_COL]", ",\n ", ", \n", "")%>
<%=bwRef.getIOBJ("END OF ty_txt_", "true", "[BW_IOBJ]", "", ".\n", "")%>

* IOBJ Text cols
<%=bwRef.getIOBJ("", "true", "DATA wa_txt_[BW_IOBJ] TYPE ty_txt_[BW_IOBJ]", "", ".\n", "")%>
<%=bwRef.getIOBJ("", "true", "DATA it_txt_[BW_IOBJ] TYPE TABLE OF ty_txt_[BW_IOBJ]", "", ".\n", "")%>
<?if(bgp){?>
data : IV_REQUID_H TYPE RSSID,
                   IV_REQUID_L TYPE RSSID.
MOVE:  IV_REQ_L TO IV_REQUID_L,
                   IV_REQ_H TO IV_REQUID_H.
<?}?>
<%}else  if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT) || type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER_TXT)) {
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## INFOOBJECT TEXT TABLE TEMPLATE ############"} );
%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255;IV_LODIR,CHAR255;"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=ET_FILE_RETURN,BAPIRET2;" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
**********************************
**InfoObject Text Table extraction
TYPES: BEGIN OF ty_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", ",\n", "")%>

*IOBJ Cols
<%=bwRef.getIOBJTXT("", "[BW_CX_IOBJ_TXT_COL] TYPE [BW_IOBJ_TXT_TAB]-[BW_IOBJ_TXT_COL]", " ,\n ", ", \n", "")%>
<%=bwRef.getIOBJTXT("END OF ty_t", "[BW_IOBJTXT]", "", ".\n", "")%>
DATA wa_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", " ", "\n", "")%> 
TYPE ty_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", " ", ".\n", "")%>
DATA : it_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", " ", "\n", "")%> 
TYPE TABLE OF ty_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", ",\n", "")%>
<%=bwRef.getIOBJTXT("", "[BW_CX_IOBJ_TXT_COL] TYPE STRING", " ,\n ", ", \n", "")%>
wa_final 
TYPE ty_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", ".\n", "")%>
DATA it_final TYPE 
TABLE OF ty_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", ".\n", "")%>

<%}else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) ){
                odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## INFOOBJECT Hierarchy  Template...."} );
                odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## Inside of the  Hierarchy  Template...."} );

%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255;IV_LODIR,CHAR255;IV_HNAME,RSHIENM;IV_HDTTO,CHAR8;IV_HVERS,CHAR3;"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_HIERNAME,RSHIENM;IV_HIER_DATETO,STRING;IV_HIER_VERS,CHAR3;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>"  "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-IV_HIERNAME=<%=hierarchyNameFilterValue%>" "-IV_HIER_VERS=<%=hierVersionValue%>" "-IV_HIER_DATETO=<%=hierarchyDateToFilterValue%>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>"  "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
**********************************
**InfoObject Hierarchy extraction
**********************************
type-pools: RSHI.
TYPES:BEGIN OF ty_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>,

* HIERARCHY Cols
<%=bwRef.getColList("\n", "[COL_CX_NAME] TYPE\n RSHIERSTRUC-[COL_NAME]", ",\n", ",\n", "")%>
END OF ty_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>.

types : begin of ty_hier,
        hienm type rshiedir-hienm,
		version type rsversion,
        hieid type rshiedir-hieid,
        end of ty_hier.
data : wa_hier type ty_hier,
<%=bwRef.getColList("\n", "[COL_CX_NAME] TYPE STRING", ",\n", ",\n", "")%>
           it_hier type table of ty_hier.
DATA wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>  
TYPE ty_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>. 
DATA it_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>
TYPE table of ty_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>.
DATA wa_final TYPE ty_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>.
DATA it_final TYPE TABLE OF ty_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>.

DATA wa_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>  TYPE RSHIERSTRUC.
DATA it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%> TYPE TABLE OF RSHIERSTRUC.
**** Start of change by RAJENDRA
DATA wa_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%> TYPE RSHIERINTVL.
DATA it_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%> TYPE TABLE OF RSHIERINTVL.
*** End of change by RAJENDRA
DATA wa_HIER_LIST TYPE rshi_s_hiedir.
DATA it_HIER_LIST TYPE rshi_s_hiedir OCCURS 0.
<?if(bgp){?>
data : IV_HIERNAME TYPE RSHIENM,
IV_HIER_DATETO TYPE STRING,
IV_HIER_VERS TYPE CHAR3.
MOVE:   IV_HNAME TO IV_HIERNAME,
                                IV_HDTTO TO IV_HIER_DATETO,
        IV_HVERS TO IV_HIER_VERS.
<?}?>
data:  g_s_hiesel TYPE rsndi_s_hiesel.
*g_s_hiedir TYPE rsndi_s_hiedir,
*g_subrc TYPE sy-subrc.
<%}else  if( type.equals(OdiSAPBWExtractMapping.INFOCUBE)) {
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## INFOCUBE Template...."} );
%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255;IV_LODIR,CHAR255;IV_REQ_L,RSSID;IV_REQ_H,RSSID"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-FIRST_REQ_ID=<%=odiRef.getOption("FIRST_REQ_ID")%>" "-LAST_REQ_ID=<%=odiRef.getOption("LAST_REQ_ID")%>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
*********************************************
*** Info Cube  extraction
*********************************************
TYPE-POOLS: rs, rsdrc.
TYPES:
BEGIN OF gt_s_data,
<%=bwRef.getCubeDetails("\n", "[BW_IOBJ] TYPE\n [BW_SID_TABLE]-[BW_IOPK]", ",\n", ",\n", "")%>
<%=bwRef.getCubeDetails("\n", "[BW_KF_NAME] TYPE\n [BW_FACT_TABLE]-[BW_KF_FNAME]", ",\n", ",\n", "")%>
END OF gt_s_data.

data: wa_final type gt_s_data,
      it_final type table of gt_s_data.
DATA:
  g_s_data    TYPE gt_s_data,
  g_t_data    TYPE STANDARD TABLE OF gt_s_data
              WITH DEFAULT KEY INITIAL SIZE 10,
  g_t_data1   TYPE STANDARD TABLE OF gt_s_data
              WITH DEFAULT KEY INITIAL SIZE 10,
  g_t_data2   TYPE STANDARD TABLE OF gt_s_data
              WITH DEFAULT KEY INITIAL SIZE 10,
  g_s_sfc     TYPE rsdri_s_sfc,
  g_th_sfc    TYPE rsdri_th_sfc,
  g_s_sfk     TYPE rsdri_s_sfk,
  g_th_sfk    TYPE rsdri_th_sfk,
  g_s_range   TYPE rsdri_s_range,
  g_t_range   TYPE rsdri_t_range,
  g_end_of_data  TYPE rs_bool,
  <%=bwRef.getCubeDetails("\n", "[BW_IOBJ] \n TYPE STRING", ",\n", ",\n", "")%>
  <%=bwRef.getCubeDetails("\n", "[BW_KF_NAME]\n TYPE STRING", ",\n", ",\n", "")%>
  g_first_call   TYPE rs_bool.
<?if(bgp){?>
data : IV_REQUID_H TYPE RSSID,
                   IV_REQUID_L TYPE RSSID.
MOVE:  IV_REQ_L TO IV_REQUID_L,
                   IV_REQ_H TO IV_REQUID_H.
<?}?>
data lv_infocube type rsinfocube.
IF IV_REQUID_H is not initial.
TYPES: BEGIN OF ty_rsbkrequest,
        requid  TYPE int4,
       END OF ty_rsbkrequest.
TYPES: BEGIN OF ty_reqsid,
        requid  TYPE /BI0/OIREQUID,
       END OF ty_reqsid.
DATA wa_rsbkrequest TYPE ty_rsbkrequest.
DATA it_rsbkrequest TYPE 
TABLE OF ty_rsbkrequest.
DATA wa_reqsid TYPE ty_reqsid.
DATA it_reqsid TYPE TABLE OF ty_reqsid.
ENDIF.

<% }else if( type.equals(OdiSAPBWExtractMapping.ODSO) || type.equals(OdiSAPBWExtractMapping.WODSO)){
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## ODS-DSO Template..."} );
%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255;IV_LODIR,CHAR255;IV_REQ_L,RSSID;IV_REQ_H,RSSID"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-FIRST_REQ_ID=<%=odiRef.getOption("FIRST_REQ_ID")%>" "-LAST_REQ_ID=<%=odiRef.getOption("LAST_REQ_ID")%>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
*********************************************
*** ODS DSO extraction
*********************************************
TYPES: BEGIN OF ty_final,
<%=bwRef.getColList("\n", "[COL_CX_NAME] TYPE\n [TABLE_NAME]-[COL_NAME]", ",\n", ",\n", "")%>
END OF ty_final.
DATA wa_final TYPE ty_final.
DATA : it_final TYPE TABLE OF ty_final,
<%=bwRef.getColList("\n", "[COL_CX_NAME] TYPE STRING", ",\n", ",\n", "")%>
wa_final_t TYPE ty_final.
<?if(bgp){?>
data : IV_REQUID_H TYPE RSSID,
                   IV_REQUID_L TYPE RSSID.
MOVE:  IV_REQ_L TO IV_REQUID_L,
                   IV_REQ_H TO IV_REQUID_H.
<?}?>
DATA it_final_t TYPE TABLE OF ty_final.
*******Start of addition
DATA lv_fields  TYPE string.
DATA lv_ods     tYPE rsdodsobject.
data lv_tabname type tabname.
***DATA lv_path TYPE string.
**** Delta Declarations---
TYPE-POOLS: rssm.
TYPES: BEGIN OF ty_rsreqicods,
odsrnr TYPE rsrequnr,
END OF ty_rsreqicods.
DATA it_rsreqicods TYPE TABLE OF ty_rsreqicods.
DATA l_s_odstabname  TYPE rssm_s_odstabname.
DATA c_log_tab       TYPE tabname.
DATA lv_delta TYPE flag.
<% }else if( type.equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION) ) {
                odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## OHD Template...."} );
//Get The Table Name
tableName =  bwRef.getTable("","[TABLE_NAME]","\n","");
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## tableName######"+tableName} );
//Get The  Destination Name 
 destName= bwRef.getTable("","[ODI_TABLE_NAME]","\n","");
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"##########destName######"+destName} );
%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255;IV_LODIR,CHAR255;IV_REQ_L,RSSID;IV_REQ_H,RSSID"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-FIRST_REQ_ID=<%=odiRef.getOption("FIRST_REQ_ID")%>" "-LAST_REQ_ID=<%=odiRef.getOption("LAST_REQ_ID")%>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
**********************************
**Open Hub Destination extraction
**********************************
TYPES:BEGIN OF ty_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>,
* OHD Cols
<%=bwRef.getColList("\n", "[COL_CX_NAME] \nTYPE\n [TABLE_NAME]-[COL_NAME]", ",\n", ",\n", "")%>

END OF ty_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>.
DATA wa_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>  
TYPE ty_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>. 
DATA it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>
TYPE table of ty_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>.
<?if(bgp){?>
data : IV_REQUID_H TYPE RSSID,
                   IV_REQUID_L TYPE RSSID.
MOVE:  IV_REQ_L TO IV_REQUID_L,
                   IV_REQ_H TO IV_REQUID_H.
<?}?>
DATA : wa_final TYPE ty_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", ",")%>
<%=bwRef.getColList("\n", "[COL_CX_NAME] \nTYPE STRING", ",\n", ",\n", "")%>
it_final TYPE TABLE OF ty_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>.
<%}else if( type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN)){
odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## CUBE-IOBJ JOIN Template...."} );
%>_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<%=EXECUTE_ABAP_CODE%>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=HOST%>" "-USER=<%=USER%>" "-PASSWORD=<%=PASSWORD%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=HOST%>" "-SAP_SYSTEM_NUMBER=<?=sapSystemNumber?>" "-USER=<%=USER%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=USER%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=SAP_FUNCTION_GROUP%>" "-CONNECTION_POOL_NAME=<%=SAP_CONNECTION_POOL%>" "-CONNECTION_POOL_SIZE=<%=SAP_CONNECTION_POOL_SIZE%>" "-FILE_DELIMITER=<%=FILE_DELIMITER%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=FTP_PASSIVE_MODE%>" "-FTP_TRANSFER_TIMEOUT=<%=FILE_TRANSFER_TIMEOUT%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValue%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255;IV_LODIR,CHAR255;IV_REQ_L,RSSID;IV_REQ_H,RSSID"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=0" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?> "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-FIRST_REQ_ID=<%=odiRef.getOption("FIRST_REQ_ID")%>" "-LAST_REQ_ID=<%=odiRef.getOption("LAST_REQ_ID")%>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_BW_VERSION=<?=sSapBwVersion?>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-ABAP_PROGRAM_BODY=
*********************************************
*** Cube Data extraction
*********************************************
TYPE-POOLS: rs, rsdrc.
* List of selected and joined fields of cube
TYPES:
    BEGIN OF ty_final,
<%=bwRef.getCubeDetails("\n", "[BW_WJ_SID_TABLE]_[BW_WJ_IOPK] TYPE\n [BW_WJ_SID_TABLE]-[BW_WJ_IOPK]", ",\n", "\n","")%>
<%=bwRef.getCubeDetails(",", "[BW_FACT_TABLE]_[BW_KF_FNAME] TYPE\n [BW_FACT_TABLE]-[BW_KF_FNAME]", ",\n", "\n","")%>

* List of Selected and Join Fields of 
* Text Table 
* IOBJ Cols
<%=bwRef.getCubeIOBJoin(", ", "[BW_IOBJ_TAB]_[BW_CX_IOBJ_COL] TYPE\n [BW_IOBJ_TAB]-[BW_IOBJ_COL],", " \n ", " \n", "")%>
* Text Tab Cols
<%=bwRef.getCubeIOBJoin("", "true", "[BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL] TYPE\n [BW_IOBJ_TXT_TAB]-[BW_IOBJ_TXT_COL],", " \n ", " \n", "")%>

END OF ty_final.

DATA: wa_final  TYPE ty_final,
<%=bwRef.getCubeDetails("\n", "[BW_WJ_SID_TABLE]_[BW_WJ_IOPK] TYPE\n STRING", ",\n", "\n", "")%>
<%=bwRef.getCubeDetails(",", "[BW_FACT_TABLE]_[BW_KF_FNAME] TYPE\n STRING", ",\n", "\n","")%>
<%=bwRef.getCubeIOBJoin(", ", "[BW_IOBJ_TAB]_[BW_CX_IOBJ_COL] TYPE\n STRING,", " \n ", " \n", "")%>
<%=bwRef.getCubeIOBJoin("", "true", "[BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL] TYPE\n STRING,", " \n ", " \n", "")%>
it_final  TYPE TABLE OF ty_final.

* Cube Data extraction
* List of Selected fields of Cube
* without Join fields

TYPES:
    BEGIN OF gt_s_data,
<%=bwRef.getCubeDetails("\n", "[BW_IOBJ] TYPE\n [BW_SID_TABLE]-[BW_IOPK]", ",\n", ",\n","")%>
<%=bwRef.getCubeDetails("\n", "[BW_KF_NAME] TYPE\n [BW_FACT_TABLE]-[BW_KF_FNAME]", ",\n", ",\n","")%>
    END OF gt_s_data.
** Declaration for Delta
data lv_infocube type rsinfocube.
lv_infocube = <%=bwRef.getCubeDetails("'", "[BW_CUBE]", "", "'","")%>.
** Declaration for Delta
<?if(bgp){?>
data : IV_REQUID_H TYPE RSSID,
                   IV_REQUID_L TYPE RSSID.
MOVE:  IV_REQ_L TO IV_REQUID_L,
                   IV_REQ_H TO IV_REQUID_H.
<?}?>
  DATA:
    g_s_data        TYPE gt_s_data,
    g_t_data        TYPE STANDARD TABLE 
                    OF gt_s_data
                    WITH DEFAULT KEY 
                    INITIAL SIZE 10,
    g_s_sfc         TYPE rsdri_s_sfc,
    g_th_sfc        TYPE rsdri_th_sfc,
    g_s_sfk         TYPE rsdri_s_sfk,
    g_th_sfk        TYPE rsdri_th_sfk,
    g_s_range       TYPE rsdri_s_range,
    g_t_range       TYPE rsdri_t_range,
   g_end_of_data  TYPE rs_bool,
   g_first_call   TYPE rs_bool.


* List all fields of Cube
* selected & joined fields

TYPES:
    BEGIN OF ty_cube,
<%=bwRef.getCubeDetails("", "[BW_WJ_IOPK] TYPE\n [BW_WJ_SID_TABLE]-[BW_WJ_IOPK]", ",\n ", ", \n ", "")%>
<%=bwRef.getCubeDetails("", "[BW_KF_FNAME] TYPE\n [BW_FACT_TABLE]-[BW_KF_FNAME]", ",\n ", ",\n ", "")%>
    END OF ty_cube.

  DATA: wa_cube  TYPE ty_cube,
        it_cube TYPE TABLE OF ty_cube.
IF IV_REQUID_H is not initial.
TYPES: BEGIN OF ty_rsbkrequest,
        requid  TYPE int4,
       END OF ty_rsbkrequest.
TYPES: BEGIN OF ty_reqsid,
        requid  TYPE /BI0/OIREQUID,
       END OF ty_reqsid.
DATA wa_rsbkrequest TYPE ty_rsbkrequest.
DATA it_rsbkrequest TYPE 
TABLE OF ty_rsbkrequest.
DATA wa_reqsid TYPE ty_reqsid.
DATA it_reqsid TYPE TABLE OF ty_reqsid.
ENDIF.

<% }%>    
**********************************
** Common ABAP declarations for all BW Destinations

<?if(bgp){?>
DATA: it_odivar TYPE zodi_cond,
      wa_odi TYPE zodi_cond_str,
      lv_dyn_var TYPE string,
      lv_var TYPE int4 VALUE 2,
      lv_line1 TYPE line,
      lv_low TYPE syindex,
      lv_high TYPE syindex,
      lv_new TYPE sytabix,                  
      lv_mod TYPE sytabix,
                  ls_log TYPE BAL_S_LOG,
                  lv_string TYPE string,
                  i_log_handle TYPE BALLOGHNDL,
                  lv_rowCountChar type char10,
                  lv_rowCount type int4,
                  lt_return_handle TYPE TABLE OF bapiret2,
                  wa_return_handle TYPE bapiret2.

DATA: IV_DELIMITER TYPE CHAR3,
           IV_FILENAME TYPE CHAR255,
           IV_HASHVALUE TYPE CHAR35,
           IV_MAX_ROW_CNT TYPE SYTABIX,
                                   IV_FETCH_BATCH_SIZE TYPE SYTABIX.

SELECT-OPTIONS: 
IT_COND FOR lv_line1 NO INTERVALS.

  FIELD-SYMBOLS: <fs> TYPE any,
                 <ps> TYPE any. 

MOVE: iv_deli TO iv_delimiter,
           iv_file TO iv_filename,
           iv_hash TO iv_hashvalue,
           iv_maxc TO iv_max_row_cnt,
                                   iv_fetc TO iv_fetch_batch_size.
                                   
**************************
*Populating Log Variables
**************************
ls_log-extnumber = iv_extid.
ls_log-object = iv_app.
ls_log-aluser = sy-uname.
ls_log-subobject = iv_sub.
ls_log-aldate = sy-datum.

CLEAR et_file_return.

et_file_return-type = 'I'.
et_file_return-number = '000'.
et_file_return-ID = 'CL'.
et_file_return-message = 
'Application Logging Started'.

************************
*Generating Log Handler
************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    LS_LOG               = ls_log
TABLES
   ET_HANDLE             = lt_return_handle.

READ TABLE lt_return_handle INTO
wa_return_handle INDEX 1.
IF sy-subrc IS INITIAL.
i_log_handle = wa_return_handle-message.
ENDIF.

**************************
*Retrieve ODI variable values
**************************
LOOP AT it_cond  .
    lv_new = sy-tabix.
    lv_mod = lv_new MOD 2.
    IF lv_mod EQ 1.
    wa_odi-field = it_cond-low.
    lv_new = lv_new + 1.
    CLEAR it_cond.
    READ TABLE it_cond INDEX lv_new.
    wa_odi-val = it_cond-low.
    APPEND wa_odi TO it_odivar.
    CLEAR : wa_odi,it_cond,lv_new.
    ENDIF.
  ENDLOOP. 
  LOOP AT it_odivar INTO wa_odi.
    lv_dyn_var = wa_odi-field.
    ASSIGN (lv_dyn_var) TO <ps>.
    IF <ps> IS ASSIGNED.
      ASSIGN COMPONENT lv_var 
OF STRUCTURE wa_odi TO <fs>.
      IF <fs> IS ASSIGNED.
        <ps> = wa_odi-val.
      ENDIF.
    ENDIF. 
    UNASSIGN : <fs>,<ps>. 
  ENDLOOP. 
CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
LINE_SIZE = 250.
WRITE :'Background Process Started  at'.
NEW-LINE.
WRITE :'Time:',sy-uzeit.
WRITE :'User:',sy-uname. 
**************************
*end of Retrieve ODI variable values
**************************
<?}?> 


TYPE-POOLS: rs, rsdrc.
*TYPES: BEGIN OF gs_text,
*line(<%=bwRef.getABAPRecordBufferLength()%>) TYPE str,
*END OF gs_text.
DATA: 
gc_error   VALUE 'E',
gc_success VALUE 'S'.
DATA: wa_result TYPE string,
      gt_result  TYPE TABLE OF string,
      lv_order  TYPE string,
      lv_order1 TYPE string,
      str_line   TYPE string,
      str_linef  TYPE string,
      lv_index TYPE string,
      lv_delimiter TYPE string,
      int TYPE int4, 
      lv_cube,
                  lv_dbcur  TYPE cursor,
                  lv_temp_row_count TYPE SYTABIX,
                  lv_fetch_batch_size TYPE SYTABIX,
      lv_cnt TYPE sytabix.
                  
FIELD-SYMBOLS:
  <fs_field>    TYPE ANY,
  <lv_index> TYPE ANY.
  
  
**********************************
** Common start of extraction
**********************************
***Common section:
<%odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## Mapping Type: ...."+ type} );
em.validAbapTemplateType(type);
/* Init code gen vars */
   boolean bUseFTP = false;
   if (odiRef.getOption("FTP_TRANSFER_METHOD").equals("FTP") || 
       odiRef.getOption("FTP_TRANSFER_METHOD").equals("SFTP") || 
       odiRef.getOption("FTP_TRANSFER_METHOD").equals("SCP") ||
       odiRef.getOption("FTP_TRANSFER_METHOD").equals("NONE")) {
      bUseFTP = true;
   };%>
   
IF  iv_hashvalue NE 'ODI.SAP.HVM'.
CLEAR et_file_return.
et_file_return-type = 'E'.
et_file_return-message =
'Installed ABAP program does not match interface definition'.
<?if(bgp){?>
NEW-LINE.
CONCATENATE 'MSGTY:' et_file_return-type INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
NEW-LINE.
CONCATENATE 'MESSAGE:' et_file_return-message INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
APPEND et_file_return.
EXIT.
ENDIF.

**25-07-2014
DEFINE authority_check.
    authority-check object 'S_DATASET'
             id 'PROGRAM'  field  &1
             id 'ACTVT'    field '06'
             id 'ACTVT'    field '33'
             id 'ACTVT'    field '34'
             id 'FILENAME' field lv_path_authority.
    if sy-subrc <> 0.
      clear et_file_return.
      et_file_return-type = 'E'.
                et_file_return-message =
    'Error: Authorization for S_DATASET' .
    et_file_return-message_v1 =
    'or some activity authorization under'.
    et_file_return-message_v2 =
    'S_DATASET is missing.'.
    append et_file_return.
   
                     <?if(bgp){?>
                  WRITE : / 'MSGID: ', sy-msgid.
                  WRITE : / 'MSGTYPE: ', 'E'.
*Code added : JAI
                  WRITE : / 'MESSAGE:' , et_file_return-message.
                  WRITE : / 'MESSAGE 1: ', et_file_return-message_v1.
      WRITE : / 'MESSAGE 2: ', et_file_return-message_v2.
                  
                  CALL FUNCTION 'ZODI_LOGMSG_ADD'
                  EXPORTING
      ET_FILE_RETURN       = et_file_return
                  I_LOG_HANDLE         = i_log_handle.
   <?}?>
      EXIT.
    endif.

  END-OF-DEFINITION.

DATA : lv_path_authority TYPE char255.
**25-07-2014


**#changes_v_38
***************************************
******Creating Path  ******
***************************************
TYPES : BEGIN OF ty_tab,
            dirname TYPE dirname ,
          END OF ty_tab.

DATA: lv_pathname TYPE text255,
            lv_logpath  TYPE text255,
      lv_path TYPE string,
      lv_path_windows(64),
      lv_path_prog_files(64),
      lv_len TYPE i,
                  lv_mesg TYPE string.


DATA: lt_tab TYPE STANDARD 
TABLE OF ty_tab,
        ls_tab TYPE ty_tab.

CONSTANTS : lc_f_slash type char1 value '/',
            lc_b_slash type char1 value '\'. 

<%if(!bUseFTP){%>
lv_pathname = iv_path. 
<%}%>
                                                
<%if(bUseFTP){%>
***************************************
******Calling FTP Function Module******
***************************************
<? if(bgp) { ?>
lv_pathname = IV_TMDIR.
lv_logpath = IV_LODIR.
<? } else { ?>
lv_pathname = IV_TMP_DIR_PATH.
lv_logpath = IV_LOG_DIR_PATH.
<? } ?>

IF lv_logpath IS INITIAL 
                AND lv_pathname IS INITIAL.
***********************************
*******Get default directory*******
***********************************
CALL FUNCTION 'RSPO_SAPGPARAM'
  EXPORTING
*   RFCDEST          =
    NAME             = 'DIR_HOME'
IMPORTING
   VALUE            = lv_pathname
*   ONLY_LOCAL       =
EXCEPTIONS
   ERROR            = 1
   OTHERS           = 2   .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

ENDIF.
* Set default value for lv_logpath.
 lv_logpath = 'DIR_HOME'.
*1.Given logical directory
  ELSEIF NOT  lv_logpath IS INITIAL.
* 1.1 check if its 'DIR_SAPHOSTAGENT' 
    IF lv_logpath = 'DIR_SAPHOSTAGENT'.
* calculate directory for saphostagent
      IF ( sy-opsys(3) = 'WIN' ) 
OR ( sy-opsys(3) = 'Win' ).

CALL 'C_GETENV' ID 'NAME'  FIELD 'ProgramFiles'
ID 'VALUE' FIELD lv_path_prog_files.

        IF lv_path_prog_files IS INITIAL.
*     %ProgramFiles% not available. guess from windir
          CALL 'C_GETENV' ID 'NAME'  FIELD 'windir'
                          ID 'VALUE' FIELD lv_path_windows.
*     e.g. S:\WINDOWS ==> S:\Program Files
          CONCATENATE lv_path_windows(3) 'Program Files'
INTO lv_path_prog_files.
        ENDIF.

        CONCATENATE lv_path_prog_files '\SAP\hostctrl\'
INTO lv_pathname.
      ELSE.
*   on UNIX, the path is hard coded
        lv_pathname  = '/usr/sap/hostctrl/'.
      ENDIF.
    ELSE.
*   1.2 Else get physical path 
*    from FM RSPO_SAPGPARAM.
      CALL FUNCTION 'RSPO_SAPGPARAM'
        EXPORTING
          name   = lv_logpath
        IMPORTING
          value  = lv_pathname
        EXCEPTIONS
          error  = 1
          OTHERS = 2.
      IF sy-subrc <> 0.
*   1.3 Else get name from table USER_DIR
        SELECT  dirname FROM user_dir 
INTO TABLE lt_tab
          UP TO 1 ROWS
          WHERE aliass = lv_logpath.
        IF  sy-subrc IS NOT INITIAL .
*     1.4 All failed - throw error

          clear et_file_return.
          et_file_return-type = 'E'.
          et_file_return-message =
          'Please enter a valid logical directory path' .
          append et_file_return.
<? if(bgp) { ?>
      CALL FUNCTION 'ZODI_LOGMSG_ADD'
      EXPORTING
        et_file_return = et_file_return
        i_log_handle   = i_log_handle.

          write : / 'MSGID: ', sy-msgid.
          write : / 'MSGTYPE: ', et_file_return-type.
          write : / 'MESSAGE 1: ', et_file_return-message.
<?}?>
          exit.

        ELSE.
          READ TABLE lt_tab INTO ls_tab INDEX 1.
          IF sy-subrc eq 0.
            lv_pathname  = ls_tab-dirname.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
ENDIF.
*If Directory is 'DIR_HOME' then Append SLASH
IF lv_logpath = 'DIR_HOME'.
*--check OS
*---if WINDOWS then append BackSlash
IF ( sy-opsys(3) = 'WIN' ) 
OR ( sy-opsys(3) = 'Win' ).
  concatenate lv_pathname '\' into 
  lv_pathname.
ELSE.
*---If UNIX then append ForwardSlash
concatenate lv_pathname '/' into 
   lv_pathname.	
ENDIF.
ENDIF.
<%}%>
* lv_pathname is now having physical path
* Check it ends with a slash
  lv_len = strlen( lv_pathname ).
  lv_len = lv_len - 1.
  IF lv_pathname+lv_len(1) = lc_f_slash
     OR lv_pathname+lv_len(1) = lc_b_slash .
* Take this as physical path for further processing.
*Create a file and then write to it.
    CONCATENATE lv_pathname
iv_filename INTO lv_path.
  ELSE.
* Path is not ending with a slash.Throw error.

    clear et_file_return.
    et_file_return-type = 'E'.
    et_file_return-message =
    'The physical path is not ending with a slash' .
    append et_file_return.

<? if(bgp) { ?>
CALL FUNCTION 'ZODI_LOGMSG_ADD'
      EXPORTING
        et_file_return = et_file_return
        i_log_handle   = i_log_handle.

    write : / 'MSGID: ', sy-msgid.
    write : / 'MSGTYPE: ', et_file_return-type.
    write : / 'MESSAGE 1: ', et_file_return-message.
<?}?>
    exit.

  ENDIF.
**end of #changes_v_38


** Open dataset for all objects in FSMOUNT

<% if (!bUseFTP) { %>
******************************
**Delete the dataset
*******************************
OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE
     ENCODING DEFAULT.
IF sy-subrc EQ 0.
  DELETE DATASET lv_path.
ENDIF.


*********************************
*Appending the file ************
*********************************
OPEN DATASET lv_path FOR APPENDING
     IN TEXT MODE
     ENCODING DEFAULT.
IF sy-subrc NE 0.
	et_file_return-TYPE = gc_error.
	et_file_return-message = 
	'Error occurred when creating dataset'.
	Append et_file_return.
	et_file_return-message = 
	'or Invalid file path'. 
	Append et_file_return.
ELSE.
	DATA lines TYPE char10.
	DESCRIBE TABLE gt_result LINES lines.
	<?if(bgp){?>
	WRITE : / 'Number of rows : ' , lines,
	'fetched.'.
	<?}?>
ENDIF.

<%}%>
** End open dataset for all objects in FSMOUNT


<%if(bUseFTP){%>
******************************************
*  Authority Check
******************************************
  lv_path_authority = lv_path.
  <?if(bgp){?>
  authority_check 'ZODI*'.
  authority_check 'SAPLSTRF*'.
  <?} else {?>
  authority_check 'SAPLSLOG*'.
  authority_check 'SAPLZODI*'.
  authority_check 'SAPLSTRF*'.
  <?}?>
******************************************
<%}%>

**25-07-2014

<%if( type.equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION) ) {%>
IF IV_REQUID_H IS NOT INITIAL AND
IV_REQUID_L  = IV_REQUID_H.
CLEAR et_file_return.
et_file_return-type = 'I'.
et_file_return-message = 'No Incremental data to Extract'.
APPEND et_file_return.
EXIT.
ENDIF.

** Common abap code for Min Request Id INITIAL
** and not INITIAL for OHD delta extraction.

<% if(!bUseFTP){%>   
*DATA: lv_path TYPE string,
*      lv_mesg TYPE string.
***Start of FSMOUNT specific
*Open/delete output file
*  CONCATENATE iv_path iv_filename INTO lv_path.
  
**25-07-2014
**********************************************
*  Authority Check
**********************************************
  lv_path_authority = lv_path.
  <?if(bgp){?>
  authority_check 'ZODI*'.
  authority_check 'SAPLSTRF*'.
  <?} else {?>
  authority_check 'SAPLSLOG*'.
  authority_check 'SAPLZODI*'.
  authority_check 'SAPLSTRF*'.
  <?}?>
**********************************************

** Redundant and duplicate code removed

<?if(bgp){?>
DATA: NUM TYPE I.
DATA : lv_trunc TYPE i.
DATA ex TYPE REF TO cx_root.
CLEAR et_file_return-message.
NUM = STRLEN( lv_path ).
IF NUM > 50.
TRY .
et_file_return-message    = LV_path+lv_trunc(50).
WRITE: et_file_return-message.
lv_trunc = lv_trunc + 50.
et_file_return-message_v1 = LV_path+lv_trunc(50).
WRITE: et_file_return-message_v1.
lv_trunc = lv_trunc + 50.
et_file_return-message_v2 = LV_path+lv_trunc(50).
WRITE: et_file_return-message_v2.
lv_trunc = lv_trunc + 50.
et_file_return-message_v3 = LV_path+lv_trunc(50).
WRITE: et_file_return-message_v3.
lv_trunc = lv_trunc + 50.
CATCH CX_SY_RANGE_OUT_OF_BOUNDS INTO ex .
num = num - lv_trunc  .
et_file_return-MESSAGE_V3 = lv_path+lv_trunc(num).
WRITE: et_file_return-message_v3.
append et_file_return.
ENDTRY.
ELSE.
et_file_return-message = lv_path.
WRITE: et_file_return-message.
ENDIF.
<?}else{?>
                et_file_return-message =
                lv_path.
    APPEND et_file_return.    
<?}?>


<?if(bgp){?>
*CONCATENATE 'MSGTY:' et_file_return-type INTO
*lv_string.
*WRITE: lv_string.
*clear lv_string.
**CONCATENATE 'MESSAGE:' et_file_return-message INTO
*CONCATENATE 'MESSAGE:' lv_path INTO
*lv_string.
*WRITE: lv_string.
*clear lv_string.

CALL FUNCTION 'ZODI_LOGMSG_ADD'
EXPORTING
ET_FILE_RETURN       = et_file_return
I_LOG_HANDLE         = i_log_handle.
<?}?>
**25-07-2014
*    EXIT.
*  ENDIF.
***End of FSMOUNT specific
<%}/*End of if(!bUseFTP)*/%>

** End of Common abap code for Min Request Id INITIAL
** and not INITIAL for OHD delta extraction.

IF IV_REQUID_H is initial.

<% }if( type.equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION) ) {
if(!bUseFTP){%>   
OPEN CURSOR WITH HOLD lv_dbcur FOR
<% }%> 
SELECT <%=bwRef.getColList("\n", "[COL_NAME]", "\n", "\n", "")%>
FROM  <%=bwRef.getTable("", "[TABLE_NAME]", "", "")%>
<%if(bUseFTP) {%>
INTO TABLE it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>
<% }%> 
<%=bwRef.getFilterDetails("WHERE ", " [FILTER_STMT] ", " \nAND\n", "")%>.  
<?if(sSapBwVersion.equalsIgnoreCase("700")) {?>     
ELSE.
<%if( !bUseFTP){%>            
OPEN CURSOR WITH HOLD lv_dbcur FOR
<% }%>    
SELECT <%=bwRef.getColList("\n", "[COL_NAME]", "\n", "\n", "")%>
FROM <%=bwRef.getTable("", "[TABLE_NAME]", "", "")%>
<%if(bUseFTP){%>   
INTO TABLE it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%> 
<% }%> 
**Added block for BW 700 issue**
<% if (odiRef.getSrcColList("", "|[COL_NAME]|", "|[COL_NAME]|", "", "").indexOf("|OHREQUID|") > -1) { %>  
WHERE <%=bwRef.getFilterDetails("", " [FILTER_STMT] ", " \nAND\n", "\nAND\n")%>
OHREQUID GT IV_REQUID_L
AND OHREQUID LE IV_REQUID_H
  <%}else if(bwRef.isFilter == true) {%>  
WHERE <%=bwRef.getFilterDetails("", " [FILTER_STMT] ", " \nAND\n", ".")%>
<%}%>.
**Completed block for BW 700 issue**
************************************
**Code for getting record count
************************************
<? if(bgp){ ?>
************************************************
*Appending the et_file_return to Application log
************************************************
describe TABLE it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%> lines lv_rowCount.
lv_rowCountChar = lv_rowCount.
et_file_return-type = 'S'.
et_file_return-id = 'CL'.
et_file_return-number = '000'.
et_file_return-message = 'Number of records fetched : '.
concatenate et_file_return-message lv_rowCountChar 
INTO et_file_return-message.

**************************************************
*Appending the et_file_return to Application log
**************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>     

<?}?>   
ENDIF.
<%if( !bUseFTP){%>   
 DO.
*Check for the counter, only for first batch
*process new line is required...
lv_cnt  = lv_cnt  + 1.
REFRESH : it_final ,  it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%> .
FETCH NEXT CURSOR lv_dbcur

*APPENDING CORRESPONDING FIELDS OF
APPENDING
TABLE it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>
PACKAGE SIZE iv_fetch_batch_size.
IF it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%> IS INITIAL.
CLEAR SY-SUBRC.
EXIT.
ENDIF.
<% }%>    
it_final = it_<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>.
<% }else if ( type.equals(OdiSAPBWExtractMapping.ODSO) || type.equals(OdiSAPBWExtractMapping.WODSO)){%>
lv_ods = '<%=bwRef.getTable("", "[ODI_TABLE_NAME]", "", "")%>'.
lv_tabname = '<%=bwRef.getTable("", "[TABLE_NAME]", "", "")%>'.
CONCATENATE <%=bwRef.getColList("", " '[COL_NAME]' ", " \n", " \n", "")%>
  INTO lv_fields
  SEPARATED BY space.
*****End of Addition
IF iv_requid_h IS INITIAL.
OPEN CURSOR WITH HOLD lv_dbcur FOR
**if full extract
*Select query to fetch the data
SELECT
<%=bwRef.getColList("", "[COL_NAME]", " \n", " \n", "")%>  
FROM <%=bwRef.getTable("", "[TABLE_NAME]", " ", " \n")%>
<%=bwRef.getFilterDetails("\n WHERE ", "\u000A [FILTER_STMT] ", " \nAND\n", "")%>.     
ELSE.
*Delta Extraction
<% if( type.equals(OdiSAPBWExtractMapping.WODSO)){ %>
**For write optimized DSO
SELECT rnr FROM rsreqicods
INTO TABLE it_rsreqicods
WHERE rnsidlast GT iv_requid_l
AND rnsidlast LE iv_requid_h
and tabname = lv_ods.
if it_rsreqicods is initial.
exit.
endif.
OPEN CURSOR WITH HOLD lv_dbcur FOR
SELECT (lv_fields)
FROM (lv_tabname)
*INTO TABLE it_final_t
FOR ALL ENTRIES IN it_rsreqicods
WHERE
REQUEST = it_rsreqicods-odsrnr
<%=bwRef.getFilterDetails("\n AND ", "\u000A [FILTER_STMT] ", " \nAND\n", ".")%>
<%if(bwRef.isFilter != true){%>.<%}%> 
*CLEAR it_final[].
*it_final = it_final_t.
<% }%>
<% if( type.equals(OdiSAPBWExtractMapping.ODSO)){%>
SELECT odsrnr FROM rsreqicods
INTO TABLE it_rsreqicods
*FOR ALL ENTRIES IN it_rsbkrequest
*WHERE rnsidlast = it_rsbkrequest-requid.
WHERE rnsidlast GT iv_requid_l
AND rnsidlast LE iv_requid_h
and tabname = lv_ods.
if it_rsreqicods is not initial.
delete it_rsreqicods 
where odsrnr is initial.
else.
exit.
endif.
CALL FUNCTION 'RSAWB_MAINTAIN_DTA'
EXPORTING
i_method       = 'GET'
i_dta          = lv_ods
IMPORTING
e_s_odstabname = l_s_odstabname.
c_log_tab = l_s_odstabname-c_log.
lv_delta = 'X'.

OPEN CURSOR WITH HOLD lv_dbcur FOR

* Fix for ODS delta extraction

SELECT <%=bwRef.getColList("", "[COL_NAME]", " \n", " \n", "")%>
FROM (c_log_tab)
FOR ALL ENTRIES IN it_rsreqicods
WHERE request = it_rsreqicods-odsrnr
<%=bwRef.getFilterDetails("\n AND ", "\u000A [FILTER_STMT] ", " \nAND\n", " ")%>
.
<% }%>
endif.
  DO.
*Check for the counter, only for first batch
*process new line is required...
lv_cnt  = lv_cnt  + 1.
REFRESH it_final.
FETCH NEXT CURSOR lv_dbcur

*APPENDING CORRESPONDING FIELDS OF 
APPENDING
TABLE it_final
PACKAGE SIZE iv_fetch_batch_size.
IF it_final IS INITIAL.
CLEAR SY-SUBRC.
EXIT.
ENDIF.
<% if( type.equals(OdiSAPBWExtractMapping.ODSO)){%>
IF lv_delta = 'X'.
*****if the active data has to be taken
**List of PK Cols    
sort it_final by <%=bwRef.getTable(" \n", "[PK_COL_NAME] ", " \n", ".\n")%>
delete adjacent duplicates 
from it_final comparing
<%=bwRef.getTable(" \n", "[PK_COL_NAME] ", " \n", ".\n")%>

SELECT (lv_fields)
FROM (lv_tabname)
INTO TABLE it_final_t
FOR ALL ENTRIES IN it_final
WHERE 
<%=bwRef.getTable("", " [COL_NAME] = it_final-[PK_COL_NAME] ", " \nAND\n", ".\n")%>
CLEAR it_final[].
it_final = it_final_t.
ENDIF.
<% }%>
IF it_final IS INITIAL.
  EXIT.
ENDIF.
<%}else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) ) {%>
* Select hIERARCHY DATA
CALL FUNCTION 'RSSH_GET_HIERARCHIES_OF_IOBJNM'
EXPORTING
   I_OBJVERS = RS_C_OBJVERS-ACTIVE
   I_IOBJNM = '<%=bwRef.getIOBHier("", "[BW_IOBJ]", "", ".")%>' 
   I_LANGU = sy-langu
*I_ASSO_CHABASNM = RS_C_TRUE
IMPORTING
E_T_RSHIEDIR = IT_HIER_LIST.
*E_T_RSHIEDIRTXT = IT_HIER_LIST.

*if  iv_hier_vers is initial.
*clear iv_hier_vers.
*endif.
* Case 1: Hierarchy name and Version both are passed
IF iv_hiername IS not INITIAL and iv_hier_vers IS NOT INITIAL.
	read table it_hier_list into wa_hier_list with key 
	hienm = iv_hiername version = iv_hier_vers.
	wa_hier-HIENM  = wa_hier_list-hienm.
	wa_hier-version = wa_hier_list-version.
	wa_hier-hieid  = wa_hier_list-hieid.
	APPEND WA_HIER TO IT_HIER.
	CLEAR : WA_HIER.	
	
* Case 2: only Hierarchy name is passed.	
ELSEIF iv_hiername IS NOT INITIAL and iv_hier_vers IS INITIAL.
  LOOP AT it_HIER_LIST into wa_HIER_LIST
       where hienm = iv_hiername.
		  wa_hier-HIENM  = WA_HIER_LIST-HIENM.
		  wa_hier-version = wa_hier_list-version.
		  wa_hier-hieid  = wa_hier_list-hieid.
		  APPEND WA_HIER TO IT_HIER.
		  CLEAR : WA_HIER , WA_HIER_LIST.
  ENDLOOP.

* Case 3: Hierarchy name not passed only version is passed.	
ELSEIF iv_hiername IS INITIAL AND iv_hier_vers IS NOT INITIAL.
	LOOP AT it_HIER_LIST into 
	wa_HIER_LIST where version = iv_hier_vers.
	wa_hier-HIENM  = WA_HIER_LIST-HIENM.
	wa_hier-version = wa_hier_list-version.
	wa_hier-hieid  = wa_hier_list-hieid.
	APPEND WA_HIER TO IT_HIER.
	CLEAR : WA_HIER , WA_HIER_LIST.
	ENDLOOP.

* Case 4: niether Hierarchy name nor version is passed.
ELSE.
	LOOP AT it_HIER_LIST into wa_HIER_LIST.
	wa_hier-HIENM  = WA_HIER_LIST-HIENM.
	wa_hier-version = wa_hier_list-version.
	wa_hier-hieid  = wa_hier_list-hieid.
	APPEND WA_HIER TO IT_HIER.
	CLEAR : WA_HIER , WA_HIER_LIST.
	ENDLOOP.	
endif.
loop at it_hier into wa_hier.
<%if (odiRef.getOption("SQL_BASED_EXTRACTION").equals("1") && !bUseFTP) {/*If SQL based extraction*/%>
OPEN CURSOR WITH HOLD lv_dbcur FOR
SELECT <%=bwRef.getColList("\n", "[COL_NAME]", "\n", "", "SQL_SELECT_COL")%>
FROM <%=bwRef.getIOBHier("", "[BW_IOBJ_TAB]", "", ",\n")%>
where objvers = 'A' AND
*DATETO LE IV_DATETO
hieid = wa_hier-hieid.
*version = IV_HIER_VERS.
DO.
**Check for the counter, only for first batch
**process new line is required...
lv_cnt  = lv_cnt  + 1.
REFRESH: it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "")%>.
FETCH NEXT CURSOR lv_dbcur
APPENDING CORRESPONDING FIELDS OF
TABLE it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "")%>
PACKAGE SIZE iv_fetch_batch_size.
IF sy-subrc <> 0.
    EXIT.
  ENDIF.
IF it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "")%> IS INITIAL.
CLEAR SY-SUBRC.
EXIT.
ENDIF.
<%}else {/*else start of FM based code*/%>
lv_cnt = lv_cnt + 1.
CLEAR g_s_hiesel.
g_s_hiesel-objvers = 'A'.
g_s_hiesel-hienm = wa_hier-hienm.
*--&& Changes to pass correct HIER VERSION
* g_s_hiesel-version = IV_HIER_VERS.
g_s_hiesel-version = wa_hier-version.
*--&& End ofChanges to pass correct HIER VERSION
g_s_hiesel-iobjnm = '<%=bwRef.getIOBHier("", "[BW_IOBJ]", "", ",\n")%>'.
g_s_hiesel-dateto = IV_HIER_DATETO.

CALL FUNCTION 'RSNDI_SHIE_STRUCTURE_GET'
EXPORTING
i_s_hiesel = g_s_hiesel
i_no_nodenm_table = 'X'
*IMPORTING
*e_s_hiedir = g_s_hiedir
*e_subrc = g_subrc
TABLES
*e_t_hiedirt = g_t_hiedirt
e_t_hierstruc = it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>
e_t_hierintvl = it_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>.
<%}/*end of FM based code*/%>

LOOP AT it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%> INTO WA_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "\n")%>.
**wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>-RSHIENM = wa_hier-hienm.
<%//Check, whether any mapping expression uses the hierarchy VERSION column:
if (map.isColMapped("VERSION")) {%>
wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>-VERSION = wa_hier-version.
<%}%>
<%=bwRef.getColList("\n", "wa_[BW_IOBHIER]-[COL_CX_NAME] = WA_H[BW_IOBHIER]-[COL_NAME]", ".\n", ".\n", "")%>
wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>-RSHIENM = wa_hier-hienm.
**** Start of change by RAJENDRA
Read Table it_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%> into wa_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>     
with key HIEID = WA_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>-HIEID
NODEID = WA_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>-NODEID.
IF sy-subrc = 0.
<%//Check, whether any mapping expression uses the hierarchy LEAFFROM column:
if (map.isColMapped("LEAFFROM")) {%>
wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>-LEAFFROM = WA_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "")%>-LEAFFROM.
<%}//Check, whether any mapping expression uses the hierarchy LEAFTO column:
if (map.isColMapped("LEAFTO")) {%>
wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ",\n")%>-LEAFTO = WA_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", "")%>-LEAFTO.
<%}%>
ENDIF.
**** End of change by RAJENDRA
Append  wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%> to it_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>.
clear: WA_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>, wa_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>.
Clear wa_J<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>.
ENDLOOP.

it_final = it_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>.
<% if(!bUseFTP) {%>
REFRESH : it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>, it_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>.
<%}%>
<%/***************Info Cube specifice code ********************/%>
<%}else if( type.equals(OdiSAPBWExtractMapping.INFOCUBE) ) {%>
lv_infocube = <%=bwRef.getCubeDetails("'", "[BW_CUBE]", "", "'", "")%>.
CLEAR g_th_sfc.
<%=bwRef.getCubeDetails("\n", "CLEAR g_s_sfc.\n g_s_sfc-chanm = '[BW_IOBJ]'.\n g_s_sfc-chaalias = '[BW_IOBJ]'.\n g_s_sfc-orderby  = 0.\n INSERT g_s_sfc INTO TABLE g_th_sfc.\n", "", "\n", "")%>
*********------Key Figures
CLEAR g_th_sfk.
<%=bwRef.getCubeDetails("\n", "CLEAR g_s_sfk.\n g_s_sfk-kyfnm = '[BW_KF_NAME]'.\n g_s_sfk-kyfalias = '[BW_KF_NAME]'.\n g_s_sfk-aggr = 'SUM'.\n INSERT g_s_sfk INTO TABLE g_th_sfk\n", ".", ".\n", "")%>
* Filter condition- IOPK
<%=bwRef.getFilterDetails("\nCLEAR g_t_range.\n", "CLEAR g_s_range.\n g_s_range-chanm = '[FILTER_IOPK_FIELD]' .\ng_s_range-sign = 'I'.\n g_s_range-compop = '[FILTER_IOPK_COND]'.\ng_s_range-low = [FILTER_IOPK_VALUE].\nAPPEND g_s_range TO g_t_range", ".\n", ".")%>
IF IV_REQUID_H is not initial.
if IV_REQUID_L EQ IV_REQUID_H.
  g_s_range-chanm = '0REQUID' .
  g_s_range-sign = 'I' .
  g_s_range-compop = 'EQ'.
  g_s_range-low =  'DUMMY'.
  APPEND g_s_range TO g_t_range.

else.
select REQUID from /BI0/SREQUID
  into table it_reqsid
  where sid GT IV_REQUID_L
    and sid LE IV_REQUID_H.

if it_reqsid is not initial.
  loop at it_reqsid into wa_reqsid.
    g_s_range-chanm = '0REQUID' .
    g_s_range-sign = 'I' .
    g_s_range-compop = 'EQ'.
    g_s_range-low =  wa_reqsid-requid.
    APPEND g_s_range TO g_t_range.
    CLEAR: g_s_range,wa_reqsid .
  endloop.
    g_s_range-chanm = '0REQUID' .
    g_s_range-sign = 'I' .
    g_s_range-compop = 'EQ'.
    g_s_range-low =  'DUMMY'.
    APPEND g_s_range TO g_t_range.
else.
    g_s_range-chanm = '0REQUID' .
    g_s_range-sign = 'I' .
    g_s_range-compop = 'EQ'.
    g_s_range-low =  'DUMMY'.
    APPEND g_s_range TO g_t_range.
endif.
endif.
ENDIF.
** End of Delta code
  g_end_of_data = ' '.
  g_first_call  = 'X'.

WHILE ( g_end_of_data  NE 'X'). 
**25-07-2014
<%if(!bUseFTP){%>
IF it_final is INITIAL.
lv_cnt = 1.
ELSE.
lv_cnt = lv_cnt + 1.
ENDIF.
<%}%>
**25-07-2014
<%if(bUseFTP){%>
                iv_fetch_batch_size = '999999999'.
<% }%>
*WHILE g_end_of_data EQ rs_c_false.
  CALL FUNCTION 'RSDRI_INFOPROV_READ'
    EXPORTING
      i_infoprov = <%=bwRef.getCubeDetails("'", "[BW_CUBE]", "", "'","")%>
      i_th_sfc = g_th_sfc
      i_th_sfk = g_th_sfk
      i_t_range = g_t_range
*               i_rollup_only = 'X'
      i_save_in_table = rs_c_false
      i_save_in_file = rs_c_false
      i_packagesize = iv_fetch_batch_size
      i_authority_check = rsdrc_c_authchk-read
    IMPORTING
      e_t_data = g_t_data
      e_end_of_data = g_end_of_data
    CHANGING
      c_first_call = g_first_call
    EXCEPTIONS
      illegal_input = 1
      illegal_input_sfc = 2
      illegal_input_sfk = 3
      illegal_input_range    = 4
      illegal_input_tablesel = 5
      no_authorization       = 6
      illegal_download       = 8
      illegal_tablename      = 9
      OTHERS = 11.
*append lines of g_t_data1 to g_t_data.
APPEND LINES OF g_t_data TO it_final.
clear g_t_data.

<%if(bUseFTP){%>
*ENDWHILE.
ENDWHILE.
clear g_end_of_data.
<% }%>
*append lines of g_t_data1 to g_t_data.
<%if(! bUseFTP){%>
g_first_call = ' '.
<% }%>
* Filter condition- KF
                <%=bwRef.getFilterDetails("\nLOOP AT g_t_data INTO g_s_data.\n IF", "\n g_s_data-[FILTER_KF_FIELD]  [FILTER_KF_COND] \n[FILTER_KF_VALUE]", " \n AND \n", ".\n continue.\n else.\n DELETE TABLE g_t_data FROM g_s_data.\nENDIF.\nclear g_s_data.\n ENDLOOP.\n")%>
IF sy-subrc NE 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
*APPEND LINES OF g_t_data TO it_final.
<%/*************************INFOOBJECT specific code********************************/%>
<%}else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT) ) {%>
<%if(!bUseFTP){%>
OPEN CURSOR WITH HOLD lv_dbcur FOR
<% }%>
SELECT  
<%=bwRef.getIOBJ("", "[BW_IOBJ_COL] as [BW_CX_IOBJ_COL]", " \n", "\n ", "")%>
FROM  <%=bwRef.getIOBJ("", "[BW_IOBJ_TAB]", "", " \n ", "")%>
<%if(bUseFTP){%>
INTO CORRESPONDING 
FIELDS OF TABLE 
it_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", " \n ", "")%>
<%}%>
* Where OBJVERS = 'A'.
<%=bwRef.getIOBJ(" WHERE ", " [FILTER_STMT] ", " AND\n ", " \n ", "")%>.
* Below line only if no Text 
* Table field selected  
 <%if( !bUseFTP) {%>
lv_fetch_batch_size = iv_fetch_batch_size.
lv_temp_row_count = iv_max_row_cnt.
DO.
*Check for the counter, only for first batch
*process new line is required...
lv_cnt  = lv_cnt  + 1.
IF  iv_max_row_cnt  IS NOT INITIAL.
IF lv_temp_row_count EQ 0.
  EXIT.
ENDIF.
if ( lv_temp_row_count < lv_fetch_batch_size ).
lv_fetch_batch_size = lv_temp_row_count.
lv_temp_row_count = 0.
else.
lv_temp_row_count = lv_temp_row_count - lv_fetch_batch_size.
ENDIF.
ENDIF.
REFRESH : it_final ,  it_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", " \n ", "")%>.
FETCH NEXT CURSOR lv_dbcur
APPENDING CORRESPONDING FIELDS OF
TABLE it_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", " \n ", "")%>
PACKAGE SIZE lv_fetch_batch_size.
IF it_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", " \n ", "")%> IS INITIAL.
CLEAR SY-SUBRC.
EXIT.
ENDIF.
<%}%>
*****************************************
*Number of Record fetched for InfoObject
*****************************************
<? if(bgp){ ?>
************************************************
*Appending the et_file_return to Application log
************************************************
describe TABLE it_m<%=bwRef.getIOBJ("", "[BW_IOBJ]", "", " \n ", "")%> lines lv_rowCount.
lv_rowCountChar = lv_rowCount.
et_file_return-type = 'S'.
et_file_return-id = 'CL'.
et_file_return-number = '000'.
et_file_return-message = 'Number of records fetched : '.
concatenate et_file_return-message lv_rowCountChar 
INTO et_file_return-message.

**************************************************
*Appending the et_file_return to Application log
**************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
*Select of IOBJ Text Table 
<%=bwRef.getIOBJ(" SELECT  ", "true", "[BW_IOBJ_WJ_TXT_COL] as [BW_CX_IOBJ_WJ_TXT_COL]", " \n ", "\n ", "")%>
<%=bwRef.getIOBJ(" FROM ", "true", "[BW_IOBJ_TXT_TAB]", "", " \n INTO CORRESPONDING \n FIELDS OF TABLE \n", "")%>
<%=bwRef.getIOBJ("it_txt_", "true", "[BW_IOBJ]", "", " \n for all entries in", "")%>
<%=bwRef.getIOBJ("it_m", "true", "[BW_IOBJ]", "", " \n ", "")%>
<%=bwRef.getIOBJ(" WHERE ", "true", "[BW_JOIN_IOBJ_TXT_COL] = it_m[BW_IOBJ]-[BW_CX_JOIN_IOBJ_TXT_COL] ", "AND\n", " \n ", "")%>
<%=bwRef.getIOBJ(" ", "true", " AND [FILTER_IOBJ_TXT_STMT] ", " \n ", " \n ", "")%>.
<%=bwRef.getIOBJ("It_final = it_m", "false", "[BW_IOBJ]", "", " .\n ", "")%>

*Below lines only if 
*Text Table fields selected
<%=bwRef.getIOBJ("", "true", "loop at it_m[BW_IOBJ] into wa_m[BW_IOBJ].", "", " \n ", "")%>
*IOBJ field
<%=bwRef.getIOBJ("", "true", "wa_[BW_IOBJ]-[BW_CX_IOBJ_COL] \n = wa_m[BW_IOBJ]-[BW_CX_IOBJ_COL] .", " \n ", " \n ", "")%>
<%=bwRef.getIOBJ("loop at ", "true", "it_txt_[BW_IOBJ] into \n wa_txt_[BW_IOBJ]","", " \n ", "")%>
<%=bwRef.getIOBJ(" WHERE ", "true", "[BW_CX_JOIN_IOBJ_TXT_COL] = wa_m[BW_IOBJ]-[BW_CX_JOIN_IOBJ_TXT_COL] ", "AND\n", " \n ", "")%>.
<%=bwRef.getIOBJ("", "true", "wa_[BW_IOBJ]-[BW_CX_IOBJ_TXT_COL]  \n = wa_txt_[BW_IOBJ]-[BW_CX_IOBJ_TXT_COL] .", " \n ", " \n ", "")%>
<%=bwRef.getIOBJ("", "true", "APPEND wa_[BW_IOBJ]  \n TO it_[BW_IOBJ] .", "", " \n ", "")%>
<%=bwRef.getIOBJ("", "true", "CLEAR: wa_[BW_IOBJ] . \n endloop.", "", " \n ", "")%>
<%=bwRef.getIOBJ("", "true", "if wa_[BW_IOBJ] \n  is not initial.", "", " \n ", "")%>
<%=bwRef.getIOBJ("", "true", "APPEND wa_[BW_IOBJ] \n TO it_[BW_IOBJ] .\n endif.", "", " \n ", "")%>
<%=bwRef.getIOBJ("", "true", "CLEAR: wa_[BW_IOBJ] , wa_txt_[BW_IOBJ]. \n endloop.", "", " \n ", "")%>
<%=bwRef.getIOBJ("", "true", "It_final = it_[BW_IOBJ].", "", " \n ", "")%>
<%}else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT) || type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER_TXT)) {
if(! bUseFTP){%>
OPEN CURSOR WITH HOLD lv_dbcur FOR
<%}%>
*Select of IOBJ Text Table
SELECT  
<%=bwRef.getIOBJTXT("", "[BW_IOBJ_TXT_COL] as [BW_CX_IOBJ_TXT_COL]", " \n", "\n ", "")%>
FROM  <%=bwRef.getIOBJTXT("", "[BW_IOBJ_TXT_TAB]", "", " \n ", "")%>
<%if( bUseFTP) {%>
INTO CORRESPONDING FIELDS OF TABLE 
it_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", "\n ", "")%>
<% }%>
<%=bwRef.getIOBJTXT(" WHERE ", " [FILTER_IOBJ_TXT_STMT] ", " \n AND\n ", "\n ", "")%>.
<%if( !bUseFTP){%>
DO.
*Check for the counter, only for first batch
*process new line is required...
lv_cnt  = lv_cnt  + 1.
REFRESH : it_final , it_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", "\n ", "")%>.
FETCH NEXT CURSOR lv_dbcur
APPENDING CORRESPONDING FIELDS OF
TABLE it_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", "\n ", "")%>
PACKAGE SIZE iv_fetch_batch_size.
IF it_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", "\n ", "")%> IS INITIAL.
CLEAR SY-SUBRC.
EXIT.
ENDIF.
<% }%>
it_final = it_t<%=bwRef.getIOBJTXT("", "[BW_IOBJTXT]", "", ".\n ", "")%>

<% }else if( type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN) ) {%>
** Filter Condition
** (Same as Cube Data Extraction)
 CLEAR g_th_sfc.
<%=bwRef.getCubeDetails("\n", "CLEAR g_s_sfc.\n g_s_sfc-chanm = '[BW_IOBJ]'.\n g_s_sfc-chaalias = '[BW_IOBJ]'.\n g_s_sfc-orderby  = 0.\n INSERT g_s_sfc INTO TABLE g_th_sfc.\n", "", "\n", "")%>
*********_----------Key Figures

CLEAR g_th_sfk.
<%=bwRef.getCubeDetails("\n", "CLEAR g_s_sfk.\n g_s_sfk-kyfnm = '[BW_KF_NAME]'.\n g_s_sfk-kyfalias = '[BW_KF_NAME]'.\n g_s_sfk-aggr = 'SUM'.\n INSERT g_s_sfk INTO TABLE g_th_sfk\n", ".", ".\n","")%>

* Filter condition- IOPK
<%=bwRef.getFilterDetails(".\nCLEAR g_t_range. \n", "CLEAR g_s_range.\n g_s_range-chanm = '[FILTER_IOPK_FIELD]' .\ng_s_range-sign = 'I'.\n g_s_range-compop = '[FILTER_IOPK_COND]'.\n g_s_range-low =\u000A [FILTER_IOPK_VALUE]. \n APPEND g_s_range TO g_t_range ", "", ".")%>
IF IV_REQUID_H is not initial.
if IV_REQUID_L EQ IV_REQUID_H.
  g_s_range-chanm = '0REQUID' .
  g_s_range-sign = 'I' .
  g_s_range-compop = 'EQ'.
  g_s_range-low =  'DUMMY'.
  APPEND g_s_range TO g_t_range.
else.
*if it_rsbkrequest is not initial.
select REQUID from /BI0/SREQUID
  into table it_reqsid
*  for all entries in it_rsbkrequest
  where sid GT IV_REQUID_L
    and sid LE IV_REQUID_H.
if it_reqsid is not initial.
  loop at it_reqsid into wa_reqsid.
    g_s_range-chanm = '0REQUID' .
    g_s_range-sign = 'I' .
    g_s_range-compop = 'EQ'.
    g_s_range-low =  wa_reqsid-requid.
    APPEND g_s_range TO g_t_range.
    CLEAR: g_s_range,wa_reqsid .
  endloop.
    g_s_range-chanm = '0REQUID' .
    g_s_range-sign = 'I' .
    g_s_range-compop = 'EQ'.
    g_s_range-low =  'DUMMY'.
    APPEND g_s_range TO g_t_range.
else.
    g_s_range-chanm = '0REQUID' .
    g_s_range-sign = 'I' .
    g_s_range-compop = 'EQ'.
    g_s_range-low =  'DUMMY'.
    APPEND g_s_range TO g_t_range.
endif.
endif.
ENDIF.
** End of Delta code
  g_end_of_data = ''.
  g_first_call  = 'X'. 
  
  
WHILE ( g_end_of_data  NE 'X'). 
<%if(bUseFTP){%>
                iv_fetch_batch_size = '999999999'.
<% }%>
*WHILE g_end_of_data EQ rs_c_false.
  CALL FUNCTION 'RSDRI_INFOPROV_READ'
    EXPORTING
      i_infoprov = <%=bwRef.getCubeDetails("'", "[BW_CUBE]", "", "'", "")%>
      i_th_sfc = g_th_sfc
      i_th_sfk = g_th_sfk
      i_t_range = g_t_range
*               i_rollup_only = 'X'
      i_save_in_table = rs_c_false
      i_save_in_file = rs_c_false
      i_packagesize = iv_fetch_batch_size
      i_authority_check = rsdrc_c_authchk-read
    IMPORTING
      e_t_data = g_t_data
      e_end_of_data = g_end_of_data
    CHANGING
      c_first_call = g_first_call
    EXCEPTIONS
      illegal_input = 1
      illegal_input_sfc = 2
      illegal_input_sfk = 3
      illegal_input_range    = 4
      illegal_input_tablesel = 5
      no_authorization       = 6
      illegal_download       = 8
      illegal_tablename      = 9
      OTHERS = 11.
                  g_first_call = ''.
  refresh : it_cube.
                                  
APPEND LINES OF g_t_data TO it_cube.
clear g_t_data.
<%if(bUseFTP){%>
*ENDWHILE.
ENDWHILE.
clear g_end_of_data.
<% }%>
* Filter condition- KF
<%=bwRef.getFilterDetails("\nLOOP AT g_t_data INTO g_s_data.\n IF", "\n g_s_data-[FILTER_KF_FIELD]  [FILTER_KF_COND] \n[FILTER_KF_VALUE]", " \n AND \n", ".\n continue.\n else.\n DELETE TABLE g_t_data FROM g_s_data.\nENDIF.\nclear g_s_data.\n ENDLOOP.\n")%>
<%}%>
<%if(bUseFTP){%>
                iv_fetch_batch_size = '999999999'.
<% }%>
**Start of IOBJ Field Ordering
lv_cube = 'X'.
<%if( type.equals(OdiSAPBWExtractMapping.OPEN_HUB_DESTINATION) ) {%>
<%if(bwRef.getHierOhdOrder().length() < 26) {%>   
lv_ORDER = <%=bwRef.getHierOhdOrder()%>.
<%} else {%>   
<% } %>
<% }else if( type.equals(OdiSAPBWExtractMapping.ODSO) || type.equals(OdiSAPBWExtractMapping.WODSO) ) {%>
<%if(bwRef.getODSOrder().length() < 26) {%>
*lv_ORDER = <%=bwRef.getODSOrder()%>.
<%} else {%>
*CONCATENATE ....
*INTO lv_ORDER.
<% } %> 
*lv_ORDER1 = lv_ORDER.
<% }else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) ) {%>
<%if(bwRef.getHierOhdOrder().length() < 26) {%>
<%} else {%>
<%}%> 
*lv_ORDER1 = lv_ORDER.
<% }else if( type.equals(OdiSAPBWExtractMapping.INFOCUBE) ) {%>
<%if(bwRef.getOrderList().length() < 26) {%>
*lv_ORDER = <%=bwRef.getOrderList()%>.
<%} else {%>
*CONCATENATE .......
*INTO lv_ORDER.
<% } %> 
*lv_ORDER1 = lv_ORDER.
<% }else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT) ) {%>
<%if(bwRef.getInfoObjectOrder().length() < 26) {%>
**lv_ORDER .....
<%} else {%>
<% } %> 
*lv_ORDER1 = lv_ORDER.
<% }else if( type.equals(OdiSAPBWExtractMapping.INFOOBJECT_TXT) || type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER_TXT)) {%>
*lv_ORDER1 = lv_ORDER.
<% }else if( type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN) ) {%>
<%if(bwRef.getOrderList().length() < 26) {%>
*lv_ORDER = .....
<%} else {%>
*CONCATENATE ...
*INTO lv_ORDER.
<% } %> 
*lv_ORDER1 = lv_ORDER.
<% }

if(type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN)){%>
*********************************************
*** InfoObject Data extraction
********************************************
* Define IOBJ Fields (M and T Table Fields)
<%=
/*
Arguments:
"start"
"cond"
"scond"
"pstart" 
"pattern", 
"spattern", 
"pend", 
"seperator", 
"end"
*/
bwRef.getCubeIOBJoin("\n ", 
                     "", 
                     "true", 
                     "\nTYPES: BEGIN OF ty_[BW_IOBJ], \n", 
                     "[BW_CX_IOBJ_WJ_COL] TYPE \n[BW_IOBJ_TAB]-[BW_IOBJ_WJ_COL],\n", 
                     "[BW_CX_IOBJ_TXT_COL] TYPE \n[BW_IOBJ_TXT_TAB]-[BW_IOBJ_TXT_COL],", 
                     "\n END OF ty_[BW_IOBJ].", 
                     " \n ", 
                     "\n", "")
%>
* IOBJ
<%=bwRef.getCubeIOBJoin("", "DATA wa_[BW_IOBJ] \n  TYPE ty_[BW_IOBJ].", "", "\n", "")%>
<%=bwRef.getCubeIOBJoin("", "DATA it_[BW_IOBJ] \n TYPE TABLE OF ty_[BW_IOBJ].", "", "\n", "")%>

* Declare IOBJ selected and Joined Fields
<%=
/*
Arguments:
"start"
"cond"
"scond"
"pstart" 
"pattern", 
"spattern", 
"pend", 
"seperator", 
"end"
*/
bwRef.getCubeIOBJoin("\n ", 
                     "", 
                     "", 
                     "\nTYPES: BEGIN OF ty_m[BW_IOBJ], \n", 
                     "[BW_CX_IOBJ_WJ_COL] TYPE \n[BW_IOBJ_TAB]-[BW_IOBJ_WJ_COL],\n", 
                     "", 
                     "\n END OF ty_m[BW_IOBJ].", 
                     " \n ", 
                     "\n", "")
%>

<%=bwRef.getCubeIOBJoin("", "\nDATA wa_m[BW_IOBJ] \nTYPE ty_m[BW_IOBJ].", " \n ", "\n", "")%>
<%=bwRef.getCubeIOBJoin("", "\nDATA it_m[BW_IOBJ] \n TYPE TABLE OF ty_m[BW_IOBJ].", "\n", "\n", "")%>

* List of Text Table fields along with join 
<%if(! bUseFTP){%>
refresh : <%=bwRef.getCubeIOBJoin("", "it_m[BW_IOBJ]", "", "", "")%> , <%=bwRef.getCubeIOBJoin("", "it_[BW_IOBJ]", "", "", "")%>.
<% }%>
* field
<%=
/*
Arguments:
"start"
"cond"
"scond"
"pstart" 
"pattern", 
"spattern", 
"pend", 
"seperator", 
"end"
*/
bwRef.getCubeIOBJoin("\n ", 
                     "true", 
                     "", 
                     "\nTYPES: BEGIN OF \nty_txt_[BW_IOBJ], \n", 
                     "[BW_CX_IOBJ_WJ_TXT_COL] \nTYPE [BW_IOBJ_TXT_TAB]-[BW_IOBJ_WJ_TXT_COL],", 
                     "", 
                     "\n END OF ty_txt_[BW_IOBJ].", 
                     " \n ", 
                     "\n", "")
%>
<%=bwRef.getCubeIOBJoin("\n ", "true", "DATA wa_txt_[BW_IOBJ] \nTYPE ty_txt_[BW_IOBJ].", "", "\n", "")%>
<%=bwRef.getCubeIOBJoin("\n ", "true", "DATA it_txt_[BW_IOBJ] \nTYPE TABLE OF ty_txt_[BW_IOBJ].", "", "\n", "")%>

* Select statements for each IOBJ
* Add static WHERE
<%=
/*
Arguments:
"start",
"optionalPattern",
"cond",
"pStart", 
"pattern", 
"pSeperator", 
"pEnd", 
"subStart", 
"subPattern", 
"subSeperator", 
"subEnd",
"end"
*/
bwRef.getCubeIOBJoin("",
                        "",
                        "",
                        " \nSELECT ",
                        " [BW_IOBJ_WJ_COL] as [BW_CX_IOBJ_WJ_COL]",
                        " \n",
                        "FROM [BW_IOBJ_TAB] \n INTO CORRESPONDING FIELDS\n OF TABLE it_m[BW_IOBJ]\n for all entries in it_cube\n WHERE [BW_JOIN_IOBJ_COL] \n = it_cube-[BW_JOIN_IOBJ_COL]\n AND OBJVERS = 'A'\n and CHANGED ne 'D'",
                        " \n ",
                        " AND \n [FILTER_STMT] ",
                        " \n ",
                        "\n.",
                        "\n", "")
%>
* Select statement for each Text Table
* Add static WHERE
<%=
/*
Argiments: "<start>", 
           "<optionalPattern>", 
           "<cond>", 
           "<pstart>", 
           "<pattern>", 
           "<pSep>", 
           "<pEnd>", 
           "<subStart>", 
           "<subPattern>", 
           "<subSep>", 
           "<subEnd>", 
           "<End>"
*/
bwRef.getCubeIOBJoin("",
                        "",
                        "true",
                        " \nSELECT ",
                        " [BW_IOBJ_WJ_TXT_COL] as [BW_CX_IOBJ_WJ_TXT_COL]",
                        " \n",
                        "FROM [BW_IOBJ_TXT_TAB] \n INTO CORRESPONDING FIELDS\n OF TABLE it_txt_[BW_IOBJ]\n for all entries in it_m[BW_IOBJ] \n WHERE [BW_JOIN_IOBJ_TXT_COL] \n= it_m[BW_IOBJ]-[BW_CX_JOIN_IOBJ_TXT_COL]\n ",
                        " \n ",
                        " AND [FILTER_IOBJ_TXT_STMT] ",
                        " \n ",
                        ".\n",
                        "\n", "")
%>
* Join Loop for All InfoObjects- 
<%=
/*
Argiments: "<start>", 
           "<optionalPattern>", 
           "<cond>", 
           "<pstart>", 
           "<pattern>", 
           "<pSep>", 
           "<pEnd>", 
           "<subStart>", 
           "<subPattern>", 
           "<subSep>", 
           "<subEnd>", 
           "<End>"
*/
bwRef.getCubeIOBJoin("",
                        "\nit_[BW_IOBJ] = it_m[BW_IOBJ].\n",
                        "true",
                        " \n loop at it_m[BW_IOBJ] \ninto wa_m[BW_IOBJ].",
                        " wa_[BW_IOBJ]-[BW_CX_IOBJ_WJ_COL] \n= wa_m[BW_IOBJ]-[BW_CX_IOBJ_WJ_COL]. ",
                        " \n",
                        " \n ",
                        " loop at it_txt_[BW_IOBJ]\n into wa_txt_[BW_IOBJ]\n WHERE [BW_CX_JOIN_IOBJ_TXT_COL] \n= wa_m[BW_IOBJ]-[BW_CX_JOIN_IOBJ_COL] .\n ",
                        " wa_[BW_IOBJ]-[BW_CX_IOBJ_WJ_TXT_COL]  \n= wa_txt_[BW_IOBJ]-[BW_CX_IOBJ_WJ_TXT_COL].",
                        " \n ",
                        "\n APPEND wa_[BW_IOBJ] TO it_[BW_IOBJ].\n CLEAR: wa_txt_[BW_IOBJ], wa_m[BW_IOBJ].\n endloop.\n If wa_m[BW_IOBJ]\n is not initial.\n APPEND wa_[BW_IOBJ] TO it_[BW_IOBJ].\n endif.\n CLEAR: wa_[BW_IOBJ], wa_txt_[BW_IOBJ].\n endloop.",
                        "\n", 
                                                                                                "")
%>
****** End of Info Object retrieval

* Cube-IOBJ Join Code

loop at IT_CUBE into  WA_CUBE.
<%=bwRef.getCubeDetails("", "wa_final-[BW_FACT_TABLE]_[BW_KF_FNAME]\n = WA_CUBE-[BW_KF_FNAME]", ".\n", ".\n", "")%>
<%=bwRef.getCubeDetails("", "wa_final-[BW_WJ_SID_TABLE]_[BW_WJ_IOPK]\n = WA_CUBE-[BW_WJ_IOPK]", ".\n", ".\n", "")%>
<%=
/*
Argiments: "<start>", 
           "<optionalPattern>", 
           "<cond>",
           "<scond>" 
           "<pstart>", 
           "<pattern>", 
           "<pSep>", 
           "<pEnd>", 
           "<subStart>", 
           "<subPattern>", 
           "<subSep>", 
           "<subEnd>", 
           "<End>"
*/
bwRef.getCubeIOBJoin("",
                        "",
                        "",
                        "true",
                        " \nread table it_[BW_IOBJ] into \nwa_[BW_IOBJ] \nwith key [BW_CX_JOIN_IOBJ_COL] \n = WA_CUBE-[BW_JOIN_IOBJ_COL] .\nif sy-subrc = 0.\n",
                        " wa_final-[BW_IOBJ_TAB]_[BW_CX_IOBJ_COL]\n= wa_[BW_IOBJ]-[BW_CX_IOBJ_COL]. ",
                        " \n",
                        " \n ",
                        "",
                        "wa_final-[BW_IOBJ_TXT_TAB]_[BW_CX_IOBJ_TXT_COL] \n\n= wa_[BW_IOBJ]-[BW_CX_IOBJ_TXT_COL].",
                        " \n ",
                        "\n endif.",
                        "\n",
                                                                                                "")
%>

append wa_final to it_FINAL.
CLEAR: <%=bwRef.getCubeIOBJoin("", "wa_[BW_IOBJ]", ",\n", ",\n", "")%>
WA_CUBE.
endloop.

** End of Cube-IOBJ Join
<% }%>

** Start of Common Template
** Common section for all ABAP Template
<%odiSapBwLogger.fine("ODIKM-SAPBW-LKM-10000", "", new Object[] {"########## Common section...."} );%>
* Common ABAP code
*split lv_order1 at '~' into lv_order lv_order1 .
lv_delimiter = iv_delimiter.
if lv_cube = 'X'.
*IF it_final IS NOT INITIAL.
**25-07-2014
<%if(!bUseFTP){%>
IF it_final is INITIAL.
CONTINUE.
ENDIF.
<%}%>
**25-07-2014
LOOP AT it_final INTO wa_final.
<%=bwRef.getMappedColList(type, "MOVE wa_final-[COL_NAME]\n TO [COL_NAME]", ".\n", ".", "ALL_MAPPED",false)%>
<%if(leadingSigns) {/*Check for JDBC approach*/ %>
<%=bwRef.getMappedColList(type, "SHIFT [COL_NAME] UP TO '-' LEFT CIRCULAR.\n", "\n", "", "SOURCE_DT_ALLOWS_NEGATIVE",false)%>
<%}%>
CONCATENATE
<%=bwRef.getMappedColList(type, "[COL_NAME]", "\n", "","ALL_MAPPED",true)%>
INTO str_line separated by lv_delimiter.
concatenate str_line lv_delimiter into str_line.
**lv_ORDER = lv_ORDER1.
**DO.
**split lv_ORDER at '~' into lv_index lv_ORDER.
**Assign lv_index to <lv_index>.
**Assign lv_ORDER(1) to <lv_index>.
**int = <lv_index>.
**if int is initial.
**concatenate str_line iv_delimiter into str_line.
**exit.
**endif.
*lv_ORDER = lv_ORDER+2.
**ASSIGN COMPONENT int OF
**STRUCTURE wa_final TO <fs_field>.
**IF sy-subrc EQ 0.
**str_linef = <fs_field>.
**SHIFT str_linef left deleting leading space.
**CONCATENATE str_line str_linef INTO str_line
**SEPARATED BY lv_delimiter.
**CLEAR: str_linef, <fs_field>.
**ELSE.
**CONCATENATE STR_LINE IV_DELIMITER
**INTO STR_LINE.
**EXIT.
**ENDIF.
**ENDDO.
** START OF COLUMN SEPARATOR FIX, BUG:9298970 
<% if(((( bUseFTP) && (type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER))) || (( bUseFTP) && (type.equals(OdiSAPBWExtractMapping.ODSO))) || (( bUseFTP) && (type.equals(OdiSAPBWExtractMapping.WODSO)))) || (!bUseFTP)){%>
IF sy-tabix eq 1 and lv_cnt eq 1.
CONCATENATE '<@=""+(char)8@>' STR_LINE INTO STR_LINE.
ELSE.
CONCATENATE '<@=""+(char)8@>' lv_delimiter lv_delimiter
STR_LINE INTO STR_LINE.
ENDIF.
<% }else{%>
IF sy-tabix EQ 1.
CONCATENATE '<@=""+(char)8@>' STR_LINE INTO STR_LINE.
ELSE.
CONCATENATE '<@=""+(char)8@>' lv_delimiter lv_delimiter 
STR_LINE INTO STR_LINE.
ENDIF.
**IF sy-tabix eq 1 and lv_cnt eq 1.
**CONCATENATE '<@=""+(char)8@>' lv_delimiter 
**STR_LINE INTO STR_LINE.
**ELSE.
**CONCATENATE '<@=""+(char)8@>' lv_delimiter 
**STR_LINE INTO STR_LINE.
**ENDIF.
<% }%>
** END OF COLUMN SEPARATOR FIX, BUG:9298970
*CONDENSE str_line NO-GAPS.
data: int1 type i.
int1 = strlen( lv_delimiter ).
SHIFT str_line left by int1 places.
APPEND str_line TO gt_result.
CLEAR: wa_final , str_line.
ENDLOOP.
ELSE.
*IF it_final IS NOT INITIAL.
LOOP AT it_final INTO wa_final.
DO.
ASSIGN COMPONENT sy-index OF 
STRUCTURE wa_final TO <fs_field>.
IF sy-subrc EQ 0.
str_linef = <fs_field>.
SHIFT str_linef left deleting leading space.
CONCATENATE str_line str_linef INTO str_line
SEPARATED BY lv_delimiter.
*CLEAR: str_linef, <fs_field>.
ELSE.
CONCATENATE STR_LINE LV_DELIMITER 
INTO STR_LINE.
EXIT.
ENDIF.
ENDDO.
** START OF COLUMN SEPARATOR FIX, BUG:9298970  
IF sy-tabix ne 1.
CONCATENATE '<@=""+(char)8@>' lv_delimiter 
**iv_.. to lv_.. Amit
STR_LINE INTO STR_LINE.
ENDIF.
** END OF COLUMN SEPARATOR FIX, BUG:9298970
*CONDENSE str_line NO-GAPS.
int1 = strlen( lv_delimiter ).
**iv_.. to lv_.. Amit
SHIFT str_line left by int1 places.
APPEND str_line TO gt_result.
CLEAR: wa_final , str_line.
ENDLOOP.
endif.
<% if(type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) && odiRef.getOption("SQL_BASED_EXTRACTION").equals("0")){%>
refresh it_final.
CLEAR: it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>, wa_HIER_LIST, 
                   it_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%> .
endloop.
<% }else if(type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) && odiRef.getOption("SQL_BASED_EXTRACTION").equals("1") && (bUseFTP)) { 
/*To handle negative case, if user using FTP, but forgot to change SQL_BASED_EXTRACION = false*/%>
refresh it_final.
CLEAR: it_H<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%>, wa_HIER_LIST, 
                   it_<%=bwRef.getIOBHier("", "[BW_IOBHIER]", "", ".")%> .
endloop.
<%}else if((type.equals(OdiSAPBWExtractMapping.INFOCUBE) || type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN)) && (bUseFTP)) {%>
REFRESH it_final.
<%}if(( type.equals(OdiSAPBWExtractMapping.ODSO) || type.equals(OdiSAPBWExtractMapping.WODSO)) && (bUseFTP) ) { %>
ENDDO.
CLOSE CURSOR lv_dbcur.
**Error Handling for closing cursor
IF sy-subrc NE 0.
CLEAR et_file_return.
et_file_return-type = 'E'.
et_file_return-message =
'Error occured while close cursor command'.
APPEND et_file_return.
ENDIF.
<%}%>
<% if (bUseFTP) { %>
*****Start of FTP Specific*****
*Calling FTP program
DATA: lv_hdl TYPE i.

DATA: wa_final_string TYPE string.

DATA: lv_user TYPE char30,
      lv_pwd TYPE char30,
      lv_host TYPE char64,
      lv_cmd1 TYPE char80,
      lv_cmd2 TYPE char80,
                  
lv_cmd(120) TYPE c,
lv_slen TYPE i,
lv_line TYPE i .
DATA: lc_dest TYPE rfcdes-rfcdest VALUE 'SAPFTPA',
lc_key TYPE i VALUE 26101957,
lc_pasv VALUE 'X',
*lc_cmd1(20) TYPE c VALUE 'set passive on',
lc_cmd2(5) TYPE c VALUE 'put'.
TYPES: BEGIN OF ls_blob,
line(300) TYPE c,
END OF ls_blob.
TYPES: BEGIN OF ls_text,
line(300) TYPE c,
END OF ls_text.
DATA: lt_txtdata TYPE TABLE OF ls_text.
DATA: wa_txtdata LIKE LINE  OF lt_txtdata.
DATA: lt_result  TYPE TABLE OF ls_text,
*  Added for Bug 9800334. Starts here.
        lw_result  TYPE ls_text. 
*  Added for Bug 9800334. Ends here.
DATA: t_vers TYPE cvers .
DATA: path type char255.

*********************************
*Creating the file ************
*********************************
OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE
     ENCODING DEFAULT.
IF sy-subrc EQ 0.
**Deletng the Dataset
  DELETE DATASET lv_path.
ENDIF.

*********************************
*Appending the file ************
*********************************
                OPEN DATASET lv_path FOR APPENDING
     IN TEXT MODE
     ENCODING DEFAULT.
IF sy-subrc NE 0.
et_file_return-TYPE = gc_error.
et_file_return-message = 
'Error occurred when creating dataset'.
Append et_file_return.
et_file_return-message = 
'or Invalid file path'. 
Append et_file_return.
**25-07-2014
ELSE.
DATA lines TYPE char10.
DESCRIBE TABLE gt_result LINES lines.
<?if(bgp){?>
WRITE : / 'Number of rows : ' , lines,
'fetched.'.
<?}?>
**25-07-2014                     
LOOP AT gt_result INTO wa_final_string.
  TRANSFER wa_final_string TO lv_path.
  IF sy-subrc NE 0.
     et_file_return-TYPE = gc_error.
    et_file_return-message = 'Fail to write'.
    Append et_file_return.
ENDIF.
ENDLOOP.
CLOSE DATASET lv_path.

lv_user = iv_user.
lv_pwd = iv_pwd.
lv_host = iv_host.
CONCATENATE lc_cmd2 iv_filename
INTO lv_cmd2 SEPARATED BY ' '.
CONCATENATE 'cd' iv_path into lv_cmd1 SEPARATED BY SPACE.

SELECT SINGLE * FROM cvers INTO t_vers
WHERE component = 'SAP_ABA'.
lv_slen = STRLEN( iv_pwd ).
*Commented for BW3.5 porting
*IF t_vers-release = '700'. 
*To Scrammble password for ECC 6.0
CALL FUNCTION 'HTTP_SCRAMBLE'
EXPORTING
SOURCE      = iv_pwd
sourcelen   = lv_slen
key         = lc_key
IMPORTING
destination = iv_pwd.
*Commented for BW3.5 porting
*ELSE.
*To Scrammble password for 4.6C
*CALL 'AB_RFC_X_SCRAMBLE_STRING'
*ID 'SOURCE' FIELD iv_pwd ID 'KEY' FIELD lc_key
*ID 'SCR' FIELD 'X' ID'DESTINATION' FIELD iv_pwd
*ID 'DSTLEN' FIELD lv_slen.
*ENDIF.
CALL FUNCTION 'FTP_CONNECT'
EXPORTING
user            = iv_user
password        = iv_pwd
host            = iv_host
rfc_destination = lc_dest
IMPORTING
handle          = lv_hdl
EXCEPTIONS
not_connected   = 1
OTHERS          = 2.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
    WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 INTO 
    ET_FILE_RETURN-MESSAGE.
    CONCATENATE'Not connected to FTP Server:' 
    ET_FILE_RETURN-MESSAGE INTO ET_FILE_RETURN-MESSAGE 
    SEPARATED BY SPACE.
APPEND et_file_return.
ELSE.
free : gt_result.
CONCATENATE lc_cmd2 iv_filename
INTO lv_cmd SEPARATED BY ' '.
REFRESH lt_result.
CONCATENATE 'lcd' lv_pathname into path SEPARATED BY SPACE.
CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle  = lv_hdl
command  = PATH
TABLES
data  = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message = 'Error in passing FTP'.
APPEND et_file_return.
ENDIF.

CONCATENATE 'cd' iv_path into path SEPARATED BY SPACE.
CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle  = lv_hdl
command  = PATH
TABLES
data  = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message = 
'tcpip_error: in the FTP Path'.
APPEND et_file_return.
ENDIF.
CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle        = lv_hdl
command       = lv_cmd
TABLES
data          = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc NE 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message = 
'Error in passing FTP'.
APPEND et_file_return.
ELSE.
CLEAR et_file_return.
et_file_return-type = gc_success.
et_file_return-message = 
'Data Transfer Successful'.
**25-07-2014
<?if(bgp){?>
WRITE / et_file_return-message.
<?}?>
**25-07-2014
APPEND et_file_return.

*******************************************
**deleting FTP files
*******************************************
                OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE
     ENCODING DEFAULT.
IF sy-subrc EQ 0.
  DELETE DATASET lv_path.
ENDIF.

CALL FUNCTION 'FTP_DISCONNECT'
EXPORTING
handle = lv_hdl.
CALL FUNCTION 'RFC_CONNECTION_CLOSE'
EXPORTING
destination = lc_dest
EXCEPTIONS
OTHERS      = 1.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message =
'Error in RFC connection'.
APPEND et_file_return.
ENDIF.
ENDIF. 
ENDIF.
**25-07-2014
ENDIF.
**25-07-2014
<% } %> 




<? if(bgp){ ?>
LOOP AT et_file_return WHERE type = 'E'.
NEW-LINE.
CONCATENATE 'MSGTY:' et_file_return-type INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
NEW-LINE.
CONCATENATE 'MESSAGE:' et_file_return-message INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
CLEAR et_file_return.
ENDLOOP.
NEW-LINE.
WRITE :'Background Process Ended  at'.
NEW-LINE.
WRITE :'Time:',sy-uzeit.

*WAIT UP TO 500 SECONDS.
<?}?>
<% if(( type.equals(OdiSAPBWExtractMapping.ODSO) || type.equals(OdiSAPBWExtractMapping.WODSO)) && (bUseFTP) ){%>
*ENDDO.
*****End of FTP Specific*****
<%}%>
<% if (!bUseFTP) { %>
*****Start of FSMOUNT Specific*****
IF NOT gt_result IS INITIAL.
CLEAR wa_result.

LOOP AT gt_result INTO wa_result.
TRANSFER wa_result TO lv_path.
ENDLOOP.

ENDIF.
REFRESH : gt_result , it_final.
<% if(type.equals(OdiSAPBWExtractMapping.INFOCUBE) || type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN) ){%>
*ENDWHILE.
<%}if( !(type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) || type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN) || type.equals(OdiSAPBWExtractMapping.INFOCUBE)) ) {%>
                ENDDO.
<%}if(type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) && odiRef.getOption("SQL_BASED_EXTRACTION").equals("1")) {%>
ENDDO.
close cursor lv_dbcur.
CLEar lv_dbcur.
endloop.
<%}/*end of if(type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) && odiRef.getOption("SQL_BASED_EXTRACTION").equals("1"))*/%>
<% if(type.equals(OdiSAPBWExtractMapping.INFOCUBE) || type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN) ){%>
ENDWHILE.
clear g_end_of_data.
<%}%>
*Close dataset
CLOSE DATASET lv_path.

**Error Handling for closing dataset
IF sy-subrc NE 0.
CLEAR et_file_return.
et_file_return-type = 'E'.
et_file_return-message =
'Error occured in closing the dataset'.
APPEND et_file_return.
ENDIF.
<%if(!(type.equals(OdiSAPBWExtractMapping.INFOCUBE) || type.equals(OdiSAPBWExtractMapping.INFOOBJECT_HIER) || type.equals(OdiSAPBWExtractMapping.CUBE_IOBJ_JOIN))) {%>
CLOSE CURSOR lv_dbcur.
**Error Handling for closing cursor
IF sy-subrc NE 0.
CLEAR et_file_return.
et_file_return-type = 'E'.
et_file_return-message =
'Error occured while close cursor command'.
APPEND et_file_return.
ENDIF.
*****End of FSMOUNT Specific*****
<%}/*end of if (!(type.equals(OdiSAPBWExtractMapping.INFOCUBE)) ....*/ %>
<%}/*end of if(!bUseFTP)*/%>
"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1913]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[25088d5e-3414-48c3-ba7a-f7373f318786]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Download Data from FTP Server]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a19b9752-b245-4630-9052-880f04680460]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1913]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>

<%if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FTP")) {%>

OdiFtpGet  "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>"  "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>"  "-PASSWORD=<@=sFtpPasswordEnc@>" "-REMOTE_DIR=<?=sFtpPath?>"  "-REMOTE_FILE=<%=dataFileName%>"  "-LOCAL_DIR=<%=odiRef.getOption("TEMP_DIR")%>" "-LOCAL_FILE=<%=dataFileName%>"  "-PASSIVE_MODE=<%=odiRef.getOption("FTP_PASSIVE_MODE")%>"  "-TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>"

<% } else if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SFTP")) { %> 

OdiSftpGet  "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>"  "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>"  "-PASSWORD=<@=sFtpPasswordEnc@>" "-REMOTE_DIR=<?=sFtpPath?>"  "-REMOTE_FILE=<%=dataFileName%>"  "-LOCAL_DIR=<%=odiRef.getOption("TEMP_DIR")%>" "-LOCAL_FILE=<%=dataFileName%>"  <% if (odiRef.getOption("SSH_IDENTITY_FILE")!=null && odiRef.getOption("SSH_IDENTITY_FILE").length()>0 ) {%> 
"-IDENTITY_FILE=<%=odiRef.getOption("SSH_IDENTITY_FILE")%>" <%}%>  "-TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>"


<% } else if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SCP")) { %>

OdiScpGet  "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>"  "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>"  "-PASSWORD=<@=sFtpPasswordEnc@>" "-REMOTE_DIR=<?=sFtpPath?>"  "-REMOTE_FILE=<%=dataFileName%>"  "-LOCAL_DIR=<%=odiRef.getOption("TEMP_DIR")%>" "-LOCAL_FILE=<%=dataFileName%>"  "-IDENTITY_FILE=<%=odiRef.getOption("SSH_IDENTITY_FILE")%>"  "-TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>"


<% } else if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT")) { %>

OdiFileCopy  "-FILE=<?=sFtpLocalPath?><%=dataFileName%>"  "-TODIR=<%=odiRef.getOption("TEMP_DIR")%>" 

<% } else { /* FTP_TRANSFER_METHOD is NONE or FSMOUNT_DIRECT */ %>

OdiSleep "-DELAY=1"

<%}%>
<?}?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1914]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[18c1b9ac-1147-4190-aa0b-00242a308140]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[898]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Generate Loader Script]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8663ca54-e918-434d-93c8-1177633be479]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1914]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
<%
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class sqlldrColFormat {
    // This HashMap contains search key: <alias>.<col_name> and value: <source data type>
    static HashMap srcColDataTypes = new HashMap();

    public static String quoteReplacement(String s) {
    // quoteReplacement like in Java 1.6
    // This is needed, as BSh version only supports Java 1.5
        if ((s.indexOf((char)92) == -1) && (s.indexOf('$') == -1))
            return s;
        StringBuffer sb = new StringBuffer();
        for (int i=0; i<s.length(); i++) {
            char c = s.charAt(i);
            if (c == (char)92) {
                sb.append((char)92); sb.append((char)92);
            } else if (c == '$') {
                sb.append((char)92); sb.append('$');
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }

    public static String getPartiallyQuotedString( String in )  
    // Searches for "<Start Quoted>...<End Quoted>" in order to replace these strings
    // by odiRef.getQuotedString(...) of the string. This is required to pass [METADATA] 
    // from first % iteration to second % iteration. Otherwise invalid Java code is generated.
    { 
        // Compile regular expression
        Pattern pattern = Pattern.compile("<Start Quoted>(?:.)*?<End Quoted>", Pattern.DOTALL);
        Matcher matcher = pattern.matcher(in);

        // Replace all occurrences of pattern in input
        StringBuffer buf = new StringBuffer();
        boolean found = false;
        while ((found = matcher.find())) {
            // Get the match result
            String replaceStr = matcher.group();
            // Remove <?=odiRef.getObjectName ....?>
            replaceStr = replaceStr.replaceAll("<?(?:.)*?\?>","");
            // Insert replacement
            // Don't use appendReplacement, we do not want specail chars to be replaced
            matcher.appendReplacement(buf, "");
            buf.append( odiRef.getQuotedString ( replaceStr  ));
        }
        matcher.appendTail(buf);

        // Get result
        return buf.toString();
    }

    public static void addSrcTableMetadata( String popTabAlias, metadata )  
    // Extract column names and their datatype from metadata
    {
        String[] a = metadata.split("SNP"+(char)92+"$CRDWG_COL");
        int i;
        for (i=0;i<a.length;i++) { 
	String[] colInfo = a[i].split("SNP"+(char)92+"$CR"); 
	if (colInfo.length > 2 && colInfo[1].startsWith("COL_NAME")) { 
	  String colName = colInfo[1].substring(9);
	  String dataType = colInfo[2].substring(10);
	  srcColDataTypes.put( popTabAlias+"."+colName, dataType );
	}; 
        };
    }

    public static String ABAPDataType( String expr) 
    // Returns the ABAP data type of the column used in expr.
    // expr may only contain reference to a source single column
    // If no column is refereenced, an empty string will be returned.
    {
        // Go over all source columns
        Iterator iter = srcColDataTypes.keySet().iterator();
        while (iter.hasNext()) {
          String curCol = (String)iter.next();
          Pattern pattern = Pattern.compile((char)92+"b"+(char)92+"Q"+curCol+(char)92+"E"+(char)92+"b");
          Matcher matcher = pattern.matcher(expr);
          if (matcher.find()) { return srcColDataTypes.get(curCol); };
        };
        return "";
    }

    public static String get( String colName, srcDataType, destDataType, scale, expr) 
    // Returns format description for sqlldr
    {
        if (destDataType.startsWith("TIMESTAMP")) { 
            return  " TIMESTAMP(8)  " + (char)34 + "YYYYMMDD" + (char)34 + " NULLIF " + colName + " = " +(char)34 + "00000000" + (char)34;
        } else if ("DATE".equals(destDataType)) { 
            return  " DATE  "  + (char)34 + "YYYYMMDD" + (char)34 + " NULLIF " + colName + " = " +(char)34 + "00000000" + (char)34;            
        } else if ("NUMBER".equals(destDataType)||"FLOAT".equals(destDataType)||"REAL".equals(destDataType)||"BINARY_DOUBLE".equals(destDataType)||"BINARY_FLOAT".equals(destDataType)) { 
            String fractionFormat = "";
            if (!scale.equals("0") && !scale.equals("")) fractionFormat = "D999999999999999999999999";
            String signFormat = "MI";
            if (ABAPDataType( expr ).equals("NUMC")) signFormat = "";
            if (ABAPDataType( expr ).equals("FLTP")) {
                return  "  " + (char)34 + "TO_NUMBER(:" + colName + ", '9D99999999999999999999999999999999999999EEEE', 'NLS_NUMERIC_CHARACTERS=''.,''') " + (char)34;
            } else {
                return  "  " + (char)34 + "TO_NUMBER(:" + colName + ", '99999999999999999999999999999999999999" + fractionFormat + signFormat + "', 'NLS_NUMERIC_CHARACTERS=''.,''') " + (char)34;
            };
        } else {
            return "";
        }  
    }

}
%><%=sqlldrColFormat.getPartiallyQuotedString(
    odiRef.getSrcTablesList("<"+"%", " sqlldrColFormat.addSrcTableMetadata(\u0022[POP_TAB_ALIAS]\u0022, <Start Quoted>[METADATA]<End Quoted>); ", "", "%"+">")
) %>OdiOutFile "-File=<%=ctlFileName%>"
LOAD DATA
CHARACTERSET <?=sSapCharacterset?>
LENGTH SEMANTICS CHARACTER
INFILE '<%=dataFileOnAgent%>' "str '\n<@=""+(char)8@><%=odiRef.getOption("FIELD_SEPARATOR")%>'"
BADFILE  '<%=badFileName%>' 
DISCARDFILE '<%=dscFileName%>' 
DISCARDMAX <%=odiRef.getOption("MAX_ALLOWED_ERRORS")%>
INTO TABLE <%=odiRef.getTable("L", "COLL_NAME", "W")%>
FIELDS TERMINATED BY "<%=odiRef.getOption("FIELD_SEPARATOR")%>"
TRAILING NULLCOLS
(
	<%=map.removeDqsFromSourceColumnReferences(odiRef.getColList("", "[CX_COL_NAME]\t" + "<"+"%=sqlldrColFormat.get(\u0022[CX_COL_NAME]\u0022, \u0022[SOURCE_DT]\u0022, \u0022[DEST_DT]\u0022, \u0022[SCALE]\u0022, \u0022[EXPRESSION]\u0022 ) %"+">" , ",\n\t", "",""))%>
)
<?}?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1915]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[00048c72-41b7-4c54-a5f3-5ec59a488478]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[290]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Load Data to Staging]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d67d5b9d-4c42-4ecf-80cc-327bab3f1e90]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1915]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>

<?
/**
   * Checks the Target Data Server Name existance
**/
if ( odiRef.getInfo("DEST_DSERV_NAME")==null || odiRef.getInfo("DEST_DSERV_NAME").length()==0 ){
     OdiSapUtil.throwODIException("Oracle Instance name/ TNS name is not defined for Oracle target DataServer");
}
?>

import subprocess
import re
import os
outfile = r"""<%=outFileName%>"""
logfile = r"""<%=sqlldrLogFile%>"""
ctlfile = r"""<%=ctlFileName%>"""
try:
    outfileHandle = open( outfile, 'w' )
    loadcmd = r'''sqlldr <%=odiRef.getInfo("DEST_USER_NAME")%>/<%=odiRef.getInfo("DEST_PASS")%>@<%=odiRef.getInfo("DEST_DSERV_NAME")%> control="''' + ctlfile + '''" log="''' + logfile + '''" '''
    p = subprocess.Popen(loadcmd, shell=True, stdout=outfileHandle.fileno(), stderr=outfileHandle.fileno() )
    p.communicate()
    rc = p.returncode
    outfileHandle.close()
    
finally:
    if outfileHandle <> None:
        outfileHandle.close()

# Init Vars
nbIns = 0
nbRej = 0
nbNull = 0
strprt = ""
maxAllowedError = r"""<%=odiRef.getOption("MAX_ALLOWED_ERRORS")%>"""
c = 0
flag = 0

# Open log file
f = open(logfile, "r")
try:
	lines = f.readlines()
	for line in lines:
		if line.rstrip().upper().endswith(r"""<%=odiRef.getTable("L", "COLL_NAME", "W")%>:""".upper()):
			flag = 1
			c = 0
		if flag == 1:
			if c > 0 and c <= 4:
				if c == 1 :
					nbIns = int(re.findall("\d+", line)[0])
				elif c == 2:
					nbRej = int(re.findall("\d+", line)[0])
				elif c == 4:
					nbNull = int(re.findall("\d+", line)[0])
					break
		c+=1
	strprt = "\n\tIns:\t%s\n\tReject:\t%s\n\tNullField:\t%s" % (nbIns, nbRej, nbNull)
finally:
	f.close()

# if some rows has been rejected due to invalide data, check KM option MAX_ALLOWED_ERROR

if rc <> 0 and rc <> 2:
        raise "Load Error", "See %s for details" % logfile

if rc == 2:
	if nbRej > int(maxAllowedError):
		raise "\nThe rejected rows processed by SQLLDR are more than Maximum Allowed Error"
		break
<? } ?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1916]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d0e98f06-2166-4163-ad47-c36f712baefe]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[900]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[193]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2024-06-07 12:17:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Report number of rows]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8cbff01c-33bd-415a-a148-45d4a2cba01f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[1916]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[#setting number of Rows in the Operator
<?if(performExecute){?>
odiRef.setNbRows(nbIns);
<?}?>

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[536b9e78-eae6-466c-aed1-d3f6f291b6d9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d7d3200d-2bde-4fa8-aa0d-787d207c6b2e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[999c9426-d59c-4899-8b38-8f48fa608ab7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[83ed2bb2-b16e-419b-893b-387b69dd9c04]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[dd45d98a-1bd3-4b4c-8ffb-57e529b6bdcb]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[eb03f737-e230-4cb0-8339-2024abad8d3a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d6da2d3a-b6ba-40bc-a587-c1ae169ab355]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b78fc443-7ee1-4bb0-87f8-9c97b51d4ad9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8545956d-dbbb-40a1-b6d1-4a07b1be7c99]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1e8217c3-9499-4085-ad96-c928ee943863]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6c0eaf0c-a950-4757-ad5b-d07e33b78dbf]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[eb24cd97-adfd-4fcf-b87a-e3fa8f684e62]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[48e7009e-6c4c-4922-8478-6f37acc12e6a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[878]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[50e41083-38cf-4c8e-ba62-bb221ace5b30]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[879]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a2c30a9d-37f0-4484-a20b-2b1eb6173d78]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[881]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[eafbdf4f-b6a1-45f2-9231-f57d0e7011f8]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[885]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7cab61e5-1fdf-4832-b2a5-7b4ea16bfd49]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[886]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3332c028-7e23-4b5e-a619-5f7ad0a0d42e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[49aa9927-4d13-49b3-b4d7-c1072eee94ca]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ad9686d1-6c35-49b0-a73f-e785460366b4]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3c0e86fb-ada6-41ae-b324-8c24306dd019]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8dfd306c-b2f7-4b95-b4b7-4f3ad249b558]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c416f713-9899-4ada-b8a5-1f6dc5ef6d38]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0990b542-bbe9-4511-bc14-c98955cecff1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ab9596b3-09eb-461a-a9d4-4806f1c8169c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a8630383-e666-4f18-80eb-e0974731ed24]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c325764c-8c20-4867-9c93-a61562a61354]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2abfe0fd-342a-4fca-89e9-623118d61e0f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bf94080f-053c-4476-8921-ee7243b7f2d3]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[66196bdb-032e-4f4b-b6c9-675e7dd71d1d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[888]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[162421c5-88bb-4baa-9829-7cf4365093ac]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e7254559-8028-40f4-8d90-6dbcef3b8b55]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[69fbce92-3963-45f1-a2be-d840b3a170b7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4eee82db-6095-4636-a757-a5dcf7f227ae]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f99b95b3-c46a-4bb7-80ce-ea79c8e16219]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[009a11a4-6776-4717-97c3-c522ba41cace]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[afe5473f-dc8b-41a5-8cae-5bea407ef277]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[46fb0d51-d840-4d06-b769-ff8683459009]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d1cfc023-e60b-4803-aded-95dbcbb778e6]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bde07b01-e258-4a10-88a2-3b32b5fc9799]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0369c447-5a24-4be9-b180-a9e48912d469]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e509dca2-1de6-4387-9415-fa5e4593fdc7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6f86a6fd-27e0-4b3d-8f31-f354d9c2af33]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[891]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f825e81f-3373-4e1e-a2d9-5107aeaa0014]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b6871ac9-bde1-49e3-aec9-f11d5d05362b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9ed0ef76-3195-428c-9369-1f7d4889c0ba]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b80ca1ce-7157-489c-b2b4-3ece817ab801]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[00230947-ddea-4983-8883-8c7907fb41b9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e5af15ca-f1f0-4b29-89a3-f3ef02c5bd54]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ecda5e2a-575f-4c40-a084-8538eb3517b9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[477570e3-b181-401c-b5ef-2ce9f49b93dc]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9adf1075-92bc-4e40-b74d-88b1cb46a843]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8a77ba08-b4bd-4822-92c7-7754c3a4077b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2e6d0531-07a7-47b4-a7ac-733b834298b3]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b1fbc876-f946-4825-87e7-45c3970b4a53]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[aedae5a2-3b3e-4250-8c8b-d4a58b54d44a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[893]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[19acf5e2-8508-4835-bca4-3f197a6cdced]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e9b5c767-d9fc-4eab-9dcf-45c55f533ae5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[37efb44f-98e5-43f5-8d01-fc71754e41e8]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0881a1a7-81f0-43fe-ae24-2d4ad2fe10f9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e1a6ed5f-81f3-41fb-89e6-1ec59074f2a7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[dbdad108-b0b2-47d0-a90c-4d3b2e8c0935]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7ad7a83a-5928-4cbb-b751-1287ae6cdd1e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3b0c7305-db01-4442-ad60-ab43a7afeba9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[beb0e293-51e2-4ec3-b39c-e3233b705861]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[68326c80-0825-479c-ba46-a789471fc836]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2e4522fb-79bd-48d2-8606-31d9f56c0c03]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1d279a1d-753d-4b8f-84d0-cdb9736320e6]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[374d2f95-8dc8-4692-964a-c8e80a77e749]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[894]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bee86427-45b8-40bb-b4b9-077fbda488c1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[df743a86-22ba-4a38-86b4-28dc590f095b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[01744b19-b335-4416-9363-50de3af09b01]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[790d8c5d-317d-4a9f-b423-17379ecc6277]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[aff963fa-c89f-4f0f-95a7-87472ec81804]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6616594a-e5a2-4a1b-8bf5-1ca1d8f9719e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[07cfc608-567b-408a-a6fc-6973453bbd56]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2db52a0a-783f-4bbf-ae5c-24342609f2b8]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ed856e32-8f27-4f58-9357-19e0bfc49426]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[63cf3f6f-4458-4e14-ad88-3d1627f6d80e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e064b23a-6249-4b64-867f-bfedd6e9a55a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[909e8c47-9b43-4399-a63d-e4dd2df38596]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4e01e1ee-f136-4989-86fe-69710fe10304]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[895]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[afba6402-ead2-495b-90e7-359d704d4ca5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e01f7f2d-0305-4013-b68e-df16cf898e7d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9bfa2624-8f5a-4b5e-b4cd-2c47cc88894d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fa41377b-edfd-4bce-a1ca-da84e581a4b5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[41a4d861-ac76-4d21-9362-77088adb6c12]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ebc37e32-e1a6-4893-a882-75dbd013acc7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[15939c93-4b66-415a-92b5-ab56348676b1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[897204b1-daf4-490a-b35a-3271c16c47a1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9c133491-a62b-41a1-aa7b-4594b434c45c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6720120c-2b52-45e9-923c-3910fbd79b1e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9fb796a3-4e1a-4699-84e8-8375678a378f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e4bdde1b-7200-4897-a568-a0f110d6e532]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e824b38c-1bc9-4908-9c12-fbaef5fd78f1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[896]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9d3a0d50-8bb3-4e83-b9e1-cc52ba6f2d5b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[94e3671a-c003-480d-8459-cf12fe459263]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4e9d71ac-65bd-4024-b80d-456d911a4b01]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9aaba843-c851-4d17-a615-ee794a043acf]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a1a38165-710f-4e29-bfe1-c3a976fd5b1f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3472d52c-5415-402c-85a8-988a117a0f49]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[175b3f21-ce6e-4f56-a0ca-fdcfe92e8554]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[79386e9c-5d93-4da4-a7fc-edd04184b6f6]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6aea0f6c-2176-402f-9b3a-60379fd65260]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5f841289-3f06-4154-a579-f6575c08b54f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1c222dcb-45ea-4828-bb5a-a66d3b193093]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f123c834-9870-4abf-975d-3873fb4d10a4]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2f99de94-f419-468e-b8c0-03c93674078f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[897]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c9407e1f-69ac-404f-ac06-02fce78c404a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[697]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[194c34af-20c5-4e35-998f-d31f6419b6d7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[689]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ea35a3c5-3686-4485-b9b3-bc966fa32702]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[688]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[07c808f8-c163-45d2-b6e1-24fd9847d4c7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[669]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[acdeb8be-2042-4f76-b622-cb1c259ba2ff]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[671]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f58a0ed3-f897-4e2d-ac6b-f08def884b6b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[685]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[23463623-e054-4e60-ae67-3b8ec9a73fa1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[699]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5a316061-3479-468c-8e6d-504110ae5193]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[678]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3e33e1f0-bd80-49fe-aab0-b713bf227b78]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[696]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[141c09f2-133e-4206-9db8-24654a200a1c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[674]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2fdc2aa0-bf14-4f52-871b-594b63342a42]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[670]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fbaa635e-be32-4cd0-9934-beb48afe8d03]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[687]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ce686333-52cc-44aa-8618-d1c92b9768b2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[899]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[672]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_PROJECT.1]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4ce2203c-ac23-4018-a290-aa35c7238d53]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1856]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[377a84a4-c66d-45c0-86e0-58b5a3239b76]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.193]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f28ea15b-55e3-493f-8061-23906dbe483f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR)]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1857]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ce998dc8-c92a-4b28-bf3d-96394f224aa4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1858]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2af00eea-80c3-4cb6-9cc6-4a6664b76b35]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1859]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[764e163d-78ff-4905-9411-c7e700931831]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1860]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a08897ad-39fb-4831-831d-23955ecd6f77]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1861]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1317a278-e8b4-48ee-ae66-44ece52da514]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1862]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f7a252b9-cf3b-4097-ac11-ca2c87bb73c3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1863]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[aff00f50-f6bb-414f-9a04-82ecb10112f3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1864]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d5e4cc24-a5d1-47a8-ab0a-14119927ab55]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1865]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5bf313c3-3df9-44b1-b281-85e16e5a06f9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1866]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[081a927c-7d74-4f14-89e5-72cbcc11f8ba]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1867]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a97a4c2f-6cdd-49fd-85d7-d4391e022106]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1868]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c2f8e810-4891-4af7-904c-0388d27cdd7d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1869]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d4fdcca7-4561-4c52-8a15-38066e1c60df]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1870]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6767727f-5818-4b8b-9fbe-080b85d6826a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1871]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[cabf9e63-e8cf-4c8e-b2de-2ae1405a1a93]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1872]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[edfb4976-c685-4015-bb68-0953ac7fa942]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1873]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[97363cdc-3c2b-4756-890d-9f24a22ecda6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1874]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[db62a2a2-df9a-4d3b-8a1c-a3724932d041]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1875]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[46917d6d-ab2b-433d-89d9-8fd4744db053]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1876]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[798f5744-ac47-4f9b-9beb-48a8b125e845]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1877]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[23e74775-6c5d-4672-b62c-9b3717af1ace]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1878]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[94ffa99e-4a34-4797-9c56-e0ef30fb1e9c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1879]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b434d789-a06b-4fd3-8006-8c00d027dc1d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1880]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[05d1fbb5-6c2a-4dd6-ae4c-bf1d4316abcd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1881]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[77de271a-bfd4-4327-8c8c-96f37a32053d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1882]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[487cb89f-f4c6-4895-bd65-44af8044bbf8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1883]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[44526d61-918c-4be6-8442-f00dc6b81e7a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1884]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fe114aa6-0cd6-4f50-93ad-0bcb6d438481]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1885]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ee0a1f70-3d52-4ba6-8386-f528e79d3f33]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1887]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c6938538-6f3b-4622-8a50-7c22415c1b1d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1886]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1c1f13ee-c9c5-4715-a281-df1b94b37daf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1888]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f4cbf37f-3f4b-4488-84ee-b9b8e2a305c5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1889]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9d8189da-6bf2-4a5c-b4cc-36a4bd095ba0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1890]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4bd7caa0-f831-4ca0-917d-de7fd9088e54]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1891]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f1a0fe80-07a8-439a-a609-cc58392ee0f6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1892]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fdbe7d6a-3095-4491-b17c-6b4548855a03]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1893]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a15eca53-cb75-4bd1-af6a-cf24def1b721]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1894]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[13147bdf-ee5a-4b2f-9b75-526099f516e0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1895]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7abe54c5-ea0f-42f7-970d-4a5b5eedf46f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1896]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e91d5ac9-799f-4b4b-8caf-ebe4c05943b3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1897]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[97437f03-d8ef-4f66-944e-0e100108937a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1898]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2c492d37-bf19-4e74-a358-f02e108b6740]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1899]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[eff0d265-f0fb-44b4-b666-abebf97989c1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1900]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6f468b25-b131-4f07-bb7f-1173b34d8873]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1901]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[df900800-89a2-4a3f-bd4c-8ed4b955a134]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1902]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ecfa0c9e-f7ee-49ef-89cb-6021f4130ca8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1903]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ede61a79-2587-4ece-922c-602fd121e1ba]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1904]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c54ffbec-f889-4c08-bee6-5e4cf797477d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1905]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c3f08b0c-df6e-4d30-ab78-44ece391bd63]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1906]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[942805f5-6932-40c4-97fd-0ab18822f63c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1907]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6ba422f5-41dc-4aba-bdb3-f015ecf64e33]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1908]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d4df5771-e35e-44db-b87a-c2509bcacdc6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1909]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e482fb89-f8f3-4a94-9358-2eddecda19e1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1910]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[efcfc9fc-1856-40bc-9c9c-58a118aea384]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1911]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[25d7f96a-5936-4ca2-bbde-5e646fa7ddc5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1912]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0175365b-3515-47c8-82f7-abb38ad2f7b9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1913]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a19b9752-b245-4630-9052-880f04680460]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1914]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8663ca54-e918-434d-93c8-1177633be479]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1915]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d67d5b9d-4c42-4ecf-80cc-327bab3f1e90]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.1916]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8cbff01c-33bd-415a-a148-45d4a2cba01f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.669]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2b5bbf45-6430-4394-8595-2afd0113a352]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).VALIDATE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.878]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ebedec8f-58cd-40a5-98b1-f6e64a7868f9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Initialize]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.10]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.688]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[010a3480-ee6a-4f0a-854e-1f212722cc5a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).CHECK_DATA_FOR_DELIMITERS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.25]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.687]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6d7f49da-6a94-4c52-9be8-34c1adb8c3d7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).TRUNCATE_OHD_AFTER_EXTRACTION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.29]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.678]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8a147a69-8620-48c1-a401-f5e7529f1379]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).DELETE_TEMPORARY_OBJECTS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.672]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f2938756-ac57-43e1-bcdb-5ebb89bf6c0d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).EXECUTE_ABAP_CODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.689]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1cac6683-3b3a-4022-bae4-c7561d48c79a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).UPDATE_LAST_REQID]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.697]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0c9125b4-0ab7-43d8-b57a-6beb0b782089]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).FTP_PASSIVE_MODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.696]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e6f4467c-f61c-446a-be47-807272ec0a77]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).SQL_BASED_EXTRACTION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.685]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2cd81aca-a0ba-472d-89e5-e948ed300fbb]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).DATAFILE_PER_SESSION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.671]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1d6a3add-fba3-44a5-b1ba-96d5ac912eac]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).MANUAL_ABAP_CODE_UPLOAD]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.670]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[273dd09a-8097-4e70-96eb-a54a8eca879f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).UPLOAD_ABAP_CODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.674]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[68b32fd6-a3cb-4847-a833-1ab0078fd392]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).BACKGROUND_PROCESSING]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.21]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.699]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c53550e2-20b7-4581-87fd-41e9c5d3329a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).SSH_COMPRESSION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.879]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4bd3313c-9a0a-4a3c-86b9-c76a931ed3d2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Delete Temporary Files]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.881]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[65075759-caad-4638-8a93-1126a96b7f86]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Validate]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.885]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[39810a11-32e9-4aec-9546-dc9333bbbbfa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Drop Work Table]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.886]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ba5fb10e-b2f5-4a82-abec-cdb04b493b9f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Truncate OHD Table]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.18]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.888]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ff2540b1-9a61-4141-91b7-7e6a5bdb0e1c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Create Java Classes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.891]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2ef5f1af-82f4-487e-adc4-e445468f86e0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Get FTP Details]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.893]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ad9723cc-2ed4-45ec-805f-ab708c5560cf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Extract ODI Mapping]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.894]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[94a6ed7d-1e12-4c74-bde2-82d79ccbeed4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Delete FTP Files]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.895]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[83017381-18f2-441a-9775-933c1ab72e62]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Invoke Process Chain]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.896]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[59e0d23b-1355-4f86-afdd-36497c263383]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Extract Data]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.12]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.897]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[25088d5e-3414-48c3-ba7a-f7373f318786]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Download Data from FTP Server]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.29]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.899]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[00048c72-41b7-4c54-a5f3-5ec59a488478]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEV.LKM SAP BW to Oracle (SQLLDR).Load Data to Staging]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[3.29.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[61]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[181]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[61]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.09]]></Field>
</Object>
</SunopsisExport>
